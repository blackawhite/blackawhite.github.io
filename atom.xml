<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>水手</title>
  <subtitle>为之则易，不为则难</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wwww.yesokiloveyou.com/"/>
  <updated>2017-02-10T16:17:13.000Z</updated>
  <id>http://wwww.yesokiloveyou.com/</id>
  
  <author>
    <name>yangk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>海</title>
    <link href="http://wwww.yesokiloveyou.com/2017/02/10/dongchong/"/>
    <id>http://wwww.yesokiloveyou.com/2017/02/10/dongchong/</id>
    <published>2017-02-10T04:08:58.000Z</published>
    <updated>2017-02-10T16:17:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>2017刚开始就要过去了。<br><a id="more"></a><br><img src="/resources/images/20170210/2017021001.jpg"><br><img src="/resources/images/20170210/2017021002.jpg"><br><img src="/resources/images/20170210/2017021003.jpg"><br><img src="/resources/images/20170210/2017021004.jpg"><br><img src="/resources/images/20170210/2017021005.jpg"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017刚开始就要过去了。&lt;br&gt;
    
    </summary>
    
      <category term="Picture" scheme="http://wwww.yesokiloveyou.com/categories/Picture/"/>
    
    
      <category term="海" scheme="http://wwww.yesokiloveyou.com/tags/%E6%B5%B7/"/>
    
  </entry>
  
  <entry>
    <title>捋捋移动端</title>
    <link href="http://wwww.yesokiloveyou.com/2017/01/20/mobile/"/>
    <id>http://wwww.yesokiloveyou.com/2017/01/20/mobile/</id>
    <published>2017-01-19T17:06:43.000Z</published>
    <updated>2017-02-12T05:33:33.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="新手上路"><a href="#新手上路" class="headerlink" title="新手上路"></a>新手上路</h3><h4 id="UC下字体渲染问题"><a href="#UC下字体渲染问题" class="headerlink" title="UC下字体渲染问题"></a>UC下字体渲染问题</h4><p>此Bug出现极其诡异，那段时间真是怕了UC，因为指不定什么时候就会放大页面，有可能是加一个字，有可能是浮动了一个元素，也有可能是增加一个div…解决如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/* 官方解释：UC浏览器判断到页面上文字居多时，会自动放大字体优化移动用户体验。 */</div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"wap-font-scale"</span> <span class="attr">content</span>=<span class="string">"no"</span>&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h4 id="UC下图片不显示"><a href="#UC下图片不显示" class="headerlink" title="UC下图片不显示"></a>UC下图片不显示</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* UC手机浏览器会过滤包含ad字符的图片路径，禁止其显示，所以给图片命名或存放图片路径时 尽量不要含有ad字符，也可以关闭UC浏览器的广告过滤功能 */</span></div></pre></td></tr></table></figure>
<h4 id="Chrome模拟器自动注入Icon"><a href="#Chrome模拟器自动注入Icon" class="headerlink" title="Chrome模拟器自动注入Icon"></a>Chrome模拟器自动注入Icon</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 部分浏览器会给camara类名下的a自动注入相机图标，因此最好不要使用类似的关键字 */</span></div></pre></td></tr></table></figure>
<h4 id="闪屏"><a href="#闪屏" class="headerlink" title="闪屏"></a>闪屏</h4><p>消除transition闪屏的两种方法，注意是给运动的元素增加<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 设置内嵌的元素在3D空间如何呈现：保留3D */</span></div><div class="line"><span class="selector-tag">-webkit-transform-style</span>: <span class="selector-tag">preserve-3d</span>;</div></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 设置进行转换元素的背面在面对用户时隐藏（动画闪白问题的修复方案） */</span></div><div class="line"><span class="selector-tag">-webkit-backface-visibility</span>: <span class="selector-tag">hidden</span>;</div></pre></td></tr></table></figure>
<h4 id="横竖屏字体改变"><a href="#横竖屏字体改变" class="headerlink" title="横竖屏字体改变"></a>横竖屏字体改变</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* IOS浏览器横屏时会重置字体大小，设置text-size-adjust为none可以解决IOS上的问题，但桌面端Safari的字体缩放功能会失效，因此设置text-size-adjust:100%最佳 */</span></div><div class="line"><span class="comment">/* Chrome27之前的版本设置-webkit-text-size-adjust属性可以设置并显示小于12px的字体，之后取消了此属性，要想现实小于12px字体可以使用：transform: scale()方法 */</span></div><div class="line"><span class="comment">/* 碰到过微信中字体渲染的一个bug，既给不同地方的文字设置相同字号，显示的结果却不一样，解决办法也是设置-webkit-text-size-adjust: 100% */</span></div><div class="line"><span class="selector-tag">html</span>&#123;</div><div class="line">    <span class="attribute">-webkit-text-size-adjust</span>: <span class="number">100%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="怪异盒模型"><a href="#怪异盒模型" class="headerlink" title="怪异盒模型"></a>怪异盒模型</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 适用于使用怪异盒模型较多的情况，较少时还是单独设置最好，下面这样使用的好处是能实现继承 */</span></div><div class="line"><span class="selector-tag">html</span>&#123;</div><div class="line">    <span class="attribute">box-sizing</span>: border-box;</div><div class="line">&#125;</div><div class="line">*,*<span class="selector-pseudo">:before</span>,*<span class="selector-pseudo">:after</span>&#123;</div><div class="line">    <span class="attribute">box-sizing</span>: inherit;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="硬件加速"><a href="#硬件加速" class="headerlink" title="硬件加速"></a>硬件加速</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 有时候想开启硬件加速，但又不想对其他的功能造成影响 */</span></div><div class="line"><span class="selector-class">.box</span>&#123;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(0);</div><div class="line">    <span class="comment">/* 或... */</span></div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0,0,0);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="body-overflow-hidden失效"><a href="#body-overflow-hidden失效" class="headerlink" title="body overflow:hidden失效"></a>body overflow:hidden失效</h4><p>解决：给body加相对定位<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span> &#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">header</span> &#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">width</span>: <span class="number">200%</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0, 0, 0, .4);</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">section</span> &#123;</div><div class="line">        <span class="attribute">padding-top</span>: <span class="number">40px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#wrap</span> &#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="comment">/* -webkit-overflow-scrolling: touch;会导致header相对于body的定位失效 */</span></div><div class="line">        <span class="attribute">overflow-y</span>: scroll;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span>我是头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></div><div class="line">            1我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容1</div><div class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">html</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">        <span class="comment">/* position: relative; */</span></div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">body</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">section</span>&#123;</div><div class="line">        <span class="attribute">padding-top</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">box-sizing</span>: border-box;</div><div class="line">        <span class="attribute">-webkit-overflow-scrolling</span>: touch;</div><div class="line">        <span class="attribute">overflow-y</span>: auto;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">header</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">width</span>: <span class="number">200%</span>;<span class="comment">/* 左右滚动条 */</span></div><div class="line">        <span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(0,0,0,.4);</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>我是头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></div><div class="line">        1我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>2我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">oDiv.ontouchstart = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 传统方式绑定，Chrome中模拟有时不灵</span></div><div class="line">    <span class="comment">// ...  </span></div><div class="line">&#125;;</div><div class="line">oDiv.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 采用标准的绑定方式</span></div><div class="line">    <span class="comment">// ...</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="Fixed问题"><a href="#Fixed问题" class="headerlink" title="Fixed问题"></a>Fixed问题</h3><p>软键盘唤起后页面中的fixed元素失效或变成absolute的特性<br>解决1：isScroll.js<br>解决2：滚动页面中的main<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">header</span>,<span class="selector-tag">footer</span>,<span class="selector-tag">main</span> &#123;</div><div class="line">        <span class="attribute">display</span>: block;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">header</span> &#123;</div><div class="line">        <span class="comment">/* 注意 */</span></div><div class="line">        <span class="attribute">width</span>: <span class="number">200%</span>;</div><div class="line">        <span class="comment">/* absolute 时 body overflow:hidden失效，外面可以包一层解决 */</span></div><div class="line">        <span class="attribute">position</span>: fixed;</div><div class="line">        <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">background-color</span>: red;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">footer</span> &#123;</div><div class="line">        <span class="attribute">position</span>: fixed;</div><div class="line">        <span class="attribute">height</span>: <span class="number">34px</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">background-color</span>: pink;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">main</span> &#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">top</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">bottom</span>: <span class="number">34px</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">overflow-y</span>: scroll;</div><div class="line">        <span class="attribute">-webkit-overflow-scrolling</span>: touch;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- fixed定位的头部 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span> <span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 可以滚动的区域 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></div><div class="line">            1我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容</div><div class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">br</span>&gt;</span>我是内容1</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- fixed定位的底部 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Footer..."</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"submit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="缩放适配"><a href="#缩放适配" class="headerlink" title="缩放适配"></a>缩放适配</h3><p>统一限定一个目标宽，根据不同设备的screen.width去做缩放处理<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- &lt;meta name="viewport" content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"&gt; --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> w = <span class="built_in">window</span>.screen.width;</div><div class="line">        <span class="comment">// var w2 = document.documentElement.getBoundingClientRect().width;// 980</span></div><div class="line">        <span class="keyword">var</span> targetW = <span class="number">750</span>;</div><div class="line">        <span class="keyword">var</span> scale = w /  targetW;</div><div class="line">        <span class="keyword">var</span> meta = <span class="built_in">document</span>.createElement(<span class="string">"meta"</span>);</div><div class="line">        meta.name = <span class="string">"viewport"</span>;</div><div class="line">        meta.content = <span class="string">"user-scalable=no, initial-scale="</span>+ scale +<span class="string">", maximum-scale="</span>+ scale +<span class="string">", minimum-scale="</span>+ scale +<span class="string">""</span>;</div><div class="line">        <span class="built_in">document</span>.head.appendChild(meta);</div><div class="line">    &#125;)();</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">li</span>&#123;</div><div class="line">        <span class="attribute">list-style-type</span>: none;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.wrap</span>&#123;</div><div class="line">        <span class="attribute">padding-right</span>: <span class="number">12px</span>;</div><div class="line">        <span class="attribute">padding-left</span>: <span class="number">12px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.wrap</span> <span class="selector-tag">ul</span>&#123;</div><div class="line">        <span class="attribute">margin-right</span>: -<span class="number">7px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.wrap</span> <span class="selector-tag">li</span>&#123;</div><div class="line">        <span class="attribute">margin-top</span>: <span class="number">7px</span>;</div><div class="line">        <span class="attribute">margin-right</span>: <span class="number">7px</span>;</div><div class="line">        <span class="attribute">width</span>: <span class="number">176px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">168px</span>;</div><div class="line">        <span class="attribute">background-color</span>: red;</div><div class="line">        <span class="attribute">float</span>: left;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"aa.jpg"</span> <span class="attr">height</span>=<span class="string">"168"</span> <span class="attr">width</span>=<span class="string">"176"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"aa.jpg"</span> <span class="attr">height</span>=<span class="string">"168"</span> <span class="attr">width</span>=<span class="string">"176"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"aa.jpg"</span> <span class="attr">height</span>=<span class="string">"168"</span> <span class="attr">width</span>=<span class="string">"176"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"aa.jpg"</span> <span class="attr">height</span>=<span class="string">"168"</span> <span class="attr">width</span>=<span class="string">"176"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"aa.jpg"</span> <span class="attr">height</span>=<span class="string">"168"</span> <span class="attr">width</span>=<span class="string">"176"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"aa.jpg"</span> <span class="attr">height</span>=<span class="string">"168"</span> <span class="attr">width</span>=<span class="string">"176"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"aa.jpg"</span> <span class="attr">height</span>=<span class="string">"168"</span> <span class="attr">width</span>=<span class="string">"176"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"aa.jpg"</span> <span class="attr">height</span>=<span class="string">"168"</span> <span class="attr">width</span>=<span class="string">"176"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="REM适配"><a href="#REM适配" class="headerlink" title="REM适配"></a>REM适配</h3><p>等分deviceWidth的结果设置为根节点的fontSize，用REM适配，和淘宝的flexible同理<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> html = <span class="built_in">document</span>.documentElement;</div><div class="line">    <span class="keyword">var</span> hWidth = html.getBoundingClientRect().width;<span class="comment">// device = device-width</span></div><div class="line">    html.style.fontSize = hWidth / <span class="number">15</span> + <span class="string">"px"</span>;<span class="comment">// 说明15rem怼满，750设计稿的话除以50</span></div><div class="line">&#125;)();</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="Flex布局"><a href="#Flex布局" class="headerlink" title="Flex布局"></a>Flex布局</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 旧 */</span></div><div class="line"><span class="selector-tag">display</span>: <span class="selector-tag">-webkit-box</span>;</div><div class="line"><span class="selector-tag">-webkit-box-orient</span>: <span class="selector-tag">horizontal</span>;<span class="comment">/* 设置主轴方向为水平方向(默认) */</span></div><div class="line"><span class="selector-tag">-webkit-box-direction</span>: <span class="selector-tag">reverse</span>;<span class="comment">/* 只反序不靠右，一般需要配合-webkit-box-orient使用 */</span></div><div class="line"><span class="selector-tag">-webkit-box-pack</span>: <span class="selector-tag">start</span>;<span class="comment">/* 管理富裕空间：元素在主轴开始位置，富裕空间在主轴结束位置，老版相对新版缺失justify属性 */</span></div><div class="line"><span class="selector-tag">-webkit-box-align</span>: <span class="selector-tag">end</span>;<span class="comment">/* 侧轴富裕空间管理：主轴侧轴和-webkit-box-orient有关 */</span></div><div class="line"></div><div class="line"><span class="selector-tag">-webkit-box-flex</span>: 1;</div><div class="line"><span class="selector-tag">-webkit-box-ordinal-group</span>: 3;<span class="comment">/* 老版，最小值是1，比1小的也会处理成1 */</span></div><div class="line"><span class="comment">/* 新 */</span></div><div class="line"><span class="selector-tag">display</span>: <span class="selector-tag">flex</span>;</div><div class="line"><span class="selector-tag">flex-direction</span>: <span class="selector-tag">row</span>;<span class="comment">/* 设置主轴方向为水平方向(默认) */</span></div><div class="line"><span class="selector-tag">flex-direction</span>: <span class="selector-tag">row-reverse</span>;<span class="comment">/* 主轴元素排列方向(row-reverse:主轴为水平靠右并反序) */</span></div><div class="line"><span class="selector-tag">justify-content</span>: <span class="selector-tag">flex-start</span>;<span class="comment">/* 管理富裕空间：元素在主轴开始位置，富裕空间在主轴结束位置 */</span></div><div class="line"><span class="selector-tag">align-items</span>: <span class="selector-tag">flex-start</span>;<span class="comment">/* 侧轴富裕空间管理：主轴侧轴和flex-direction有关 */</span></div><div class="line"></div><div class="line"><span class="selector-tag">flex-grow</span>: 1;</div><div class="line"><span class="selector-tag">order</span>: 3;<span class="comment">/* 序号越小越靠前，支持0和负值 */</span></div></pre></td></tr></table></figure>
<h4 id="上下垂直居中"><a href="#上下垂直居中" class="headerlink" title="上下垂直居中"></a>上下垂直居中</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</div><div class="line">        <span class="comment">/* 新版 */</span></div><div class="line">        <span class="attribute">display</span>: flex;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">div</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">background-color</span>: green;</div><div class="line">        <span class="attribute">margin</span>: auto;<span class="comment">/*配合父级display:flex;*/</span></div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> html = <span class="built_in">document</span>.documentElement;</div><div class="line">        <span class="keyword">var</span> hWidth = html.getBoundingClientRect().width;<span class="comment">// device width</span></div><div class="line">        html.style.fontSize = hWidth / <span class="number">15</span> + <span class="string">"px"</span>;<span class="comment">// 15rem怼满，除以50，1rem=50px</span></div><div class="line">    &#125;)();</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span>&#123;</div><div class="line">        <span class="attribute">display</span>: -webkit-box;</div><div class="line">        <span class="attribute">display</span>: flex;</div><div class="line">        <span class="attribute">padding</span>: .<span class="number">4rem</span> .<span class="number">5rem</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span> <span class="selector-tag">div</span>&#123;</div><div class="line">        <span class="comment">/* 受内容长度的影响，解决width:0; */</span></div><div class="line">        <span class="attribute">width</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">-webkit-box-flex</span>: <span class="number">1</span>;</div><div class="line">        <span class="attribute">flex-grow</span>: <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span> <span class="selector-tag">div</span> <span class="selector-tag">a</span>&#123;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">0.44rem</span>;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#666</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">        <span class="attribute">text-decoration</span>: none;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">1.04rem</span>;</div><div class="line">        <span class="attribute">display</span>: block;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span> <span class="selector-tag">div</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">content</span>: <span class="string">""</span>;</div><div class="line">        <span class="attribute">display</span>: block;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">        <span class="attribute">width</span>: <span class="number">1.72rem</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">1.72rem</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#f00</span>;</div><div class="line">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</div><div class="line">        <span class="attribute">background</span>: <span class="built_in">url</span>(icon.png) no-repeat;</div><div class="line">        <span class="comment">/* 整图的大小 */</span></div><div class="line">        <span class="attribute">background-size</span>: <span class="number">9rem</span> <span class="number">3.6rem</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(1)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(2)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: -<span class="number">1.8rem</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(3)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: -<span class="number">3.6rem</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(4)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: -<span class="number">5.4rem</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(5)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: -<span class="number">7.2rem</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span><span class="selector-pseudo">:nth-of-type(2)</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(1)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">1.8rem</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span><span class="selector-pseudo">:nth-of-type(2)</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(2)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: -<span class="number">1.8rem</span> -<span class="number">1.8rem</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span><span class="selector-pseudo">:nth-of-type(2)</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(3)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: -<span class="number">3.6rem</span> -<span class="number">1.8rem</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span><span class="selector-pseudo">:nth-of-type(2)</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(4)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: -<span class="number">5.4rem</span> -<span class="number">1.8rem</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.rows</span><span class="selector-pseudo">:nth-of-type(2)</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(5)</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</div><div class="line">        <span class="attribute">background-position</span>: -<span class="number">7.2rem</span> -<span class="number">1.8rem</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"rows"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>聚划算<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"rows"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>聚划算<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>天猫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="媒介查询"><a href="#媒介查询" class="headerlink" title="媒介查询"></a>媒介查询</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">media</span> all and (min-width:<span class="number">500px</span>)&#123;<span class="comment">/* 大于等于 */</span></div><div class="line">    &lt;!<span class="selector-tag">--</span> ... <span class="selector-tag">--</span>&gt;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="阻止默认-ev-preventDefault"><a href="#阻止默认-ev-preventDefault" class="headerlink" title="阻止默认(ev.preventDefault())"></a>阻止默认(ev.preventDefault())</h3><h4 id="点透问题"><a href="#点透问题" class="headerlink" title="点透问题"></a>点透问题</h4><p>移动端的点透：当上层元素发生点击行为，下层元素也有点击特性，在300ms之内，如果上层元素消失或者隐藏，目标点也会漂移到下层元素身上，就会触发点击行为。<br>解决1：下层不要使用点击(焦点)特性的元素。<br>解决2：阻止默认事件，a链接被阻止了，不能跳转，需要人工跳转，解决IOS10 Safari下禁止缩放失效。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</div><div class="line">    ev.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">oDiv.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.display = <span class="string">"none"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> oA = <span class="built_in">document</span>.getElementById(<span class="string">"a"</span>);</div><div class="line">oA.addEventListener(<span class="string">'touchend'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">window</span>.location.href = <span class="string">"http://www.baidu.com"</span>;</div><div class="line">    <span class="comment">// window.open</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h4 id="缩放问题"><a href="#缩放问题" class="headerlink" title="缩放问题"></a>缩放问题</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IOS10下禁止缩放失效</div></pre></td></tr></table></figure>
<h4 id="html-overflow-hidden失效"><a href="#html-overflow-hidden失效" class="headerlink" title="html overflow:hidden失效"></a>html overflow:hidden失效</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IOS下body,html overflow:hidden失效</div></pre></td></tr></table></figure>
<h4 id="上下橡皮筋回弹效果"><a href="#上下橡皮筋回弹效果" class="headerlink" title="上下橡皮筋回弹效果"></a>上下橡皮筋回弹效果</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">禁止上下橡皮筋回弹效果</div></pre></td></tr></table></figure>
<h4 id="系统默认行为"><a href="#系统默认行为" class="headerlink" title="系统默认行为"></a>系统默认行为</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">禁止长按选中文字，选中图片，系统默认菜单等</div></pre></td></tr></table></figure>
<h3 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a>Transform</h3><h4 id="rotate"><a href="#rotate" class="headerlink" title="rotate()"></a>rotate()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div"</span>);</div><div class="line">    oDiv.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        oDiv.style.WebkitTransform = oDiv.style.transform = <span class="string">"rotate(90deg)"</span>;</div><div class="line">    &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="skew"><a href="#skew" class="headerlink" title="skew()"></a>skew()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div"</span>);</div><div class="line">    oDiv.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="comment">// 默认x轴</span></div><div class="line">        oDiv.style.WebkitTransform = oDiv.style.transform = <span class="string">"skew(40deg)"</span>;</div><div class="line">    &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="scale"><a href="#scale" class="headerlink" title="scale()"></a>scale()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div"</span>);</div><div class="line">    oDiv.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="comment">// 默认x和y都缩放</span></div><div class="line">        oDiv.style.WebkitTransform = div.style.transform = <span class="string">"scale(2)"</span>;</div><div class="line">    &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="translate"><a href="#translate" class="headerlink" title="translate()"></a>translate()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div"</span>);</div><div class="line">    oDiv.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="comment">// 只写一个参数x位移</span></div><div class="line">        oDiv.style.WebkitTransform = oDiv.style.transform = <span class="string">"translate(50px,50px)"</span>;</div><div class="line">        <span class="comment">// 默认transform-origin: center center;</span></div><div class="line">    &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="translate执行顺序问题"><a href="#translate执行顺序问题" class="headerlink" title="translate执行顺序问题"></a>translate执行顺序问题</h4><p>先写后执行<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div1"</span>);</div><div class="line">oDiv.style.cssText = <span class="string">"width: 100px;height: 100px;transition: 1s;background-color: red;"</span>;</div><div class="line"></div><div class="line">oDiv.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">// transform: translateX(500px) scale(.5);</span></div><div class="line">    <span class="comment">// 先写后执行，下面这种写法scale也会把translateX也缩放了一半</span></div><div class="line">    oDiv.style.WebkitTransform = oDiv.style.transform = <span class="string">"scale(.5) translateX(500px)"</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>先位移/缩放在矩阵中的不同实现<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>&#123;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">scaleX</span>(.5) <span class="built_in">translate</span>(100px,50px);</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">matrix</span>(.5,0,0,1,50,50);</div><div class="line">    </div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(100px,50px) <span class="built_in">scaleX</span>(.5);</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">matrix</span>(.5,0,0,1,100,50);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="translate模拟滑屏"><a href="#translate模拟滑屏" class="headerlink" title="translate模拟滑屏"></a>translate模拟滑屏</h4><p>方法1：elTranslateY = offsetTop + disPoint;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">body</span>&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">header</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#wrap</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">top</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#list</span>&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">list-style</span>: none;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#list</span> <span class="selector-tag">li</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">30px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">30px</span>;</div><div class="line">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</div><div class="line">        <span class="attribute">text-indent</span>: <span class="number">20px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        e.preventDefault();</div><div class="line">    &#125;);</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setListInner</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line">        <span class="keyword">var</span> inner = <span class="string">""</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">100</span>;i ++)&#123;</div><div class="line">            inner += <span class="string">"&lt;li&gt;"</span>+ i +<span class="string">"&lt;/li&gt;"</span>;</div><div class="line">        &#125;</div><div class="line">        list.innerHTML = inner;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        setListInner();</div><div class="line">        </div><div class="line">        <span class="keyword">var</span> oWrap = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap"</span>);</div><div class="line">        <span class="keyword">var</span> oList = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line"></div><div class="line">        oList.addEventListener(<span class="string">"touchstart"</span>,start);</div><div class="line">        oList.addEventListener(<span class="string">"touchmove"</span>,move);</div><div class="line"></div><div class="line">        <span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line">        <span class="keyword">var</span> movePoint = <span class="number">0</span>;</div><div class="line">        <span class="keyword">var</span> disPoint = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> offsetTop = <span class="number">0</span>;</div><div class="line">        <span class="keyword">var</span> elTranslateY = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            startPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line"></div><div class="line">            offsetTop = elTranslateY;</div><div class="line">        &#125;</div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            movePoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">            disPoint = movePoint - startPoint;</div><div class="line"></div><div class="line">            elTranslateY = offsetTop + disPoint;<span class="comment">// mark</span></div><div class="line"></div><div class="line">            oList.style.WebkitTransform = oList.style.transform = <span class="string">"translateY("</span>+ elTranslateY +<span class="string">"px)"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>滑屏<span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></div><div class="line">            </div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>方法2：startPoint = ev.changedTouches[0].pageY - offsetTop;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setListInner</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line">    <span class="keyword">var</span> inner = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">100</span>;i ++)&#123;</div><div class="line">        inner += <span class="string">"&lt;li&gt;"</span>+ i +<span class="string">"&lt;/li&gt;"</span>;</div><div class="line">    &#125;</div><div class="line">    list.innerHTML = inner;</div><div class="line">&#125;</div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    setListInner();</div><div class="line">    </div><div class="line">    <span class="keyword">var</span> oWrap = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap"</span>);</div><div class="line">    <span class="keyword">var</span> oList = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line"></div><div class="line">    oList.addEventListener(<span class="string">"touchstart"</span>,start);</div><div class="line">    oList.addEventListener(<span class="string">"touchmove"</span>,move);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> movePoint = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> offsetTop = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> disY = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">start</span>(<span class="params">ev</span>)</span>&#123;</div><div class="line">        startPoint = ev.changedTouches[<span class="number">0</span>].pageY - offsetTop;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">ev</span>)</span>&#123;</div><div class="line">        movePoint = ev.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">        disY = movePoint - startPoint;</div><div class="line">        offsetTop = disY;</div><div class="line">        oList.style.transform = <span class="string">"translateY("</span>+ disY +<span class="string">"px)"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<h4 id="获取transform"><a href="#获取transform" class="headerlink" title="获取transform"></a>获取transform</h4><h5 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">oDiv.style.WebkitTransform = oDiv.style.transform = <span class="string">"scale(.5) translateX(100px)"</span>;</div><div class="line"><span class="built_in">console</span>.log(getComputedStyle(oDiv)[<span class="string">"transform"</span>]);<span class="comment">// 矩阵：matrix(0.5, 0, 0, 0.5, 50, 0)</span></div><div class="line"><span class="built_in">console</span>.log(oDiv.style.transform);<span class="comment">// 字符串：scale(0.5) translateX(100px)</span></div></pre></td></tr></table></figure>
<h5 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h5><p>由于没有办法根据获取的matrix反推出角度，可以通过JS设置/获取<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">cssTransform</span>(<span class="params">element,attr,val</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(!element.transform)&#123;<span class="comment">// 不存在</span></div><div class="line">        element.transform = &#123;&#125;;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// &#123;translateX: 100, translateY: 50&#125;</span></div><div class="line">    <span class="comment">// 获取</span></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> val == <span class="string">"undefined"</span>)&#123;</div><div class="line">        <span class="keyword">var</span> val = element.transform[attr];</div><div class="line">        <span class="keyword">if</span>(!element.transform[attr])&#123;<span class="comment">// undefined的话，代表没有设置</span></div><div class="line">            <span class="keyword">switch</span>(attr)&#123;</div><div class="line">                <span class="keyword">case</span> <span class="string">"scale"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"scaleX"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"scaleY"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"scaleZ"</span>:</div><div class="line">                    element.transform[attr] = <span class="number">100</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">default</span>:<span class="comment">// 旋转，位移，斜切</span></div><div class="line">                    element.transform[attr] = <span class="number">0</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> element.transform[attr];<span class="comment">// 只能获取JS设置的，css中直接设置的获取不到，统一通过该方法设置和获取</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 设置</span></div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        element.transform[attr] = val;</div><div class="line">        <span class="comment">// element.style.WebkitTransform = element.style.transform = attr + "("+ val +"deg)";</span></div><div class="line">        <span class="keyword">var</span> transformVal = <span class="string">""</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> s <span class="keyword">in</span> element.transform)&#123;</div><div class="line">            <span class="comment">// console.log(s);</span></div><div class="line">            <span class="keyword">switch</span>(s)&#123;</div><div class="line">                <span class="keyword">case</span> <span class="string">"scale"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"scaleX"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"scaleY"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"scaleZ"</span>:</div><div class="line">                    transformVal += <span class="string">" "</span> + s + <span class="string">"("</span>+ element.transform[s] / <span class="number">100</span> +<span class="string">")"</span>;<span class="comment">// 高级浏览器会自动加空格，这里不能再用val了</span></div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="string">"rotate"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"rotateX"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"rotateY"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"rotateZ"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"skewX"</span>:</div><div class="line">                <span class="keyword">case</span> <span class="string">"skewY"</span>:</div><div class="line">                    transformVal += <span class="string">" "</span> + s + <span class="string">"("</span>+ element.transform[s] +<span class="string">"deg)"</span>;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">default</span>:<span class="comment">// 位移</span></div><div class="line">                    transformVal += <span class="string">" "</span> + s + <span class="string">"("</span>+ element.transform[s] +<span class="string">"px)"</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        element.style.WebkitTransform = element.style.transform = transformVal;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>现炒现卖：实现每次点击旋转30deg<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div"</span>);</div><div class="line">oDiv.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> deg = cssTransform(<span class="keyword">this</span>,<span class="string">"rotate"</span>);</div><div class="line">    deg += <span class="number">30</span>;</div><div class="line">    cssTransform(<span class="keyword">this</span>,<span class="string">"rotate"</span>,deg);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h4 id="关于矩阵"><a href="#关于矩阵" class="headerlink" title="关于矩阵"></a>关于矩阵</h4><p>matrix(a,b,c,d,e,f)，默认是matrix(1,0,0,1,0,0)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">位移：</div><div class="line">    x轴：</div><div class="line">        e + x</div><div class="line">    y轴：</div><div class="line">        f + y</div><div class="line"></div><div class="line">缩放：</div><div class="line">    x轴：</div><div class="line">        a = a * x(倍数)</div><div class="line">        c = c * x</div><div class="line">        e = e * x</div><div class="line">    y轴：</div><div class="line">        b = b * x</div><div class="line">        d = d * x</div><div class="line">        f = f * x</div><div class="line"></div><div class="line">斜切：</div><div class="line">    x轴：</div><div class="line">        c = Math.tan(deg * Math.PI / 180)// 接收的参数是弧度</div><div class="line">    y轴：</div><div class="line">        b = Math.tan(deg * Math.PI / 180)</div><div class="line"></div><div class="line">旋转：</div><div class="line">    a = Math.cos(deg * Math.PI / 180)</div><div class="line">    b = Math.sin(deg * Math.PI / 180)</div><div class="line">    c = - Math.sin(deg * Math.PI / 180)</div><div class="line">    d = Math.cos(deg * Math.PI / 180)</div></pre></td></tr></table></figure></p>
<p>举例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">div</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">background-color</span>: red;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        e.preventDefault();</div><div class="line">    &#125;);</div><div class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> a = <span class="number">1</span>;</div><div class="line">        <span class="keyword">var</span> b = <span class="number">0</span>;</div><div class="line">        <span class="keyword">var</span> c = <span class="number">0</span>;</div><div class="line">        <span class="keyword">var</span> d = <span class="number">1</span>;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">        deg = <span class="number">45</span>;</div><div class="line"></div><div class="line">        <span class="comment">// c = Math.tan(deg * Math.PI / 180)</span></div><div class="line">        <span class="comment">// oDiv.style.WebkitTransform = oDiv.style.transform = "skewX(45deg)";</span></div><div class="line">        <span class="comment">// oDiv.style.WebkitTransform = oDiv.style.transform = "matrix("+ a +","+ b +","+ c +","+ d +",0,0)";</span></div><div class="line"></div><div class="line">        a = <span class="built_in">Math</span>.cos(deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</div><div class="line">        b = <span class="built_in">Math</span>.sin(deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</div><div class="line">        c = - <span class="built_in">Math</span>.sin(deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</div><div class="line">        d = <span class="built_in">Math</span>.cos(deg * <span class="built_in">Math</span>.PI / <span class="number">180</span>);</div><div class="line">        <span class="comment">// oDiv.style.WebkitTransform = oDiv.style.transform = "rotate(45deg)";</span></div><div class="line">        oDiv.style.WebkitTransform = oDiv.style.transform = <span class="string">"matrix("</span>+ a +<span class="string">","</span>+ b +<span class="string">","</span>+ c +<span class="string">","</span>+ d +<span class="string">",0,0)"</span>;</div><div class="line">    &#125;;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="perspective"><a href="#perspective" class="headerlink" title="perspective"></a>perspective</h4><p>一般加在父级上，例如rotateX，rotateY需要加上景深才能看到效果<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-id">#wrap</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">50px</span>;</div><div class="line">        <span class="comment">/* 景深 */</span></div><div class="line">        <span class="attribute">-webkit-perspective</span>: <span class="number">200px</span>;</div><div class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#div1</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">background-color</span>: red;</div><div class="line">        <span class="attribute">transition</span>: <span class="number">1s</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        e.preventDefault();</div><div class="line">    &#125;);</div><div class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="comment">// rotate3d()</span></div><div class="line">        <span class="comment">// translate3d()</span></div><div class="line">        <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">        <span class="keyword">var</span> oWrap = <span class="built_in">document</span>.getElementById(<span class="string">"wrap"</span>);</div><div class="line">        oWrap.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="comment">// rotateX和rotateY要加景深才能看到效果</span></div><div class="line">            oDiv.style.WebkitTransform = oDiv.style.transform = <span class="string">"rotateY(60deg)"</span>;</div><div class="line">        &#125;);</div><div class="line">    &#125;;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="transform-style"><a href="#transform-style" class="headerlink" title="transform-style"></a>transform-style</h4><p><img src="/resources/images/transform-style.png" alt=""><br>元素在做3d变换时，是否保留子元素的3d变换<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-id">#wrap</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">50px</span>;</div><div class="line">        <span class="comment">/* 景深 */</span></div><div class="line">        <span class="attribute">-webkit-perspective</span>: <span class="number">200px</span>;        </div><div class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#div1</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">background-color</span>: red;</div><div class="line">        <span class="attribute">transition</span>: <span class="number">3s</span>;</div><div class="line">        <span class="comment">/* transform-style: flat; */</span></div><div class="line">        <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#div1</span> <span class="selector-tag">span</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">background-color</span>: yellow;</div><div class="line">        <span class="attribute">display</span>: block;</div><div class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(60deg);</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        e.preventDefault();</div><div class="line">    &#125;);</div><div class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">        <span class="keyword">var</span> oWrap = <span class="built_in">document</span>.getElementById(<span class="string">"wrap"</span>);</div><div class="line">        oWrap.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            oDiv.style.WebkitTransform = oDiv.style.transform = <span class="string">"rotateY(360deg)"</span>;</div><div class="line">        &#125;);</div><div class="line">    &#125;;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="perspective-origin"><a href="#perspective-origin" class="headerlink" title="perspective-origin"></a>perspective-origin</h4><p>视角方向，默认perspective-origin: center center;从中间看</p>
<h4 id="transform-origin"><a href="#transform-origin" class="headerlink" title="transform-origin"></a>transform-origin</h4><p>变换基准点</p>
<h4 id="backface-visibility"><a href="#backface-visibility" class="headerlink" title="backface-visibility"></a>backface-visibility</h4><p>隐藏背面：和父级角度相对的元素就是背面，例如一个元素transform: rotateY(180deg);<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-id">#wrap</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">-webkit-perspective</span>: <span class="number">200px</span>;</div><div class="line">        <span class="attribute">perspective</span>: <span class="number">200px</span>;</div><div class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#div1</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">transition</span>: <span class="number">3s</span>;</div><div class="line">        <span class="comment">/* transform-style: flat; */</span></div><div class="line">        <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#div1</span> <span class="selector-tag">span</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="comment">/* 同时隐藏了两个span旋转180deg时的情况 */</span></div><div class="line">        <span class="attribute">backface-visibility</span>: hidden;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#div1</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-of-type(1)</span>&#123;</div><div class="line">        <span class="attribute">top</span>: <span class="number">25px</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">25px</span>;</div><div class="line">        <span class="attribute">width</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">background-color</span>: red;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#div1</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123;</div><div class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">background-color</span>: green;</div><div class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(180deg);</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        e.preventDefault();</div><div class="line">    &#125;);</div><div class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        </div><div class="line">        <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">        <span class="keyword">var</span> oWrap = <span class="built_in">document</span>.getElementById(<span class="string">"wrap"</span>);</div><div class="line">        oWrap.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            oDiv.style.WebkitTransform = oDiv.style.transform = <span class="string">"rotateY(360deg)"</span>;</div><div class="line">        &#125;);</div><div class="line">    &#125;;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>正<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>反<span class="tag">&lt;/<span class="name">span</span>&gt;</span> </div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="旋转小Demo"><a href="#旋转小Demo" class="headerlink" title="旋转小Demo"></a>旋转小Demo</h4><p><img src="/resources/images/rotate.png" alt=""><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#wrap</span>&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</div><div class="line">        <span class="attribute">perspective</span>: <span class="number">200px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">        <span class="attribute">transition</span>: <span class="number">10s</span>;</div><div class="line">        <span class="comment">/* 元素在做3d变换时，保留子元素的3d变换 */</span></div><div class="line">        <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">span</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="attribute">backface-visibility</span>: hidden;</div><div class="line">        <span class="comment">/* 元素在做3d变换时，保留子元素的3d变换 */</span></div><div class="line">        <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-of-type(1)</span>&#123;</div><div class="line">        <span class="attribute">background-color</span>: green;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123;</div><div class="line">        <span class="attribute">background-color</span>: red;</div><div class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(180deg);</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">em</span>&#123;</div><div class="line">        <span class="attribute">display</span>: block;<span class="comment">/* 必须 */</span></div><div class="line">        <span class="attribute">font-style</span>: normal;</div><div class="line">        <span class="comment">/* 往前走 */</span></div><div class="line">        <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(20px);</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>正<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>反<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> oWrap = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap"</span>);</div><div class="line">    <span class="keyword">var</span> oBox = <span class="built_in">document</span>.querySelector(<span class="string">"#box"</span>);</div><div class="line">    oWrap.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        oBox.style.WebkitTransform = oBox.style.transform = <span class="string">"rotateY(720deg)"</span>;</div><div class="line">    &#125;);</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="MTween的使用"><a href="#MTween的使用" class="headerlink" title="MTween的使用"></a>MTween的使用</h4><p>回调<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</div><div class="line">fn1();</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    MTween(&#123;</div><div class="line">        <span class="attr">el</span>: oDiv,</div><div class="line">        <span class="attr">target</span>: &#123;</div><div class="line">            <span class="attr">scale</span>: <span class="number">0</span>,<span class="comment">// 先旋转再缩放</span></div><div class="line">            rotate: <span class="number">720</span></div><div class="line">        &#125;,</div><div class="line">        <span class="attr">time</span>: <span class="number">2000</span>,</div><div class="line">        <span class="attr">type</span>: <span class="string">"easeOut"</span>,</div><div class="line">        <span class="attr">callBack</span>: fn2</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    MTween(&#123;</div><div class="line">        <span class="attr">el</span>: oDiv,</div><div class="line">        <span class="attr">target</span>: &#123;</div><div class="line">            <span class="attr">scale</span>: <span class="number">100</span>,</div><div class="line">            <span class="attr">rotate</span>: <span class="number">0</span></div><div class="line">        &#125;,</div><div class="line">        <span class="attr">time</span>: <span class="number">2000</span>,</div><div class="line">        <span class="attr">type</span>: <span class="string">"easeOut"</span>,</div><div class="line">        <span class="attr">callBack</span>: fn1</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>综合运用<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#wrap</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">        <span class="attribute">perspective</span>: <span class="number">200px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#wrap</span> <span class="selector-tag">div</span>&#123;</div><div class="line">        <span class="comment">/* 元素3d变换时子元素也拥有 */</span></div><div class="line">        <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">width</span>: <span class="number">40%</span>;</div><div class="line">        <span class="attribute">top</span>: <span class="number">40%</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">30%</span>;</div><div class="line">        <span class="attribute">display</span>: none;</div><div class="line">        <span class="comment">/* 不能加在这里，因为后面这里用到transform:translateZ，和css中的冲突 */</span></div><div class="line">        <span class="comment">/* animation: rotate 2s linear infinite; */</span></div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#wrap</span> <span class="selector-tag">img</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">animation</span>: move <span class="number">1.5s</span> linear infinite;</div><div class="line">    &#125;</div><div class="line">    @<span class="keyword">keyframes</span> move&#123;</div><div class="line">        0%&#123;</div><div class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(0);</div><div class="line">        &#125;</div><div class="line">        100%&#123;</div><div class="line">            <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(360deg);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"img1"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./logo2.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"img2"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./logo3.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"m.Tween2.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> oImg1 = <span class="built_in">document</span>.querySelector(<span class="string">"#img1"</span>);</div><div class="line">    <span class="keyword">var</span> oImg2 = <span class="built_in">document</span>.querySelector(<span class="string">"#img2"</span>);</div><div class="line">    css(oImg1,<span class="string">"translateZ"</span>,<span class="number">-1000</span>);<span class="comment">// -1000是number类型的而非字符串</span></div><div class="line">    css(oImg2,<span class="string">"translateZ"</span>,<span class="number">-1000</span>);</div><div class="line">    fn1();</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        oImg2.style.display = <span class="string">"none"</span>;</div><div class="line">        oImg1.style.display = <span class="string">"block"</span>;</div><div class="line">        MTween(&#123;</div><div class="line">            <span class="attr">el</span>: oImg1,</div><div class="line">            <span class="attr">target</span>: &#123;</div><div class="line">                <span class="attr">translateZ</span>: <span class="number">0</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">time</span>: <span class="number">240</span>,</div><div class="line">            <span class="attr">type</span>: <span class="string">"easeIn"</span>,</div><div class="line">            <span class="attr">callBack</span>: fn2</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn2</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 收</span></div><div class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            MTween(&#123;</div><div class="line">                <span class="attr">el</span>: oImg1,</div><div class="line">                <span class="attr">target</span>: &#123;</div><div class="line">                    <span class="attr">translateZ</span>: <span class="number">-1000</span></div><div class="line">                &#125;,</div><div class="line">                <span class="attr">time</span>: <span class="number">1500</span>,</div><div class="line">                <span class="attr">type</span>: <span class="string">"easeOut"</span>,</div><div class="line">                <span class="attr">callBack</span>: fn3</div><div class="line">            &#125;);</div><div class="line">        &#125;,<span class="number">2000</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn3</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        oImg1.style.display = <span class="string">"none"</span>;</div><div class="line">        oImg2.style.display = <span class="string">"block"</span>;</div><div class="line">        MTween(&#123;</div><div class="line">            <span class="attr">el</span>: oImg2,</div><div class="line">            <span class="attr">target</span>: &#123;</div><div class="line">                <span class="attr">translateZ</span>: <span class="number">0</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">time</span>: <span class="number">240</span>,</div><div class="line">            <span class="attr">type</span>: <span class="string">"easeIn"</span>,</div><div class="line">            <span class="attr">callBack</span>: fn4</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn4</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 收</span></div><div class="line">        setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            MTween(&#123;</div><div class="line">                <span class="attr">el</span>: oImg2,</div><div class="line">                <span class="attr">target</span>: &#123;</div><div class="line">                    <span class="attr">translateZ</span>: <span class="number">-1000</span></div><div class="line">                &#125;,</div><div class="line">                <span class="attr">time</span>: <span class="number">1500</span>,</div><div class="line">                <span class="attr">type</span>: <span class="string">"easeOut"</span>,</div><div class="line">                <span class="attr">callBack</span>: fn1</div><div class="line">            &#125;);</div><div class="line">        &#125;,<span class="number">2000</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="模拟滑屏"><a href="#模拟滑屏" class="headerlink" title="模拟滑屏"></a>模拟滑屏</h3><h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><p>上中下分别绝对定位<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">body</span>,<span class="selector-tag">html</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">header</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#000</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">footer</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#000</span>;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#wrap</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">top</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">bottom</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#list</span>&#123;</div><div class="line">        <span class="attribute">list-style</span>: none;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#list</span> <span class="selector-tag">li</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">30px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">30px</span>;</div><div class="line">        <span class="attribute">text-indent</span>: <span class="number">30px</span>;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</div><div class="line">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span>好好学习<span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span>天天向上<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createList</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line">        <span class="keyword">var</span> inner = <span class="string">""</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">100</span>;i ++)&#123;</div><div class="line">            inner += <span class="string">"&lt;li&gt;这是第"</span>+ i +<span class="string">"个&lt;/li&gt;"</span>;</div><div class="line">        &#125;</div><div class="line">        list.innerHTML = inner;</div><div class="line">    &#125;</div><div class="line">    createList();</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="动起来"><a href="#动起来" class="headerlink" title="动起来"></a>动起来</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> startEl = <span class="number">0</span>;<span class="comment">// 元素按下时的坐标，即offsetTop</span></div><div class="line"></div><div class="line">css(list,<span class="string">"translateZ"</span>,<span class="number">0.01</span>);<span class="comment">// 开启硬件加速</span></div><div class="line"></div><div class="line">list.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    startPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    startEl = css(list,<span class="string">"translateY"</span>);<span class="comment">// 元素的初始位置，相当于pc端拖拽时获取的offsetTop</span></div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchmove"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> nowPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    <span class="keyword">var</span> dis = nowPoint - startPoint;</div><div class="line">    <span class="keyword">var</span> translateY = startEl + dis;<span class="comment">// 元素初始值加差值是移动距离</span></div><div class="line">    css(list,<span class="string">"translateY"</span>,translateY);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="滑屏缓冲"><a href="#滑屏缓冲" class="headerlink" title="滑屏缓冲"></a>滑屏缓冲</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> startEl = <span class="number">0</span>;<span class="comment">// 元素按下时的坐标，即offsetTop</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> lastDis = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastY = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastTime = <span class="number">0</span>;<span class="comment">// 上一次时间</span></div><div class="line"><span class="keyword">var</span> lastTimeDis = <span class="number">0</span>;<span class="comment">// 时间差</span></div><div class="line"></div><div class="line">css(list,<span class="string">"translateZ"</span>,<span class="number">0.01</span>);<span class="comment">// 开启硬件加速</span></div><div class="line"></div><div class="line">list.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    startPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    startEl = css(list,<span class="string">"translateY"</span>);</div><div class="line"></div><div class="line">    lastY = startEl;</div><div class="line">    lastTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line">    lastDis = <span class="number">0</span>;</div><div class="line">    lastTimeDis = <span class="number">0</span>;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchmove"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> nowPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    <span class="keyword">var</span> dis = nowPoint - startPoint;</div><div class="line">    <span class="keyword">var</span> translateY = startEl + dis;<span class="comment">// 元素初始值减差值是移动距离</span></div><div class="line">    css(list,<span class="string">"translateY"</span>,translateY);</div><div class="line"></div><div class="line">    lastDis = translateY - lastY;<span class="comment">// 距离</span></div><div class="line">    lastY = translateY;</div><div class="line">    lastTimeDis = nowTime - lastTime;<span class="comment">// 时间</span></div><div class="line">    lastTime = nowTime;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="comment">// console.log(lastDis,lastTimeDis);</span></div><div class="line">    <span class="comment">// 速度 = 距离 / 时间</span></div><div class="line">    <span class="keyword">var</span> speed = <span class="built_in">Math</span>.round(lastDis / lastTimeDis * <span class="number">10</span>);<span class="comment">// 乘以10可以放到下面直接乘300吗</span></div><div class="line">    <span class="keyword">var</span> target = <span class="built_in">Math</span>.round(speed * <span class="number">30</span> + css(list,<span class="string">"translateY"</span>));</div><div class="line">    <span class="comment">// console.log(target);</span></div><div class="line">    MTween(&#123;</div><div class="line">        <span class="attr">el</span>: list,</div><div class="line">        <span class="attr">target</span>: &#123;</div><div class="line">            <span class="attr">translateY</span>: target</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">time</span>: <span class="built_in">Math</span>.abs(<span class="built_in">parseInt</span>(target * <span class="number">1.5</span>)),</div><div class="line">        <span class="attr">type</span>: <span class="string">"easeOut"</span></div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="解决按下再抬起不动"><a href="#解决按下再抬起不动" class="headerlink" title="解决按下再抬起不动"></a>解决按下再抬起不动</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> startEl = <span class="number">0</span>;<span class="comment">// 元素按下时的坐标，即offsetTop</span></div><div class="line"><span class="keyword">var</span> lastDis = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastY = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastTime = <span class="number">0</span>;<span class="comment">// 上一次时间</span></div><div class="line"><span class="keyword">var</span> lastTimeDis = <span class="number">0</span>;<span class="comment">// 时间差</span></div><div class="line"></div><div class="line">css(list,<span class="string">"translateZ"</span>,<span class="number">0.01</span>);<span class="comment">// 开启硬件加速</span></div><div class="line"></div><div class="line">list.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    startPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    startEl = css(list,<span class="string">"translateY"</span>);<span class="comment">// 元素的初始位置，相当于pc端拖拽时获取的offsetTop</span></div><div class="line"></div><div class="line">    lastY = startEl;</div><div class="line">    lastTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line">    lastDis = <span class="number">0</span>;</div><div class="line">    lastTimeDis = <span class="number">0</span>;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchmove"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> nowPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    <span class="keyword">var</span> dis = nowPoint - startPoint;</div><div class="line">    <span class="keyword">var</span> translateY = startEl + dis;<span class="comment">// 元素初始值减差值是移动距离</span></div><div class="line">    css(list,<span class="string">"translateY"</span>,translateY);</div><div class="line"></div><div class="line">    lastDis = translateY - lastY;<span class="comment">// 距离</span></div><div class="line">    lastY = translateY;</div><div class="line">    lastTimeDis = nowTime - lastTime;<span class="comment">// 时间</span></div><div class="line">    lastTime = nowTime;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="comment">// console.log(lastDis,lastTimeDis);</span></div><div class="line">    <span class="comment">// 速度 = 距离 / 时间</span></div><div class="line">    <span class="keyword">var</span> speed = <span class="built_in">Math</span>.round(lastDis / lastTimeDis * <span class="number">10</span>);<span class="comment">// 乘以10可以放到下面直接乘300吗</span></div><div class="line">    speed = lastTimeDis &lt;= <span class="number">0</span> ? <span class="number">0</span> : speed;<span class="comment">// 负的时间差</span></div><div class="line">    </div><div class="line">    <span class="keyword">var</span> target = <span class="built_in">Math</span>.round(speed * <span class="number">30</span> + css(list,<span class="string">"translateY"</span>));</div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 按下再抬起时这里是NaN，一个数除以了0，0/0是NaN，1/0是无限制</span></div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 所以按下再抬起时这里也是NaN</span></div><div class="line">    MTween(&#123;</div><div class="line">        <span class="attr">el</span>: list,</div><div class="line">        <span class="attr">target</span>: &#123;</div><div class="line">            <span class="attr">translateY</span>: target</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">time</span>: <span class="built_in">Math</span>.abs(<span class="built_in">parseInt</span>(target * <span class="number">1.5</span>)),</div><div class="line">        <span class="attr">type</span>: <span class="string">"easeOut"</span></div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="限制范围"><a href="#限制范围" class="headerlink" title="限制范围"></a>限制范围</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> wrap = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap"</span>);</div><div class="line"><span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> startEl = <span class="number">0</span>;<span class="comment">// 元素按下时的坐标，即offsetTop</span></div><div class="line"><span class="keyword">var</span> lastDis = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastY = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastTime = <span class="number">0</span>;<span class="comment">// 上一次时间</span></div><div class="line"><span class="keyword">var</span> lastTimeDis = <span class="number">0</span>;<span class="comment">// 时间差</span></div><div class="line"><span class="keyword">var</span> maxTranslate = wrap.clientHeight - list.offsetHeight;</div><div class="line">css(list,<span class="string">"translateZ"</span>,<span class="number">0.01</span>);<span class="comment">// 开启硬件加速</span></div><div class="line"></div><div class="line">list.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    maxTranslate = wrap.clientHeight - list.offsetHeight;<span class="comment">// start时可能添加内容进去，重新来一次</span></div><div class="line">    clearInterval(list.timer);</div><div class="line"></div><div class="line">    startPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    startEl = css(list,<span class="string">"translateY"</span>);<span class="comment">// 元素的初始位置，相当于pc端拖拽时获取的offsetTop</span></div><div class="line"></div><div class="line">    lastY = startEl;</div><div class="line">    lastTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line">    lastDis = <span class="number">0</span>;</div><div class="line">    lastTimeDis = <span class="number">0</span>;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchmove"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> nowPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    <span class="keyword">var</span> dis = nowPoint - startPoint;</div><div class="line">    <span class="keyword">var</span> translateY = startEl + dis;<span class="comment">// 元素初始值减差值是移动距离</span></div><div class="line">    css(list,<span class="string">"translateY"</span>,translateY);</div><div class="line"></div><div class="line">    lastDis = translateY - lastY;<span class="comment">// 距离</span></div><div class="line">    lastY = translateY;</div><div class="line">    lastTimeDis = nowTime - lastTime;<span class="comment">// 时间</span></div><div class="line">    lastTime = nowTime;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> type = <span class="string">"easeOut"</span>;</div><div class="line">    <span class="comment">// console.log(lastDis,lastTimeDis);</span></div><div class="line">    <span class="comment">// 速度 = 距离 / 时间</span></div><div class="line">    <span class="keyword">var</span> speed = <span class="built_in">Math</span>.round(lastDis / lastTimeDis * <span class="number">10</span>);<span class="comment">// 乘以10可以放到下面直接乘300吗</span></div><div class="line">    speed = lastTimeDis &lt;= <span class="number">0</span> ? <span class="number">0</span> : speed;<span class="comment">// 负的时间差</span></div><div class="line">    </div><div class="line">    <span class="keyword">var</span> target = <span class="built_in">Math</span>.round(speed * <span class="number">30</span> + css(list,<span class="string">"translateY"</span>));</div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 按下再抬起时这里是NaN，一个数除以了0，0/0是NaN，1/0是无限制</span></div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 所以按下再抬起时这里也是NaN</span></div><div class="line">    <span class="keyword">if</span>(target &gt; <span class="number">0</span>)&#123;<span class="comment">// 超出了</span></div><div class="line">        target = <span class="number">0</span>;</div><div class="line">        type = <span class="string">"backOut"</span>;<span class="comment">// 回弹</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(target &lt; maxTranslate)&#123;</div><div class="line">        target = maxTranslate;</div><div class="line">        type = <span class="string">"backOut"</span>;</div><div class="line">    &#125;</div><div class="line">    MTween(&#123;</div><div class="line">        <span class="attr">el</span>: list,</div><div class="line">        <span class="attr">target</span>: &#123;</div><div class="line">            <span class="attr">translateY</span>: target</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">time</span>: <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.abs(target - css(list,<span class="string">"translateY"</span>)) * <span class="number">1.5</span>),<span class="comment">//</span></div><div class="line">        type: type</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="添加滚动条"><a href="#添加滚动条" class="headerlink" title="添加滚动条"></a>添加滚动条</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> wrap = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap"</span>);</div><div class="line"><span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> scrollBar = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line"><span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> startEl = <span class="number">0</span>;<span class="comment">// 元素按下时的坐标，即offsetTop</span></div><div class="line"><span class="keyword">var</span> lastDis = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastY = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastTime = <span class="number">0</span>;<span class="comment">// 上一次时间</span></div><div class="line"><span class="keyword">var</span> lastTimeDis = <span class="number">0</span>;<span class="comment">// 时间差</span></div><div class="line"><span class="keyword">var</span> maxTranslate = wrap.clientHeight - list.offsetHeight;</div><div class="line">scrollBar.style.cssText = <span class="string">"width:6px;background:rgba(0,0,0,.5);position:absolute;top:0;right:0;border-radius:3px;height:100px;opacity:0;transition:.3s opacity;"</span>;</div><div class="line">wrap.appendChild(scrollBar);</div><div class="line"></div><div class="line">css(list,<span class="string">"translateZ"</span>,<span class="number">0.01</span>);<span class="comment">// 开启硬件加速</span></div><div class="line"></div><div class="line">list.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    maxTranslate = wrap.clientHeight - list.offsetHeight;<span class="comment">// start时可能添加内容进去，重新来一次</span></div><div class="line">    clearInterval(list.timer);</div><div class="line"></div><div class="line">    startPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    startEl = css(list,<span class="string">"translateY"</span>);<span class="comment">// 元素的初始位置，相当于pc端拖拽时获取的offsetTop</span></div><div class="line"></div><div class="line">    lastY = startEl;</div><div class="line">    lastTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line">    lastDis = <span class="number">0</span>;</div><div class="line">    lastTimeDis = <span class="number">0</span>;</div><div class="line"></div><div class="line">    scrollBar.style.opacity = <span class="number">1</span>;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchmove"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> nowPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    <span class="keyword">var</span> dis = nowPoint - startPoint;</div><div class="line">    <span class="keyword">var</span> translateY = startEl + dis;<span class="comment">// 元素初始值减差值是移动距离</span></div><div class="line">    css(list,<span class="string">"translateY"</span>,translateY);</div><div class="line"></div><div class="line">    lastDis = translateY - lastY;<span class="comment">// 距离</span></div><div class="line">    lastY = translateY;</div><div class="line">    lastTimeDis = nowTime - lastTime;<span class="comment">// 时间</span></div><div class="line">    lastTime = nowTime;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> type = <span class="string">"easeOut"</span>;</div><div class="line">    <span class="comment">// console.log(lastDis,lastTimeDis);</span></div><div class="line">    <span class="comment">// 速度 = 距离 / 时间</span></div><div class="line">    <span class="keyword">var</span> speed = <span class="built_in">Math</span>.round(lastDis / lastTimeDis * <span class="number">10</span>);<span class="comment">// 乘以10可以放到下面直接乘300吗</span></div><div class="line">    speed = lastTimeDis &lt;= <span class="number">0</span> ? <span class="number">0</span> : speed;<span class="comment">// 负的时间差</span></div><div class="line">    </div><div class="line">    <span class="keyword">var</span> target = <span class="built_in">Math</span>.round(speed * <span class="number">30</span> + css(list,<span class="string">"translateY"</span>));</div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 按下再抬起时这里是NaN，一个数除以了0，0/0是NaN，1/0是无限制</span></div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 所以按下再抬起时这里也是NaN</span></div><div class="line">    <span class="keyword">if</span>(target &gt; <span class="number">0</span>)&#123;<span class="comment">// 超出了</span></div><div class="line">        target = <span class="number">0</span>;</div><div class="line">        type = <span class="string">"backOut"</span>;<span class="comment">// 回弹</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(target &lt; maxTranslate)&#123;</div><div class="line">        target = maxTranslate;</div><div class="line">        type = <span class="string">"backOut"</span>;</div><div class="line">    &#125;</div><div class="line">    MTween(&#123;</div><div class="line">        <span class="attr">el</span>: list,</div><div class="line">        <span class="attr">target</span>: &#123;</div><div class="line">            <span class="attr">translateY</span>: target</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">time</span>: <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.abs(target - css(list,<span class="string">"translateY"</span>)) * <span class="number">1.5</span>),<span class="comment">//</span></div><div class="line">        type: type,</div><div class="line">        <span class="attr">callBack</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            scrollBar.style.opacity = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="运动滚动条"><a href="#运动滚动条" class="headerlink" title="运动滚动条"></a>运动滚动条</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> wrap = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap"</span>);</div><div class="line"><span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> scrollBar = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line"><span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> startEl = <span class="number">0</span>;<span class="comment">// 元素按下时的坐标，即offsetTop</span></div><div class="line"><span class="keyword">var</span> lastDis = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastY = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastTime = <span class="number">0</span>;<span class="comment">// 上一次时间</span></div><div class="line"><span class="keyword">var</span> lastTimeDis = <span class="number">0</span>;<span class="comment">// 时间差</span></div><div class="line"><span class="keyword">var</span> maxTranslate = wrap.clientHeight - list.offsetHeight;</div><div class="line"><span class="keyword">var</span> scale = wrap.clientHeight / list.offsetHeight;</div><div class="line"></div><div class="line">scrollBar.style.cssText = <span class="string">"width:6px;background:rgba(0,0,0,.5);position:absolute;top:0;right:0;border-radius:3px;opacity:0;transition:.3s opacity;"</span>;</div><div class="line">wrap.appendChild(scrollBar);</div><div class="line"></div><div class="line">css(list,<span class="string">"translateZ"</span>,<span class="number">0.01</span>);<span class="comment">// 开启硬件加速</span></div><div class="line"></div><div class="line">list.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    maxTranslate = wrap.clientHeight - list.offsetHeight;<span class="comment">// start时可能添加内容进去，重新来一次</span></div><div class="line">    scale = wrap.clientHeight / list.offsetHeight;<span class="comment">// 会变化重新取一下</span></div><div class="line">    scrollBar.style.height = wrap.clientHeight * scale + <span class="string">"px"</span>;</div><div class="line"></div><div class="line">    clearInterval(list.timer);</div><div class="line"></div><div class="line">    startPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    startEl = css(list,<span class="string">"translateY"</span>);<span class="comment">// 元素的初始位置，相当于pc端拖拽时获取的offsetTop</span></div><div class="line"></div><div class="line">    lastY = startEl;</div><div class="line">    lastTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line">    lastDis = <span class="number">0</span>;</div><div class="line">    lastTimeDis = <span class="number">0</span>;</div><div class="line"></div><div class="line">    scrollBar.style.opacity = <span class="number">1</span>;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchmove"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> nowPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    <span class="keyword">var</span> dis = nowPoint - startPoint;</div><div class="line">    <span class="keyword">var</span> translateY = startEl + dis;<span class="comment">// 元素初始值减差值是移动距离</span></div><div class="line">    css(list,<span class="string">"translateY"</span>,translateY);</div><div class="line">    css(scrollBar,<span class="string">"translateY"</span>,- translateY * scale);</div><div class="line"></div><div class="line">    lastDis = translateY - lastY;<span class="comment">// 距离</span></div><div class="line">    lastY = translateY;</div><div class="line">    lastTimeDis = nowTime - lastTime;<span class="comment">// 时间</span></div><div class="line">    lastTime = nowTime;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> type = <span class="string">"easeOut"</span>;</div><div class="line">    <span class="comment">// console.log(lastDis,lastTimeDis);</span></div><div class="line">    <span class="comment">// 速度 = 距离 / 时间</span></div><div class="line">    <span class="keyword">var</span> speed = <span class="built_in">Math</span>.round(lastDis / lastTimeDis * <span class="number">10</span>);<span class="comment">// 乘以10可以放到下面直接乘300吗</span></div><div class="line">    speed = lastTimeDis &lt;= <span class="number">0</span> ? <span class="number">0</span> : speed;<span class="comment">// 负的时间差</span></div><div class="line">    </div><div class="line">    <span class="keyword">var</span> target = <span class="built_in">Math</span>.round(speed * <span class="number">30</span> + css(list,<span class="string">"translateY"</span>));</div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 按下再抬起时这里是NaN，一个数除以了0，0/0是NaN，1/0是无限制</span></div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 所以按下再抬起时这里也是NaN</span></div><div class="line">    <span class="keyword">if</span>(target &gt; <span class="number">0</span>)&#123;<span class="comment">// 超出了</span></div><div class="line">        target = <span class="number">0</span>;</div><div class="line">        type = <span class="string">"backOut"</span>;<span class="comment">// 回弹</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(target &lt; maxTranslate)&#123;</div><div class="line">        target = maxTranslate;</div><div class="line">        type = <span class="string">"backOut"</span>;</div><div class="line">    &#125;</div><div class="line">    MTween(&#123;</div><div class="line">        <span class="attr">el</span>: list,</div><div class="line">        <span class="attr">target</span>: &#123;</div><div class="line">            <span class="attr">translateY</span>: target</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">time</span>: <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.abs(target - css(list,<span class="string">"translateY"</span>)) * <span class="number">1.5</span>),<span class="comment">//</span></div><div class="line">        type: type,</div><div class="line">        <span class="attr">callBack</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            scrollBar.style.opacity = <span class="number">0</span>;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">callIn</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> translateY = css(list,<span class="string">"translateY"</span>);</div><div class="line">            css(scrollBar,<span class="string">"translateY"</span>,- translateY * scale);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="解决内容不满一屏时的问题"><a href="#解决内容不满一屏时的问题" class="headerlink" title="解决内容不满一屏时的问题"></a>解决内容不满一屏时的问题</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> wrap = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap"</span>);</div><div class="line"><span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> scrollBar = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line"><span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> startEl = <span class="number">0</span>;<span class="comment">// 元素按下时的坐标，即offsetTop</span></div><div class="line"><span class="keyword">var</span> lastDis = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastY = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> lastTime = <span class="number">0</span>;<span class="comment">// 上一次时间</span></div><div class="line"><span class="keyword">var</span> lastTimeDis = <span class="number">0</span>;<span class="comment">// 时间差</span></div><div class="line"><span class="keyword">var</span> maxTranslate = wrap.clientHeight - list.offsetHeight;</div><div class="line"><span class="keyword">var</span> scale = wrap.clientHeight / list.offsetHeight;</div><div class="line">list.style.minHeight = <span class="string">"100%"</span>;</div><div class="line"></div><div class="line">scrollBar.style.cssText = <span class="string">"width:6px;background:rgba(0,0,0,.5);position:absolute;top:0;right:0;border-radius:3px;opacity:0;transition:.3s opacity;"</span>;</div><div class="line">wrap.appendChild(scrollBar);</div><div class="line"></div><div class="line">css(list,<span class="string">"translateZ"</span>,<span class="number">0.01</span>);<span class="comment">// 开启硬件加速</span></div><div class="line"></div><div class="line">list.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    maxTranslate = wrap.clientHeight - list.offsetHeight;<span class="comment">// start时可能添加内容进去，重新来一次</span></div><div class="line">    <span class="keyword">if</span>(maxTranslate &gt;= <span class="number">0</span>)&#123;</div><div class="line">        scrollBar.style.display = <span class="string">"none"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        scrollBar.style.display = <span class="string">"block"</span>;</div><div class="line">    &#125;</div><div class="line">    scale = wrap.clientHeight / list.offsetHeight;<span class="comment">// 会变化重新取一下</span></div><div class="line">    scrollBar.style.height = wrap.clientHeight * scale + <span class="string">"px"</span>;</div><div class="line"></div><div class="line">    clearInterval(list.timer);</div><div class="line"></div><div class="line">    startPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    startEl = css(list,<span class="string">"translateY"</span>);<span class="comment">// 元素的初始位置，相当于pc端拖拽时获取的offsetTop</span></div><div class="line"></div><div class="line">    lastY = startEl;</div><div class="line">    lastTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line">    lastDis = <span class="number">0</span>;</div><div class="line">    lastTimeDis = <span class="number">0</span>;</div><div class="line"></div><div class="line">    scrollBar.style.opacity = <span class="number">1</span>;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchmove"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line"></div><div class="line">    <span class="keyword">var</span> nowPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">    <span class="keyword">var</span> dis = nowPoint - startPoint;</div><div class="line">    <span class="keyword">var</span> translateY = startEl + dis;<span class="comment">// 元素初始值减差值是移动距离</span></div><div class="line">    css(list,<span class="string">"translateY"</span>,translateY);</div><div class="line">    css(scrollBar,<span class="string">"translateY"</span>,- translateY * scale);</div><div class="line"></div><div class="line">    lastDis = translateY - lastY;<span class="comment">// 距离</span></div><div class="line">    lastY = translateY;</div><div class="line">    lastTimeDis = nowTime - lastTime;<span class="comment">// 时间</span></div><div class="line">    lastTime = nowTime;</div><div class="line">&#125;);</div><div class="line">list.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> type = <span class="string">"easeOut"</span>;</div><div class="line">    <span class="comment">// console.log(lastDis,lastTimeDis);</span></div><div class="line">    <span class="comment">// 速度 = 距离 / 时间</span></div><div class="line">    <span class="keyword">var</span> speed = <span class="built_in">Math</span>.round(lastDis / lastTimeDis * <span class="number">10</span>);<span class="comment">// 乘以10可以放到下面直接乘300吗</span></div><div class="line">    speed = lastTimeDis &lt;= <span class="number">0</span> ? <span class="number">0</span> : speed;<span class="comment">// 负的时间差</span></div><div class="line">    </div><div class="line">    <span class="keyword">var</span> target = <span class="built_in">Math</span>.round(speed * <span class="number">30</span> + css(list,<span class="string">"translateY"</span>));</div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 按下再抬起时这里是NaN，一个数除以了0，0/0是NaN，1/0是无限制</span></div><div class="line">    <span class="built_in">console</span>.log(target);<span class="comment">// 所以按下再抬起时这里也是NaN</span></div><div class="line">    <span class="keyword">if</span>(target &gt; <span class="number">0</span>)&#123;<span class="comment">// 超出了</span></div><div class="line">        target = <span class="number">0</span>;</div><div class="line">        type = <span class="string">"backOut"</span>;<span class="comment">// 回弹</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(target &lt; maxTranslate)&#123;</div><div class="line">        target = maxTranslate;</div><div class="line">        type = <span class="string">"backOut"</span>;</div><div class="line">    &#125;</div><div class="line">    MTween(&#123;</div><div class="line">        <span class="attr">el</span>: list,</div><div class="line">        <span class="attr">target</span>: &#123;</div><div class="line">            <span class="attr">translateY</span>: target</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">time</span>: <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.abs(target - css(list,<span class="string">"translateY"</span>)) * <span class="number">1.5</span>),<span class="comment">//</span></div><div class="line">        type: type,</div><div class="line">        <span class="attr">callBack</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            scrollBar.style.opacity = <span class="number">0</span>;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">callIn</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> translateY = css(list,<span class="string">"translateY"</span>);</div><div class="line">            css(scrollBar,<span class="string">"translateY"</span>,- translateY * scale);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">body</span>,<span class="selector-tag">html</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">header</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#000</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">footer</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">bottom</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#000</span>;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#wrap</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">top</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">bottom</span>: <span class="number">40px</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#list</span>&#123;</div><div class="line">        <span class="attribute">list-style</span>: none;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#list</span> <span class="selector-tag">li</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">30px</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">30px</span>;</div><div class="line">        <span class="attribute">text-indent</span>: <span class="number">30px</span>;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</div><div class="line">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#333</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span>好好学习<span class="tag">&lt;/<span class="name">header</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"wrap"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">footer</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span>天天向上<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"m.Tween2.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        e.preventDefault();</div><div class="line">    &#125;);</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createList</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> list = <span class="built_in">document</span>.querySelector(<span class="string">"#list"</span>);</div><div class="line">        <span class="keyword">var</span> inner = <span class="string">""</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">30</span>;i ++)&#123;</div><div class="line">            inner += <span class="string">"&lt;li&gt;这是第"</span>+ i +<span class="string">"个&lt;/li&gt;"</span>;</div><div class="line">        &#125;</div><div class="line">        list.innerHTML = inner;</div><div class="line">    &#125;</div><div class="line">    createList();</div><div class="line">    <span class="keyword">var</span> wrap = <span class="built_in">document</span>.querySelector(<span class="string">"#wrap"</span>);</div><div class="line">    mScroll(&#123;</div><div class="line">        <span class="attr">el</span>: wrap,</div><div class="line">        <span class="attr">offBar</span>: <span class="literal">true</span></div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">mScroll</span>(<span class="params">init</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(!init.el)&#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">var</span> wrap = init.el;</div><div class="line">        <span class="keyword">var</span> inner = init.el.children[<span class="number">0</span>];</div><div class="line">        <span class="comment">// css(inner,"translateY",100);//cssTransform()</span></div><div class="line">        <span class="comment">// console.log(css(inner,"translateY"));</span></div><div class="line">        </div><div class="line">        <span class="keyword">var</span> scrollBar = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">        <span class="keyword">var</span> startPoint = <span class="number">0</span>;</div><div class="line">        <span class="keyword">var</span> startEl = <span class="number">0</span>;<span class="comment">// 元素按下时的坐标，即offsetTop</span></div><div class="line">        <span class="keyword">var</span> lastDis = <span class="number">0</span>;</div><div class="line">        <span class="keyword">var</span> lastY = <span class="number">0</span>;</div><div class="line">        <span class="keyword">var</span> lastTime = <span class="number">0</span>;<span class="comment">// 上一次时间</span></div><div class="line">        <span class="keyword">var</span> lastTimeDis = <span class="number">0</span>;<span class="comment">// 时间差</span></div><div class="line">        <span class="keyword">var</span> maxTranslate = wrap.clientHeight - inner.offsetHeight;</div><div class="line">        <span class="keyword">if</span>(!init.offBar)&#123;</div><div class="line">            <span class="keyword">var</span> scale = wrap.clientHeight / inner.offsetHeight;</div><div class="line">            inner.style.minHeight = <span class="string">"100%"</span>;</div><div class="line"></div><div class="line">            scrollBar.style.cssText = <span class="string">"width:6px;background:rgba(0,0,0,.5);position:absolute;top:0;right:0;border-radius:3px;opacity:0;transition:.3s opacity;"</span>;</div><div class="line">            wrap.appendChild(scrollBar);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        css(inner,<span class="string">"translateZ"</span>,<span class="number">0.01</span>);<span class="comment">// 开启硬件加速</span></div><div class="line"></div><div class="line">        inner.addEventListener(<span class="string">"touchstart"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            maxTranslate = wrap.clientHeight - inner.offsetHeight;<span class="comment">// start时可能添加内容进去，重新来一次</span></div><div class="line">            <span class="keyword">if</span>(!init.offBar)&#123;</div><div class="line">                <span class="keyword">if</span>(maxTranslate &gt;= <span class="number">0</span>)&#123;</div><div class="line">                    scrollBar.style.display = <span class="string">"none"</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span>&#123;</div><div class="line">                    scrollBar.style.display = <span class="string">"block"</span>;</div><div class="line">                &#125;</div><div class="line">                scale = wrap.clientHeight / inner.offsetHeight;<span class="comment">// 会变化重新取一下</span></div><div class="line">                scrollBar.style.height = wrap.clientHeight * scale + <span class="string">"px"</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            clearInterval(inner.timer);</div><div class="line"></div><div class="line">            startPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">            startEl = css(inner,<span class="string">"translateY"</span>);<span class="comment">// 元素的初始位置，相当于pc端拖拽时获取的offsetTop</span></div><div class="line"></div><div class="line">            lastY = startEl;</div><div class="line">            lastTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line">            lastDis = <span class="number">0</span>;</div><div class="line">            lastTimeDis = <span class="number">0</span>;</div><div class="line"></div><div class="line">            (init.offBar) || (scrollBar.style.opacity = <span class="number">1</span>);<span class="comment">// false时执行，true &amp;&amp; ..</span></div><div class="line">        &#125;);</div><div class="line">        inner.addEventListener(<span class="string">"touchmove"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</div><div class="line"></div><div class="line">            <span class="keyword">var</span> nowPoint = e.changedTouches[<span class="number">0</span>].pageY;</div><div class="line">            <span class="keyword">var</span> dis = nowPoint - startPoint;</div><div class="line">            <span class="keyword">var</span> translateY = startEl + dis;<span class="comment">// 元素初始值减差值是移动距离</span></div><div class="line">            css(inner,<span class="string">"translateY"</span>,translateY);</div><div class="line">            init.offBar || css(scrollBar,<span class="string">"translateY"</span>,- translateY * scale);</div><div class="line"></div><div class="line">            lastDis = translateY - lastY;<span class="comment">// 距离</span></div><div class="line">            lastY = translateY;</div><div class="line">            lastTimeDis = nowTime - lastTime;<span class="comment">// 时间</span></div><div class="line">            lastTime = nowTime;</div><div class="line">        &#125;);</div><div class="line">        inner.addEventListener(<span class="string">"touchend"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> type = <span class="string">"easeOut"</span>;</div><div class="line">            <span class="comment">// console.log(lastDis,lastTimeDis);</span></div><div class="line">            <span class="comment">// 速度 = 距离 / 时间</span></div><div class="line">            <span class="keyword">var</span> speed = <span class="built_in">Math</span>.round(lastDis / lastTimeDis * <span class="number">10</span>);<span class="comment">// 乘以10可以放到下面直接乘300吗</span></div><div class="line">            speed = lastTimeDis &lt;= <span class="number">0</span> ? <span class="number">0</span> : speed;<span class="comment">// 负的时间差</span></div><div class="line">            </div><div class="line">            <span class="keyword">var</span> target = <span class="built_in">Math</span>.round(speed * <span class="number">30</span> + css(inner,<span class="string">"translateY"</span>));</div><div class="line">            <span class="built_in">console</span>.log(target);<span class="comment">// 按下再抬起时这里是NaN，一个数除以了0，0/0是NaN，1/0是无限制</span></div><div class="line">            <span class="built_in">console</span>.log(target);<span class="comment">// 所以按下再抬起时这里也是NaN</span></div><div class="line">            <span class="keyword">if</span>(target &gt; <span class="number">0</span>)&#123;<span class="comment">// 超出了</span></div><div class="line">                target = <span class="number">0</span>;</div><div class="line">                type = <span class="string">"backOut"</span>;<span class="comment">// 回弹</span></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target &lt; maxTranslate)&#123;</div><div class="line">                target = maxTranslate;</div><div class="line">                type = <span class="string">"backOut"</span>;</div><div class="line">            &#125;</div><div class="line">            MTween(&#123;</div><div class="line">                <span class="attr">el</span>: inner,</div><div class="line">                <span class="attr">target</span>: &#123;</div><div class="line">                    <span class="attr">translateY</span>: target</div><div class="line">                &#125;,</div><div class="line">                <span class="attr">time</span>: <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.abs(target - css(inner,<span class="string">"translateY"</span>)) * <span class="number">1.5</span>),<span class="comment">//</span></div><div class="line">                type: type,</div><div class="line">                <span class="attr">callBack</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                    (init.offBar) || (scrollBar.style.opacity = <span class="number">0</span>);</div><div class="line">                &#125;,</div><div class="line">                <span class="attr">callIn</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                    <span class="keyword">var</span> translateY = css(inner,<span class="string">"translateY"</span>);</div><div class="line">                    init.offBar || css(scrollBar,<span class="string">"translateY"</span>,- translateY * scale);<span class="comment">// 函数执行不必()</span></div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="陀螺仪"><a href="#陀螺仪" class="headerlink" title="陀螺仪"></a>陀螺仪</h3><h4 id="devicemotion"><a href="#devicemotion" class="headerlink" title="devicemotion"></a>devicemotion</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">window.addEventListener("devicemotion",function(e)&#123;</div><div class="line">    var motion = e.accelerationIncludingGravity;</div><div class="line">    // iOS 负 Andriod 正</div><div class="line">    var x = Math.round(motion.x);</div><div class="line">    var y = Math.round(motion.y);</div><div class="line">    var z = Math.round(motion.z);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="iOS-or-Android"><a href="#iOS-or-Android" class="headerlink" title="iOS or Android"></a>iOS or Android</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> u = navigator.userAgent;</div><div class="line"><span class="keyword">var</span> isAndroid = u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Adr'</span>) &gt; <span class="number">-1</span>; </div><div class="line"><span class="keyword">var</span> isiOS = !!u.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>);</div><div class="line"><span class="built_in">console</span>.log(isiOS);</div></pre></td></tr></table></figure>
<h4 id="统一motion"><a href="#统一motion" class="headerlink" title="统一motion"></a>统一motion</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"devicemotion"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> motion = e.accelerationIncludingGravity;</div><div class="line">    <span class="keyword">var</span> x = <span class="built_in">Math</span>.round(motion.x);</div><div class="line">    <span class="keyword">var</span> y = <span class="built_in">Math</span>.round(motion.y);</div><div class="line">    <span class="keyword">var</span> z = <span class="built_in">Math</span>.round(motion.z);<span class="comment">// ios 负,安卓正</span></div><div class="line">    <span class="keyword">if</span>(getAdr())&#123;</div><div class="line">        x = - x;</div><div class="line">        y = - y;</div><div class="line">        z = - x;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAdr</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> u = navigator.userAgent;</div><div class="line">    <span class="keyword">return</span> u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Adr'</span>) &gt; <span class="number">-1</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="根据motion控制盒子位置"><a href="#根据motion控制盒子位置" class="headerlink" title="根据motion控制盒子位置"></a>根据motion控制盒子位置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">"#box"</span>);</div><div class="line">css(box,<span class="string">"translateX"</span>,<span class="number">0</span>);</div><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"devicemotion"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> motion = e.accelerationIncludingGravity;</div><div class="line">    <span class="keyword">var</span> x = <span class="built_in">Math</span>.round(motion.x);</div><div class="line">    <span class="keyword">var</span> tX = css(box,<span class="string">"translateX"</span>);</div><div class="line">    <span class="keyword">if</span>(getAdr())&#123;</div><div class="line">        x = - x;</div><div class="line">    &#125;</div><div class="line">    css(box,<span class="string">"translateX"</span>,tX + x);</div><div class="line">&#125;);</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAdr</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> u = navigator.userAgent;</div><div class="line">    <span class="keyword">return</span> u.indexOf(<span class="string">'Android'</span>) &gt; <span class="number">-1</span> || u.indexOf(<span class="string">'Adr'</span>) &gt; <span class="number">-1</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="摇一摇"><a href="#摇一摇" class="headerlink" title="摇一摇"></a>摇一摇</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> lastX;</div><div class="line"><span class="keyword">var</span> lastY;</div><div class="line"><span class="keyword">var</span> lastZ;</div><div class="line"><span class="keyword">var</span> maxRang = <span class="number">80</span>;</div><div class="line"><span class="keyword">var</span> minRang = <span class="number">10</span>;</div><div class="line"><span class="keyword">var</span> isShake = <span class="literal">false</span>;</div><div class="line"><span class="comment">// 记录上一次的加速度和当前次的加速度相减，差值大于一定幅度的时候就可以认定用户在进行摇一摇</span></div><div class="line"></div><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"devicemotion"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> motion = e.accelerationIncludingGravity;</div><div class="line">    <span class="keyword">var</span> x = <span class="built_in">Math</span>.round(motion.x);</div><div class="line">    <span class="keyword">var</span> y = <span class="built_in">Math</span>.round(motion.y);</div><div class="line">    <span class="keyword">var</span> z = <span class="built_in">Math</span>.round(motion.z);</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> lastX == <span class="string">"undefined"</span>)&#123;</div><div class="line">        lastX = x;<span class="comment">// 上一次等于当前</span></div><div class="line">        lastY = y;</div><div class="line">        lastZ = z;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> dis = <span class="built_in">Math</span>.abs(x - lastX) + <span class="built_in">Math</span>.abs(y - lastY) + <span class="built_in">Math</span>.abs(z - lastZ);</div><div class="line">    </div><div class="line">    <span class="keyword">if</span>(dis &gt; maxRang)&#123;<span class="comment">// 有过大的摇动</span></div><div class="line">        isShake = <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(dis &lt; minRang &amp;&amp; isShake)&#123;<span class="comment">// 停下来了</span></div><div class="line">        isShake = <span class="literal">false</span>;</div><div class="line">        <span class="comment">// 执行摇一摇之后要操作的内容</span></div><div class="line">        alert(<span class="string">"你摇一摇了"</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    lastX = x;</div><div class="line">    lastY = y;</div><div class="line">    lastZ = z;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="横竖屏检测"><a href="#横竖屏检测" class="headerlink" title="横竖屏检测"></a>横竖屏检测</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#div</span>&#123;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</div><div class="line">        <span class="attribute">background-color</span>: red;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#pop</span>&#123;</div><div class="line">        <span class="attribute">display</span>: none;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#000</span>;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">        <span class="attribute">line-height</span>: <span class="number">200px</span>;</div><div class="line">        <span class="attribute">text-align</span>: center;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">30px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span>请保持竖屏观看</div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pop"</span>&gt;</span>请不要横屏浏览页面<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line">    setChange();<span class="comment">// 一上来就是横屏</span></div><div class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">"orientationchange"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        <span class="comment">// window.orientation</span></div><div class="line">        <span class="comment">// 横屏：90 -90</span></div><div class="line">        <span class="comment">// 竖屏：0 180</span></div><div class="line">        setChange();</div><div class="line">    &#125;);</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setChange</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> pop = <span class="built_in">document</span>.querySelector(<span class="string">"#pop"</span>);</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">window</span>.orientation == <span class="number">90</span> || <span class="built_in">window</span>.orientation == <span class="number">-90</span>)&#123;</div><div class="line">            pop.style.display = <span class="string">"block"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            pop.style.display = <span class="string">"none"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="检测手机角度"><a href="#检测手机角度" class="headerlink" title="检测手机角度"></a>检测手机角度</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">"#box"</span>);</div><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"deviceorientation"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> motion = e.accelerationIncludingGravity;</div><div class="line">    <span class="keyword">var</span> x = <span class="built_in">Math</span>.round(e.beta);</div><div class="line">    <span class="keyword">var</span> y = <span class="built_in">Math</span>.round(e.gamma);</div><div class="line">    <span class="keyword">var</span> z = <span class="built_in">Math</span>.round(e.alpha);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="手机旋转场景切换"><a href="#手机旋转场景切换" class="headerlink" title="手机旋转场景切换"></a>手机旋转场景切换</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    *&#123;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">position</span>: relative;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#view</span>&#123;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">overflow</span>: hidden;</div><div class="line">        <span class="attribute">perspective</span>: <span class="number">300px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">        <span class="attribute">width</span>: <span class="number">1024px</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">768px</span>;</div><div class="line">        <span class="attribute">margin-top</span>: -<span class="number">384px</span>;</div><div class="line">        <span class="attribute">margin-left</span>: -<span class="number">512px</span>;</div><div class="line">        <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</div><div class="line">        <span class="attribute">transition</span>: .<span class="number">3s</span>;<span class="comment">/* 防卡的感觉 */</span></div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">div</span>&#123;</div><div class="line">        <span class="attribute">position</span>: absolute;</div><div class="line">        <span class="attribute">top</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">height</span>: <span class="number">100%</span>;</div><div class="line">        <span class="attribute">background-color</span>: center center no-repeat;</div><div class="line">        <span class="attribute">background-size</span>: cover;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(1)</span>&#123;</div><div class="line">        <span class="attribute">background-image</span>: <span class="built_in">url</span>(img/img.jpg);</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123;</div><div class="line">        <span class="attribute">background-image</span>: <span class="built_in">url</span>(img/img2.jpg);</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(3)</span>&#123;</div><div class="line">        <span class="attribute">background-image</span>: <span class="built_in">url</span>(img/img3.jpg);</div><div class="line">    &#125;</div><div class="line">    <span class="selector-id">#box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(4)</span>&#123;</div><div class="line">        <span class="attribute">background-image</span>: <span class="built_in">url</span>(img/img4.jpg);</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"view"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"m.Tween2.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="comment">// 3d盒子练习</span></div><div class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">"#box"</span>);</div><div class="line">        <span class="keyword">var</span> divs = box.querySelectorAll(<span class="string">"div"</span>);</div><div class="line">        <span class="keyword">var</span> start;</div><div class="line">        <span class="keyword">var</span> last;</div><div class="line">        <span class="comment">// css(box,"translateZ",-2000);// 往后移</span></div><div class="line">        css(box,<span class="string">"rotateY"</span>,<span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; divs.length;i ++)&#123;</div><div class="line">            css(divs[i],<span class="string">"rotateY"</span>,i * <span class="number">90</span>);</div><div class="line">            css(divs[i],<span class="string">"translateZ"</span>,<span class="number">-512</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// MTween(&#123;</span></div><div class="line">        <span class="comment">//     el: box,</span></div><div class="line">        <span class="comment">//     target: &#123;</span></div><div class="line">        <span class="comment">//         rotateY: 360</span></div><div class="line">        <span class="comment">//     &#125;,</span></div><div class="line">        <span class="comment">//     time: 2000,</span></div><div class="line">        <span class="comment">//     type: "linear"</span></div><div class="line">        <span class="comment">// &#125;);</span></div><div class="line">        <span class="built_in">window</span>.addEventListener(<span class="string">"deviceorientation"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> motion = e.accelerationIncludingGravity;</div><div class="line">            <span class="keyword">var</span> y = <span class="built_in">Math</span>.round(e.gamma);</div><div class="line">            <span class="keyword">if</span>(<span class="keyword">typeof</span> start == <span class="string">"undefined"</span>)&#123;<span class="comment">// 第一次进入画面</span></div><div class="line">                start = y;</div><div class="line">                last = start;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            y = y - start;<span class="comment">// 一上来就是0，手机一打开不能保证就是正的，让画面一开始是正的</span></div><div class="line">            <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(y - last) &gt; <span class="number">5</span>)&#123;<span class="comment">// 解决轻微的晃动</span></div><div class="line">                css(box,<span class="string">"rotateY"</span>,y);</div><div class="line">                last = y;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;)();</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="多指操作"><a href="#多指操作" class="headerlink" title="多指操作"></a>多指操作</h3><h4 id="多指事件"><a href="#多指事件" class="headerlink" title="多指事件"></a>多指事件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">'#box'</span>);</div><div class="line"><span class="comment">/*</span></div><div class="line">    当手指触摸元素，当前屏幕上有两根或者两根以上的手指执行</div><div class="line">*/</div><div class="line">box.addEventListener(<span class="string">'gesturestart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.background = <span class="string">"blue"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="comment">/*</span></div><div class="line">    当我们触发了 gesturestart时，手指位置发生变化时执行</div><div class="line">*/</div><div class="line">box.addEventListener(<span class="string">'gesturechange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.background = <span class="string">"green"</span>;</div><div class="line">&#125;);</div><div class="line"><span class="comment">/*</span></div><div class="line">    当我们触发了 gesturestart时，然后抬起手指，这时屏幕上的手指个少于2个时触发</div><div class="line">*/</div><div class="line">box.addEventListener(<span class="string">'gestureend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.background = <span class="string">"red"</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="缩放比"><a href="#缩放比" class="headerlink" title="缩放比"></a>缩放比</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">'#box'</span>);</div><div class="line"></div><div class="line">box.addEventListener(<span class="string">'gesturestart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.background = <span class="string">"blue"</span>;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">box.addEventListener(<span class="string">'gesturechange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="comment">//e.scale; 缩放比：change时两根手指之间距离 和 start时两根手指之间的距离比值</span></div><div class="line">    <span class="keyword">this</span>.innerHTML = e.scale; </div><div class="line">&#125;);</div><div class="line">box.addEventListener(<span class="string">'gestureend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.background = <span class="string">"red"</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="旋转差"><a href="#旋转差" class="headerlink" title="旋转差"></a>旋转差</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">'#box'</span>);</div><div class="line"></div><div class="line">box.addEventListener(<span class="string">'gesturestart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.background = <span class="string">"blue"</span>;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">box.addEventListener(<span class="string">'gesturechange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="comment">//e.rotation 旋转差: change时两根手指形成的直线和start时两根手指形成的直线，中间形成夹角</span></div><div class="line">    <span class="keyword">this</span>.innerHTML = e.rotation;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">box.addEventListener(<span class="string">'gestureend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.background = <span class="string">"red"</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="旋转缩放图片"><a href="#旋转缩放图片" class="headerlink" title="旋转缩放图片"></a>旋转缩放图片</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">'#box'</span>);</div><div class="line"><span class="keyword">var</span> startRotate = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> startScale = <span class="number">0</span>;</div><div class="line"><span class="comment">//gesture 相关的事件，只有ios下有，安卓没有这个事件</span></div><div class="line">box.addEventListener(<span class="string">'gesturestart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    startScale = css(box,<span class="string">"scale"</span>);</div><div class="line">    startRotate = css(box,<span class="string">"rotate"</span>);</div><div class="line">&#125;);</div><div class="line">box.addEventListener(<span class="string">'gesturechange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    css(box,<span class="string">"scale"</span>,e.scale*startScale);</div><div class="line">    css(box,<span class="string">"rotate"</span>,e.rotation + startRotate);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="封装多指事件"><a href="#封装多指事件" class="headerlink" title="封装多指事件"></a>封装多指事件</h4><h5 id="模拟gesture系列"><a href="#模拟gesture系列" class="headerlink" title="模拟gesture系列"></a>模拟gesture系列</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,user-scalable=no"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line"><span class="selector-id">#box</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">background</span>: red;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</div><div class="line">&#125;   </div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"m.Tween.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">'#box'</span>);</div><div class="line">    <span class="keyword">var</span> startRotate = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> startScale = <span class="number">0</span>;</div><div class="line">    setGesture(&#123;</div><div class="line">        <span class="attr">el</span>: box,</div><div class="line">        <span class="attr">start</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.style.background = <span class="string">"blue"</span>;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">change</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">end</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.style.background = <span class="string">"red"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;)</div><div class="line">&#125;;</div><div class="line"><span class="comment">/*</span></div><div class="line">    init:&#123;</div><div class="line">        el: element,// 元素(必填)</div><div class="line">        start: fn,// gesturestart要做的操作</div><div class="line">        change: fn,// gesturechange要做的操作</div><div class="line">        end: fn// gestureend要做的操作</div><div class="line">    &#125;</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setGesture</span>(<span class="params">init</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> el = init.el;</div><div class="line">    <span class="keyword">var</span> isGestrue = <span class="literal">false</span>; </div><div class="line">    <span class="keyword">if</span>(!el)&#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    el.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(e.touches.length &gt;= <span class="number">2</span>)&#123;</div><div class="line">            isGestrue = <span class="literal">true</span>; <span class="comment">// 记录当前用户触发了gesture</span></div><div class="line">            init.start &amp;&amp; init.start.call(el,e);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    el.addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(isGestrue &amp;&amp; e.touches.length &gt;= <span class="number">2</span>)&#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    el.addEventListener(<span class="string">'touchend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(isGestrue)&#123;</div><div class="line">            <span class="keyword">if</span>(e.touches.length &lt; <span class="number">2</span> || e.targetTouches.length &lt; <span class="number">1</span>)&#123;</div><div class="line">                isGestrue = <span class="literal">false</span>;</div><div class="line">                init.end &amp;&amp; init.end.call(el,e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="模拟scale"><a href="#模拟scale" class="headerlink" title="模拟scale"></a>模拟scale</h5><p>原理：touchmove时两指的距离 / touchstart时两指的距离<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,user-scalable=no"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line"><span class="selector-id">#box</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">background</span>: red;</div><div class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</div><div class="line">&#125;   </div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"m.Tween.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">'#box'</span>);</div><div class="line">    <span class="keyword">var</span> startRotate = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> startScale = <span class="number">0</span>;</div><div class="line">    setGesture(&#123;</div><div class="line">        <span class="attr">el</span>: box,</div><div class="line">        <span class="attr">start</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.style.background = <span class="string">"blue"</span>;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">change</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.innerHTML = e.scale;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">end</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.style.background = <span class="string">"red"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;)</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDis</span>(<span class="params">point1,point2</span>)</span>&#123;<span class="comment">// 勾股定理</span></div><div class="line">    <span class="keyword">var</span> x = point2.x - point1.x;</div><div class="line">    <span class="keyword">var</span> y = point2.y - point1.y;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(x * x + y * y);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setGesture</span>(<span class="params">init</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> el = init.el;</div><div class="line">    <span class="keyword">var</span> isGestrue = <span class="literal">false</span>; </div><div class="line">    <span class="keyword">var</span> startPoint = [];</div><div class="line">    <span class="keyword">var</span> nowPoint = [];</div><div class="line">    <span class="keyword">var</span> startDis = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> nowDis = <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span>(!el)&#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    el.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(e.touches.length &gt;= <span class="number">2</span>)&#123;</div><div class="line">            isGestrue = <span class="literal">true</span>; <span class="comment">// 记录当前用户触发了gesture</span></div><div class="line">            startPoint[<span class="number">0</span>] = &#123;</div><div class="line">                <span class="attr">x</span>: e.touches[<span class="number">0</span>].pageX,</div><div class="line">                <span class="attr">y</span>: e.touches[<span class="number">0</span>].pageY</div><div class="line">            &#125;;</div><div class="line">            startPoint[<span class="number">1</span>] = &#123;</div><div class="line">                <span class="attr">x</span>: e.touches[<span class="number">1</span>].pageX,</div><div class="line">                <span class="attr">y</span>: e.touches[<span class="number">1</span>].pageY</div><div class="line">            &#125;;</div><div class="line">            init.start &amp;&amp; init.start.call(el,e);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    el.addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(isGestrue &amp;&amp; e.touches.length &gt;= <span class="number">2</span>)&#123;</div><div class="line">            nowPoint[<span class="number">0</span>] = &#123;</div><div class="line">                <span class="attr">x</span>: e.touches[<span class="number">0</span>].pageX,</div><div class="line">                <span class="attr">y</span>: e.touches[<span class="number">0</span>].pageY</div><div class="line">            &#125;;</div><div class="line">            nowPoint[<span class="number">1</span>] = &#123;</div><div class="line">                <span class="attr">x</span>: e.touches[<span class="number">1</span>].pageX,</div><div class="line">                <span class="attr">y</span>: e.touches[<span class="number">1</span>].pageY</div><div class="line">            &#125;;</div><div class="line">            startDis = getDis(startPoint[<span class="number">0</span>],startPoint[<span class="number">1</span>]);</div><div class="line">            nowDis = getDis(nowPoint[<span class="number">0</span>],nowPoint[<span class="number">1</span>]);</div><div class="line">            e.scale = nowDis / startDis;</div><div class="line">            init.change &amp;&amp; init.change.call(el,e);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    el.addEventListener(<span class="string">'touchend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(isGestrue)&#123;</div><div class="line">            <span class="keyword">if</span>(e.touches.length &lt; <span class="number">2</span> || e.targetTouches.length &lt; <span class="number">1</span>)&#123;</div><div class="line">                isGestrue = <span class="literal">false</span>;</div><div class="line">                init.end &amp;&amp; init.end.call(el,e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h5 id="模拟rotate"><a href="#模拟rotate" class="headerlink" title="模拟rotate"></a>模拟rotate</h5><p>原理：Math.atan2(y,x)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,user-scalable=no"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></div><div class="line"><span class="selector-id">#box</span> &#123;</div><div class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</div><div class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</div><div class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(1.jpg) no-repeat;</div><div class="line">    <span class="attribute">background-size</span>: cover;</div><div class="line">&#125;   </div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"m.Tween.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    e.preventDefault();</div><div class="line">&#125;);</div><div class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">'#box'</span>);</div><div class="line">    <span class="keyword">var</span> startRotate = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> startScale = <span class="number">0</span>;</div><div class="line">    css(box,<span class="string">"translateZ"</span>,<span class="number">0.01</span>);</div><div class="line">    setGesture(&#123;</div><div class="line">        <span class="attr">el</span>: box,</div><div class="line">        <span class="attr">start</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            startRotate = css(<span class="keyword">this</span>,<span class="string">"rotate"</span>);</div><div class="line">            startScale = css(<span class="keyword">this</span>,<span class="string">"scale"</span>);</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">change</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            css(<span class="keyword">this</span>,<span class="string">"rotate"</span>,startRotate + e.rotation);</div><div class="line">            css(<span class="keyword">this</span>,<span class="string">"scale"</span>,startScale * e.scale);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDis</span>(<span class="params">point1,point2</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> x = point2.x - point1.x;</div><div class="line">    <span class="keyword">var</span> y = point2.y - point1.y;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(x * x + y * y);</div><div class="line">&#125;</div><div class="line"><span class="comment">/*</span></div><div class="line">    Math.atan2(y,x) 斜率 由一条直线与X轴正方向所成角的正切 返回值弧度</div><div class="line">    角度转弧度: deg * Math.PI / 180</div><div class="line">    弧度转角度: rad * 180 / Math.PI</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDeg</span>(<span class="params">point1,point2</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> x = point2.x - point1.x;</div><div class="line">    <span class="keyword">var</span> y = point2.y - point1.y;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.atan2(y,x) * <span class="number">180</span> / <span class="built_in">Math</span>.PI; </div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setGesture</span>(<span class="params">init</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> el = init.el;</div><div class="line">    <span class="keyword">var</span> isGestrue = <span class="literal">false</span>; </div><div class="line">    <span class="keyword">var</span> startPoint = [];</div><div class="line">    <span class="keyword">var</span> nowPoint = [];</div><div class="line">    <span class="keyword">var</span> startDis = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> nowDis = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> startDeg = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> nowDeg = <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span>(!el)&#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    el.addEventListener(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(e.touches.length &gt;= <span class="number">2</span>)&#123;</div><div class="line">            isGestrue = <span class="literal">true</span>; <span class="comment">// 记录当前用户触发了gesture</span></div><div class="line">            startPoint[<span class="number">0</span>] = &#123;</div><div class="line">                <span class="attr">x</span>: e.touches[<span class="number">0</span>].pageX,</div><div class="line">                <span class="attr">y</span>: e.touches[<span class="number">0</span>].pageY</div><div class="line">            &#125;;</div><div class="line">            startPoint[<span class="number">1</span>] = &#123;</div><div class="line">                <span class="attr">x</span>: e.touches[<span class="number">1</span>].pageX,</div><div class="line">                <span class="attr">y</span>: e.touches[<span class="number">1</span>].pageY</div><div class="line">            &#125;;</div><div class="line">            init.start &amp;&amp; init.start.call(el,e);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    el.addEventListener(<span class="string">'touchmove'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(isGestrue &amp;&amp; e.touches.length &gt;= <span class="number">2</span>)&#123;</div><div class="line">            nowPoint[<span class="number">0</span>] = &#123;</div><div class="line">                <span class="attr">x</span>: e.touches[<span class="number">0</span>].pageX,</div><div class="line">                <span class="attr">y</span>: e.touches[<span class="number">0</span>].pageY</div><div class="line">            &#125;;</div><div class="line">            nowPoint[<span class="number">1</span>] = &#123;</div><div class="line">                <span class="attr">x</span>: e.touches[<span class="number">1</span>].pageX,</div><div class="line">                <span class="attr">y</span>: e.touches[<span class="number">1</span>].pageY</div><div class="line">            &#125;;</div><div class="line">            startDis = getDis(startPoint[<span class="number">0</span>],startPoint[<span class="number">1</span>]);</div><div class="line">            nowDis = getDis(nowPoint[<span class="number">0</span>],nowPoint[<span class="number">1</span>]);</div><div class="line">            startDeg = getDeg(startPoint[<span class="number">0</span>],startPoint[<span class="number">1</span>]);</div><div class="line">            nowDeg = getDeg(nowPoint[<span class="number">0</span>],nowPoint[<span class="number">1</span>]);</div><div class="line">            e.scale = nowDis / startDis;</div><div class="line">            e.rotation = nowDeg - startDeg;</div><div class="line">            init.change &amp;&amp; init.change.call(el,e);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    el.addEventListener(<span class="string">'touchend'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span>(isGestrue)&#123;</div><div class="line">            <span class="keyword">if</span>(e.touches.length &lt; <span class="number">2</span> || e.targetTouches.length &lt; <span class="number">1</span>)&#123;</div><div class="line">                isGestrue = <span class="literal">false</span>;</div><div class="line">                init.end &amp;&amp; init.end.call(el,e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;新手上路&quot;&gt;&lt;a href=&quot;#新手上路&quot; class=&quot;headerlink&quot; title=&quot;新手上路&quot;&gt;&lt;/a&gt;新手上路&lt;/h3&gt;&lt;h4 id=&quot;UC下字体渲染问题&quot;&gt;&lt;a href=&quot;#UC下字体渲染问题&quot; class=&quot;headerlink&quot; title=&quot;UC下字体渲染问题&quot;&gt;&lt;/a&gt;UC下字体渲染问题&lt;/h4&gt;&lt;p&gt;此Bug出现极其诡异，那段时间真是怕了UC，因为指不定什么时候就会放大页面，有可能是加一个字，有可能是浮动了一个元素，也有可能是增加一个div…解决如下：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* 官方解释：UC浏览器判断到页面上文字居多时，会自动放大字体优化移动用户体验。 */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wap-font-scale&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;no&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="HTML/CSS" scheme="http://wwww.yesokiloveyou.com/categories/HTML-CSS/"/>
    
    
      <category term="移动端" scheme="http://wwww.yesokiloveyou.com/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>2017</title>
    <link href="http://wwww.yesokiloveyou.com/2017/01/01/20170101/"/>
    <id>http://wwww.yesokiloveyou.com/2017/01/01/20170101/</id>
    <published>2017-01-01T04:20:42.000Z</published>
    <updated>2017-01-12T14:57:55.000Z</updated>
    
    <content type="html"><![CDATA[<!-- 中学我很老实，寡不敌众也被欺负过，中二从村里去县城上学，自卑但也算开心，交了几个到现在也很铁的哥们，但学习一般，08年中考得了508就这样上了高中。

高中我是个二流的混子，混到我自己都不察觉我在混的程度，朋友很多从不独行(现在都基本没联系了)，毕业目标是进入二专学校，至于干什么没想过，可能也是继续混，后来有幸能参加高考得了444分，超额实现目标挑了个2年制大专，至于干什么，不知道。

大学最疼我的爷爷和外婆离开，心痛无以言表。期间也有妹子看得起我，但我是真的看不起自己，所以也就没有了结果。那会目标是上个本科，补回之前浪费掉的，好好学习也拿了各种奖学金，13年顺利考上了本科，本以为好好上学能改善一切，事实对于我自己也不一定，不再打算考研，所以14年就离校和一个朋友去了上海，在一家互联网公司从事打杂，后来慢慢也接触网站制作方面的工作，算是页面重构，专科我有基础知识，上手很快。期间我的姑姑离开，她很疼我，仍然记得小时候去姑姑家她从门后拿起苹果给我吃那时她的样子，她才40左右啊，老天就是这样无情，最后一次去看她时，她已被病痛折磨的像变了一个人，无力，心痛，自责...离开的亲人我很想念你们，我愿意相信有另一个世界，希望你们在那边能过的很好。 -->
<!-- 2017其他的都可以放下，我只希望能和喜欢的她在一起，好好对她。 -->
<p>生活，不是你想象的那样。</p>
]]></content>
    
    <summary type="html">
    
      问题：我在哪个县城上的中学？
    
    </summary>
    
      <category term="生活" scheme="http://wwww.yesokiloveyou.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="2017了" scheme="http://wwww.yesokiloveyou.com/tags/2017%E4%BA%86/"/>
    
  </entry>
  
  <entry>
    <title>常用方法封装</title>
    <link href="http://wwww.yesokiloveyou.com/2016/12/28/function/"/>
    <id>http://wwww.yesokiloveyou.com/2016/12/28/function/</id>
    <published>2016-12-28T15:40:36.000Z</published>
    <updated>2017-01-10T13:09:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="listToArray-likeArr"><a href="#listToArray-likeArr" class="headerlink" title="listToArray(likeArr)"></a>listToArray(likeArr)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 类数组转数组</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">listToArray</span>(<span class="params">likeArr</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    <span class="keyword">try</span>&#123;</div><div class="line">        arr = <span class="built_in">Array</span>.prototype.slice.call(likeArr);<span class="comment">// [].slice，ie低版本不兼容</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span>(e)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; likeArr.length;i ++)&#123;</div><div class="line">            arr[arr.length] = likeArr[i];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="toJSON-str"><a href="#toJSON-str" class="headerlink" title="toJSON(str)"></a>toJSON(str)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 把JSON格式的字符串转换为JSON格式的数组/对象</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">toJSON</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"JSON"</span> <span class="keyword">in</span> <span class="built_in">window</span> ? <span class="built_in">JSON</span>.parse(str) : <span class="built_in">eval</span>(<span class="string">"("</span>+ str +<span class="string">")"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="getChild-oParent-tagName"><a href="#getChild-oParent-tagName" class="headerlink" title="getChild(oParent,tagName)"></a>getChild(oParent,tagName)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getChild</span>(<span class="params">oParent,tagName</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    <span class="keyword">var</span> aTag = oParent.childNodes;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; aTag.length;i ++)&#123;</div><div class="line">        <span class="keyword">if</span>(aTag[i].nodeType == <span class="number">1</span>)&#123;<span class="comment">// 元素节点</span></div><div class="line">            <span class="keyword">if</span>(tagName)&#123;<span class="comment">// 有限定子节点的话</span></div><div class="line">                <span class="keyword">if</span>(aTag[i].nodeName.toLowerCase() === tagName)&#123;</div><div class="line">                    arr.push(aTag[i]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;<span class="comment">// 那就找出所有的子元素节点</span></div><div class="line">                arr.push(aTag[i]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> arr;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> oUl = <span class="built_in">document</span>.querySelector(<span class="string">"#ul1"</span>);</div><div class="line"><span class="built_in">console</span>.log(getChild(oUl));</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getChild</span>(<span class="params">oParent,tagName</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    <span class="keyword">if</span>(!<span class="built_in">window</span>.getComputedStyle)&#123;<span class="comment">// ie6,7,8</span></div><div class="line">        <span class="keyword">var</span> nodeList = oParent.childNodes;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; nodeList.length;i ++)&#123;</div><div class="line">            <span class="keyword">if</span>(nodeList[i].nodeType === <span class="number">1</span>)&#123;</div><div class="line">                arr[arr.length] = nodeList[i];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        arr = <span class="built_in">Array</span>.prototype.slice.call(oParent.children);<span class="comment">// 转数组</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> tagName === <span class="string">"string"</span>)&#123;<span class="comment">// 二次筛选</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;<span class="comment">// 注意这里的arr.length不能和i一起声明</span></div><div class="line">            <span class="keyword">if</span>(arr[i].tagName.toLowerCase() !== tagName.toLowerCase())&#123;</div><div class="line">                arr.splice(i,<span class="number">1</span>);</div><div class="line">                i --;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="prev-curEle"><a href="#prev-curEle" class="headerlink" title="prev(curEle)"></a>prev(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">prev</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(curEle.previousElementSibling)&#123;</div><div class="line">        <span class="keyword">return</span> curEle.previousElementSibling;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> pre = curEle.previousSibling;</div><div class="line">    <span class="keyword">while</span>(pre &amp;&amp; pre.nodeType !== <span class="number">1</span>)&#123;</div><div class="line">        pre = pre.previousSibling;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> pre;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="next-curEle"><a href="#next-curEle" class="headerlink" title="next(curEle)"></a>next(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(curEle.nextElementSibling)&#123;</div><div class="line">        <span class="keyword">return</span> curEle.nextElementSibling;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> next = curEle.nextSibling;</div><div class="line">    <span class="keyword">while</span>(next &amp;&amp; next.nodeType !== <span class="number">1</span>)&#123;</div><div class="line">        next = next.nextSibling;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> next;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="prevAll-curEle"><a href="#prevAll-curEle" class="headerlink" title="prevAll(curEle)"></a>prevAll(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">prevAll</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    <span class="keyword">var</span> pre = prev(curEle);<span class="comment">// 不能用prev变量会改写prev函数</span></div><div class="line">    <span class="keyword">while</span>(pre)&#123;</div><div class="line">        arr.unshift(pre);<span class="comment">// 从开头插入</span></div><div class="line">        pre = prev(pre);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="nextAll-curEle"><a href="#nextAll-curEle" class="headerlink" title="nextAll(curEle)"></a>nextAll(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">nextAll</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    <span class="keyword">var</span> nex = next(curEle);</div><div class="line">    <span class="keyword">while</span>(nex)&#123;</div><div class="line">        arr.push(nex);</div><div class="line">        nex = next(nex);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="sibling-curEle"><a href="#sibling-curEle" class="headerlink" title="sibling(curEle)"></a>sibling(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sibling</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    prev(curEle) ? arr.push(prev(curEle)) : <span class="literal">null</span>;</div><div class="line">    next(curEle) ? arr.push(next(curEle)) : <span class="literal">null</span>;</div><div class="line">    <span class="keyword">return</span> arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="siblings-curEle"><a href="#siblings-curEle" class="headerlink" title="siblings(curEle)"></a>siblings(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">siblings</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> prevAll(curEle).concat(nextAll(curEle));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="index-curEle"><a href="#index-curEle" class="headerlink" title="index(curEle)"></a>index(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> prevAll(curEle).length;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="firstChild-curEle"><a href="#firstChild-curEle" class="headerlink" title="firstChild(curEle)"></a>firstChild(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">firstChild</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> aCh = getChild(curEle);</div><div class="line">    <span class="keyword">return</span> aCh.length &gt; <span class="number">0</span> ? aCh[<span class="number">0</span>] : <span class="literal">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="lastChild-curEle"><a href="#lastChild-curEle" class="headerlink" title="lastChild(curEle)"></a>lastChild(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">lastChild</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> aCh = getChild(curEle);</div><div class="line">    <span class="keyword">return</span> aCh.length &gt; <span class="number">0</span> ? aCh[aCh.length - <span class="number">1</span>] : <span class="literal">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="append-oParent-newEle"><a href="#append-oParent-newEle" class="headerlink" title="append(oParent,newEle)"></a>append(oParent,newEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params">oParent,newEle</span>)</span>&#123;</div><div class="line">    oParent.appendChild(newEle);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="prepend-oParent-newEle"><a href="#prepend-oParent-newEle" class="headerlink" title="prepend(oParent,newEle)"></a>prepend(oParent,newEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 增加到容器内的开头</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">prepend</span>(<span class="params">oParent,newEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> oFirst = firstChild(oParent);</div><div class="line">    <span class="keyword">if</span>(oFirst)&#123;</div><div class="line">        oParent.insertBefore(newEle,oFirst);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 如果没有子元素</span></div><div class="line">    oParent.appendChild(newEle);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="insertBefore-newEle-oldEle"><a href="#insertBefore-newEle-oldEle" class="headerlink" title="insertBefore(newEle,oldEle)"></a>insertBefore(newEle,oldEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 插入前面，平行插入</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertBefore</span>(<span class="params">newEle,oldEle</span>)</span>&#123;</div><div class="line">    oldEle.parentNode.insertBefore(newEle,oldEle);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="insertAfter-newEle-oldEle"><a href="#insertAfter-newEle-oldEle" class="headerlink" title="insertAfter(newEle,oldEle)"></a>insertAfter(newEle,oldEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertAfter</span>(<span class="params">newEle,oldEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> nex = next(oldEle);<span class="comment">// 相当于插入其前</span></div><div class="line">    <span class="keyword">if</span>(nex)&#123;</div><div class="line">        oldEle.parentNode.insertBefore(newEle,nex);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    oldEle.parentNode.appendChild(newEle);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="hasClass-curEle-className"><a href="#hasClass-curEle-className" class="headerlink" title="hasClass(curEle,className)"></a>hasClass(curEle,className)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">curEle,className</span>)</span>&#123;</div><div class="line">    <span class="comment">/*if(curEle.className.indexOf(className) &gt; -1)&#123;// bg2中也包含bg class不准确</span></div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line">    return false;*/</div><div class="line">    <span class="comment">// / +class +/</span></div><div class="line">    <span class="comment">// /^box +/</span></div><div class="line">    <span class="comment">// / +border$/</span></div><div class="line">    </div><div class="line">    <span class="comment">// 字面量创建方式//中所有东西都是元字符</span></div><div class="line">    </div><div class="line">    <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| +)"</span>+ className +<span class="string">"( +|$)"</span>);</div><div class="line">    <span class="keyword">return</span> reg.test(curEle.className);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="addClass-curEle-className"><a href="#addClass-curEle-className" class="headerlink" title="addClass(curEle,className)"></a>addClass(curEle,className)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">addClass</span>(<span class="params">curEle,className</span>)</span>&#123;</div><div class="line">    <span class="comment">// 包含多个class时</span></div><div class="line">    <span class="keyword">var</span> arr = className.replace(<span class="regexp">/(^ +| +$)/g</span>,<span class="string">""</span>).split(<span class="regexp">/ +/g</span>);<span class="comment">// 1到多个空格拆分</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">        <span class="keyword">if</span>(!hasClass(curEle,arr[i]))&#123;</div><div class="line">            curEle.className += <span class="string">" "</span> + arr[i];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="removeClass-curEle-className"><a href="#removeClass-curEle-className" class="headerlink" title="removeClass(curEle,className)"></a>removeClass(curEle,className)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeClass</span>(<span class="params">curEle,className</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = className.replace(<span class="regexp">/(^ +| +$)/g</span>,<span class="string">""</span>).split(<span class="regexp">/ +/g</span>);<span class="comment">// 1到多个空格拆分</span></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">        <span class="keyword">if</span>(hasClass(curEle,arr[i]))&#123;</div><div class="line">            <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| +)"</span>+ arr[i] +<span class="string">"( +|$)"</span>,<span class="string">"g"</span>);</div><div class="line">            curEle.className = curEle.className.replace(reg,<span class="string">" "</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="getElementsByClass-oParent-className"><a href="#getElementsByClass-oParent-className" class="headerlink" title="getElementsByClass(oParent,className)"></a>getElementsByClass(oParent,className)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//document.getElementsByClassName("b1 b2")// 同时包含b1和b2，和样式顺序和中间空格的多少无关</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getElementsByClass</span>(<span class="params">oParent,className</span>)</span>&#123;</div><div class="line">    oParent = oParent || <span class="built_in">document</span>;</div><div class="line">    <span class="keyword">var</span> classNameArr = className.replace(<span class="regexp">/(^ +| +$)/g</span>,<span class="string">""</span>).split(<span class="regexp">/ +/g</span>);</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.getComputedStyle)&#123;</div><div class="line">        <span class="keyword">return</span> listToArray(oParent.getElementsByClassName(className));</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// ie6-8</span></div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    <span class="keyword">var</span> nodeList = oParent.getElementsByTagName(<span class="string">"*"</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; nodeList.length;i ++)&#123;</div><div class="line">        <span class="keyword">var</span> curNode = nodeList[i];</div><div class="line">        <span class="keyword">var</span> isOk = <span class="literal">true</span>;<span class="comment">// 假设curNode中包含</span></div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> k = <span class="number">0</span>;k &lt; classNameArr.length;k ++)&#123;</div><div class="line">            <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^| +)"</span>+ classNameArr[k] +<span class="string">"( +|$)"</span>);</div><div class="line">            <span class="keyword">if</span>(!reg.test(curNode.className))&#123;</div><div class="line">                isOk = <span class="literal">false</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(isOk)&#123;<span class="comment">// 拿每一个标签分别和所有样式类名比较之后</span></div><div class="line">            arr.push(curNode);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="getCss-curEle-attr"><a href="#getCss-curEle-attr" class="headerlink" title="getCss(curEle,attr)"></a>getCss(curEle,attr)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCss</span>(<span class="params">curEle,attr</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> val = <span class="literal">null</span>,reg = <span class="literal">null</span>;</div><div class="line">    <span class="comment">//var val = reg = null;// 这样写reg是全局的</span></div><div class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.getComputedStyle)&#123;</div><div class="line">        val = <span class="built_in">window</span>.getComputedStyle(curEle,<span class="literal">null</span>)[attr];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;<span class="comment">// ie6-8</span></div><div class="line">        <span class="keyword">if</span>(attr === <span class="string">"opacity"</span>)&#123;</div><div class="line">            val = curEle.currentStyle[<span class="string">"filter"</span>];<span class="comment">// alpha(opacty=10)</span></div><div class="line">            reg = <span class="regexp">/^alpha\(opacity=(\d+(?:\.\d+)?)\)$/i</span>;</div><div class="line">            val = reg.test(val) ? reg.exec(val)[<span class="number">1</span>] / <span class="number">100</span> : <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            val = curEle.currentStyle[attr];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 负数、小数、单位可能出现或不出现</span></div><div class="line">    reg = <span class="regexp">/^(-?\d+(\.\d+)?)(px|pt|rem|em)?$/i</span>;</div><div class="line">    <span class="keyword">return</span> reg.test(val) ? <span class="built_in">parseFloat</span>(val) : val;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="setCss-curEle-attr"><a href="#setCss-curEle-attr" class="headerlink" title="setCss(curEle,attr)"></a>setCss(curEle,attr)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setCss</span>(<span class="params">curEle,attr,value</span>)</span>&#123;</div><div class="line">    <span class="comment">// float</span></div><div class="line">    <span class="keyword">if</span>(attr === <span class="string">"float"</span>)&#123;</div><div class="line">        curEle[<span class="string">"style"</span>][<span class="string">"cssFloat"</span>] = value;</div><div class="line">        curEle[<span class="string">"style"</span>][<span class="string">"styleFloat"</span>] = value;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// opacity</span></div><div class="line">    <span class="keyword">if</span>(attr === <span class="string">"opacity"</span>)&#123;</div><div class="line">        curEle[<span class="string">"style"</span>][<span class="string">"opacity"</span>] = value;</div><div class="line">        curEle[<span class="string">"style"</span>][<span class="string">"filter"</span>] = <span class="string">"alpha(opacity="</span>+ value * <span class="number">100</span> +<span class="string">")"</span>;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 如果没有单位，需要加上默认的</span></div><div class="line">    <span class="keyword">var</span> reg = <span class="literal">null</span>;</div><div class="line">    reg = <span class="regexp">/^(width|height|top|right|bottom|left|((margin|padding)(Top|Right|Bottom|Left)?))$/</span>;</div><div class="line">    <span class="keyword">if</span>(reg.test(attr))&#123;</div><div class="line">        <span class="keyword">if</span>(!<span class="built_in">isNaN</span>(value))&#123;<span class="comment">// 传递进来的是否是数字</span></div><div class="line">            value += <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    curEle[<span class="string">"style"</span>][attr] = value;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="setGroupCss-curEle-opt"><a href="#setGroupCss-curEle-opt" class="headerlink" title="setGroupCss(curEle,opt)"></a>setGroupCss(curEle,opt)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">setGroupCss</span>(<span class="params">curEle,opt</span>)</span>&#123;</div><div class="line">    <span class="comment">// Object.prototype.toString.call()</span></div><div class="line">    opt = opt || <span class="number">0</span>;<span class="comment">// null 或 undefined</span></div><div class="line">    <span class="keyword">if</span>(opt.toString() !== <span class="string">"[object Object]"</span>)&#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> opt)&#123;</div><div class="line">        <span class="keyword">if</span>(opt.hasOwnProperty(key))&#123;<span class="comment">// ?</span></div><div class="line">            setCss(curEle,key,opt[key]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="css-curEle"><a href="#css-curEle" class="headerlink" title="css(curEle)"></a>css(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获取、单独和批量设置</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">css</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> argTwo = <span class="built_in">arguments</span>[<span class="number">1</span>];</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> argTwo === <span class="string">"string"</span>)&#123;<span class="comment">// 获取或设置</span></div><div class="line">        <span class="keyword">var</span> argThree = <span class="built_in">arguments</span>[<span class="number">2</span>];</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> argThree === <span class="string">"undefined"</span>)&#123;<span class="comment">// 第三个参数不存在，这样判断!argThree，传0出问题</span></div><div class="line">            <span class="comment">// return getCss(curEle,argTwo);</span></div><div class="line">            <span class="keyword">return</span> getCss.apply(<span class="keyword">this</span>,<span class="built_in">arguments</span>);</div><div class="line">        &#125;</div><div class="line">        setCss.apply(<span class="keyword">this</span>,<span class="built_in">arguments</span>);</div><div class="line">        <span class="comment">/*setCss(curEle,argTwo,argThree);*/</span></div><div class="line">    &#125;</div><div class="line">    argTwo = argTwo || <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span>(argTwo.toString() === <span class="string">"[object Object]"</span>)&#123;</div><div class="line">        <span class="comment">// 批量设置</span></div><div class="line">        setGroupCss.apply(<span class="keyword">this</span>,<span class="built_in">arguments</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="offset-curEle"><a href="#offset-curEle" class="headerlink" title="offset(curEle)"></a>offset(curEle)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">offset</span>(<span class="params">curEle</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> totalLeft = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> totalTop = <span class="number">0</span>;</div><div class="line">    <span class="keyword">var</span> parent = curEle.offsetParent;</div><div class="line">    totalLeft += curEle.offsetLeft;</div><div class="line">    totalTop += curEle.offsetTop;</div><div class="line">    <span class="keyword">while</span>(parent)&#123;</div><div class="line">        <span class="comment">// 在标准的ie8中，offsetLeft已经把边框算进去了</span></div><div class="line">        <span class="keyword">if</span>(navigator.userAgent.indexOf(<span class="string">"MSIE 8.0"</span>) === <span class="number">-1</span>)&#123;<span class="comment">// 不是ie8</span></div><div class="line">            totalLeft += parent.clientLeft;<span class="comment">// 边框</span></div><div class="line">            totalTop += parent.clientTop;</div><div class="line">        &#125;</div><div class="line">        totalLeft += parent.offsetLeft;</div><div class="line">        totalTop += parent.offsetTop;</div><div class="line">        parent = parent.offsetParent;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="string">"top"</span>: totalTop,</div><div class="line">        <span class="string">"left"</span>: totalLeft</div><div class="line">    &#125;;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="win-attr-value"><a href="#win-attr-value" class="headerlink" title="win(attr,value)"></a>win(attr,value)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">win</span>(<span class="params">attr,value</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> value === <span class="string">"undefined"</span>)&#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.documentElement[attr]||<span class="built_in">document</span>.body[attr];</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">document</span>.documentElement[attr] = value;</div><div class="line">    <span class="built_in">document</span>.body[attr] = value;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="bind-curEle-evenType-evenFn"><a href="#bind-curEle-evenType-evenFn" class="headerlink" title="bind(curEle,evenType,evenFn)"></a>bind(curEle,evenType,evenFn)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bind</span>(<span class="params">curEle,evenType,evenFn</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.addEventListener)&#123;<span class="comment">// "addEventListener" in document</span></div><div class="line">        curEle.addEventListener(evenType,evenFn,<span class="literal">false</span>);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 直接写匿名函数不知道怎么删除了</span></div><div class="line">    <span class="keyword">var</span> tempFn = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        evenFn.call(curEle);</div><div class="line">    &#125;</div><div class="line">    tempFn.photo = evenFn;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(!curEle[<span class="string">"myBind"</span> + evenType])&#123;</div><div class="line">        curEle[<span class="string">"myBind"</span> + evenType] = [];</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 解决重复问题</span></div><div class="line">    <span class="keyword">var</span> arr = curEle[<span class="string">"myBind"</span> + evenType];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">        <span class="keyword">if</span>(arr[i].photo === evenFn)&#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    arr.push(tempFn);</div><div class="line"></div><div class="line">    curEle.attachEvent(<span class="string">"on"</span> + evenType,tempFn);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="unbind-curEle-evenType-evenFn"><a href="#unbind-curEle-evenType-evenFn" class="headerlink" title="unbind(curEle,evenType,evenFn)"></a>unbind(curEle,evenType,evenFn)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">unbind</span>(<span class="params">curEle,evenType,evenFn</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.removeEventListener)&#123;<span class="comment">// "addEventListener" in document</span></div><div class="line">        curEle.removeEventListener(evenType,evenFn,<span class="literal">false</span>);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//curEle.detachEvent("on" + evenType,tempFn);</span></div><div class="line">    <span class="keyword">var</span> arr = curEle[<span class="string">"myBind"</span> + evenType];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">        <span class="keyword">if</span>(arr[i].photo === evenFn)&#123;</div><div class="line">            arr.splice(i,<span class="number">1</span>);</div><div class="line">            curEle.detachEvent(<span class="string">"on"</span> + evenType,arr[i]);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;listToArray-likeArr&quot;&gt;&lt;a href=&quot;#listToArray-likeArr&quot; class=&quot;headerlink&quot; title=&quot;listToArray(likeArr)&quot;&gt;&lt;/a&gt;listToArray(likeArr)&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 类数组转数组&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;listToArray&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;likeArr&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        arr = &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype.slice.call(likeArr);&lt;span class=&quot;comment&quot;&gt;// [].slice，ie低版本不兼容&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt;(e)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i &amp;lt; likeArr.length;i ++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            arr[arr.length] = likeArr[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; arr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="JS" scheme="http://wwww.yesokiloveyou.com/categories/JS/"/>
    
    
      <category term="方法封装" scheme="http://wwww.yesokiloveyou.com/tags/%E6%96%B9%E6%B3%95%E5%B0%81%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>用Node搭建简易CRM系统</title>
    <link href="http://wwww.yesokiloveyou.com/2016/12/27/crm/"/>
    <id>http://wwww.yesokiloveyou.com/2016/12/27/crm/</id>
    <published>2016-12-27T13:44:56.000Z</published>
    <updated>2017-01-01T06:50:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求文档"><a href="#需求文档" class="headerlink" title="需求文档"></a>需求文档</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 1、查：打开页面时，获取所有用户信息</div><div class="line"> * 2、增：新增客户</div><div class="line"> * 3、改：先获取指定客户ID的信息，再更新其信息</div><div class="line"> * 4、删：删除指定客户ID的信息</div><div class="line"> */</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="接口文档"><a href="#接口文档" class="headerlink" title="接口文档"></a>接口文档</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 1、获取所有客户的信息</div><div class="line"> * URL: "/getList"    &gt;    GET</div><div class="line"> * 参数: &#123;客户端传递给服务器的内容&#125;    &gt;    无</div><div class="line"> * 返回: &#123;服务器返回给客户端的内容&#125;</div><div class="line"> * '&#123;</div><div class="line"> *      "code": 0,// 返回结果标识，0代表成功，1代表失败(没用任何客户的信息)</div><div class="line"> *      "msg": "获取成功",// 返回结果标识的说明信息</div><div class="line"> *      "data": &#123;</div><div class="line"> *          "id": **,</div><div class="line"> *          "name": **,</div><div class="line"> *          "age": **,</div><div class="line"> *          "phone": **,</div><div class="line"> *          "address": **</div><div class="line"> *      &#125;</div><div class="line"> * &#125;'</div><div class="line"> *</div><div class="line"> * ........................................................</div><div class="line"> * </div><div class="line"> * 2、获取具体的某一个客户的信息</div><div class="line"> * URL: "/getInfo"    &gt;    GET</div><div class="line"> * 参数: ?id=**，客户ID传递给服务器</div><div class="line"> * 返回:</div><div class="line"> * '&#123;</div><div class="line"> *      "code": 0,</div><div class="line"> *      "msg": "获取成功",</div><div class="line"> *      "data": &#123;</div><div class="line"> *          "id": **,</div><div class="line"> *          "name": **,</div><div class="line"> *          "age": **,</div><div class="line"> *          "phone": **,</div><div class="line"> *          "address": **</div><div class="line"> *      &#125;</div><div class="line"> * &#125;'</div><div class="line"> *</div><div class="line"> * ........................................................</div><div class="line"> *</div><div class="line"> * 3、增加客户信息</div><div class="line"> * URL: "/addInfo"    &gt;    POST</div><div class="line"> * 参数: '&#123;"name":"","age":"","phone":"","address":""&#125;'，ID是服务器有规律生成的，不用传</div><div class="line"> * 返回: </div><div class="line"> * '&#123;</div><div class="line"> *      "code": 0,</div><div class="line"> *      "msg": "增加成功"</div><div class="line"> * &#125;'</div><div class="line"> *</div><div class="line"> * ........................................................</div><div class="line"> *</div><div class="line"> * 4、修改客户信息(点提交后需要把修改的内容传递过去)</div><div class="line"> * URL: "/updateInfo"</div><div class="line"> * 参数: '&#123;"name":"","age":"","phone":"","address":""&#125;'</div><div class="line"> * 返回:</div><div class="line"> * '&#123;</div><div class="line"> *      "code": 0,</div><div class="line"> *      "msg": ""</div><div class="line"> * &#125;'</div><div class="line"> *</div><div class="line"> * ........................................................</div><div class="line"> *</div><div class="line"> * 5、删除客户信息</div><div class="line"> * URL: "/removeInfo"</div><div class="line"> * 参数: ?id=**</div><div class="line"> * 返回:</div><div class="line"> * '&#123;</div><div class="line"> *      "code": 0,</div><div class="line"> *      "msg": ""</div><div class="line"> * &#125;'</div><div class="line"> */</div></pre></td></tr></table></figure>
<h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><h3 id="Server1-0"><a href="#Server1-0" class="headerlink" title="Server1.0"></a>Server1.0</h3><p>server.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 前端路由：根据客户端请求的内容不同，服务器返回不同的内容</span></div><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</div><div class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">"url"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="comment">// req.url: "/index.html?name=yangk"</span></div><div class="line">    <span class="comment">// pathname: "/index.html"</span></div><div class="line">    <span class="comment">// query: &#123;name:'yangk'&#125;</span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> urlObj = url.parse(req.url,<span class="literal">true</span>);<span class="comment">// true返回的query是json格式</span></div><div class="line">    <span class="keyword">var</span> pathname = urlObj.pathname;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(pathname === <span class="string">"/index.html"</span>)&#123;</div><div class="line">        <span class="keyword">var</span> con = fs.readFileSync(<span class="string">"./index.html"</span>,<span class="string">"utf-8"</span>);<span class="comment">// 同步读取</span></div><div class="line">        res.write(con);</div><div class="line">        res.end();</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">3000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'3000 port is starting...'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>index.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    my name is aaa.</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="Server1-1"><a href="#Server1-1" class="headerlink" title="Server1.1"></a>Server1.1</h3><p>server.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>),</div><div class="line">    url = <span class="built_in">require</span>(<span class="string">"url"</span>),</div><div class="line">    fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> urlObj = url.parse(req.url,<span class="literal">true</span>),</div><div class="line">        pathname = urlObj.pathname,</div><div class="line">        query = urlObj.query;</div><div class="line"></div><div class="line">    <span class="comment">/*if(pathname === "/index.html")&#123;</span></div><div class="line">        var con = fs.readFileSync("./index.html","utf-8");// 同步</div><div class="line">        res.end(con);// 返回并结束</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    if(pathname === "/css/index.css")&#123;</div><div class="line">        con = fs.readFileSync("./css/index.css","utf-8");</div><div class="line">        res.end(con);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    if(pathname === "/js/index.js")&#123;</div><div class="line">        con = fs.readFileSync("./js/index.js","utf-8");</div><div class="line">        res.end(con);</div><div class="line">        return;</div><div class="line">    &#125;*/</div><div class="line"></div><div class="line">    <span class="comment">// 简化上面代码</span></div><div class="line">    <span class="keyword">try</span>&#123;</div><div class="line">        <span class="keyword">var</span> con = fs.readFileSync(<span class="string">"."</span> + pathname,<span class="string">"utf-8"</span>);</div><div class="line">        res.end(con)</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span>(e)&#123;</div><div class="line">        <span class="comment">// 防止客户端请求的资源文件不存在而报错，例如：favicon.ico</span></div><div class="line">        res.end(<span class="string">"request file is not find!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">3000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'3000 port is starting...'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>index.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div1"</span>);</div><div class="line">oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.color = <span class="string">"red"</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>index.html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/index.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/index.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="Server1-2"><a href="#Server1-2" class="headerlink" title="Server1.2"></a>Server1.2</h3><p>server.js<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>),</div><div class="line">    url = <span class="built_in">require</span>(<span class="string">"url"</span>),</div><div class="line">    fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> urlObj = url.parse(req.url,<span class="literal">true</span>),</div><div class="line">        pathname = urlObj.pathname,<span class="comment">// "/index.html"</span></div><div class="line">        query = urlObj.query;<span class="comment">// &#123;name:'yangk'&#125;</span></div><div class="line"></div><div class="line">    <span class="comment">// 处理静态资源文件</span></div><div class="line">    <span class="keyword">var</span> reg = <span class="regexp">/\.(HTML|JS|CSS|JSON|TXT|ICO)/i</span>;</div><div class="line">    <span class="keyword">if</span>(reg.test(pathname))&#123;</div><div class="line">        <span class="comment">// [".html","html",index:6,input:'/index.html']</span></div><div class="line">        <span class="keyword">var</span> suffix = reg.exec(pathname)[<span class="number">1</span>].toUpperCase();<span class="comment">// 后缀</span></div><div class="line"></div><div class="line">        <span class="comment">// 根据请求文件的后缀名获取当前文件的MIME类型</span></div><div class="line">        <span class="keyword">var</span> suffixMIME = <span class="string">"text/plain"</span>;</div><div class="line">        <span class="keyword">switch</span>(suffix)&#123;</div><div class="line">            <span class="keyword">case</span> <span class="string">"HTML"</span>:</div><div class="line">                siffixMIME = <span class="string">"text/html"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">"CSS"</span>:</div><div class="line">                siffixMIME = <span class="string">"text/css"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">"JS"</span>:</div><div class="line">                siffixMIME = <span class="string">"text/javascript"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">"JSON"</span>:</div><div class="line">                siffixMIME = <span class="string">"application/json"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">"ICO"</span>:</div><div class="line">                siffixMIME = <span class="string">"application/octet-stream"</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="keyword">var</span> conFile = fs.readFileSync(<span class="string">"."</span> + pathname,<span class="string">"utf-8"</span>);</div><div class="line">            res.writeHead(<span class="number">200</span>,&#123;<span class="comment">// 重写响应头信息，chrome不加也问题不大，这里主要针对IE的</span></div><div class="line">                <span class="string">"content-type"</span>: siffixMIME + <span class="string">";charset=utf-8"</span></div><div class="line">            &#125;);</div><div class="line">            res.end(conFile);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">catch</span>(e)&#123;</div><div class="line">            res.writeHead(<span class="number">404</span>,&#123;</div><div class="line">                <span class="string">"content-type"</span>: suffixMIME</div><div class="line">            &#125;);</div><div class="line">            res.end(conFile);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">3000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'3000 port is starting...'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h2 id="编写接口"><a href="#编写接口" class="headerlink" title="编写接口"></a>编写接口</h2><h3 id="getList"><a href="#getList" class="headerlink" title="getList"></a>getList</h3><p>1)获取所有客户信息：<a href="http://localhost:3000/getList" target="_blank" rel="external">http://localhost:3000/getList</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> con = <span class="literal">null</span>,</div><div class="line">    result = <span class="literal">null</span>,</div><div class="line">    customId = <span class="literal">null</span>,</div><div class="line">    customPath = <span class="string">"./js/custom.json"</span>;</div><div class="line"></div><div class="line">con = fs.readFileSync(customPath,<span class="string">"utf-8"</span>);<span class="comment">// 首先读取内容</span></div><div class="line">con = <span class="built_in">JSON</span>.parse(con.length === <span class="number">0</span> ? <span class="string">'[]'</span> : con);<span class="comment">// JSON.parse("")，防止为空时报错</span></div><div class="line"></div><div class="line"><span class="keyword">if</span>(pathname === <span class="string">"/getList"</span>)&#123;</div><div class="line">    <span class="comment">// 按照接口开发</span></div><div class="line">    result = &#123;</div><div class="line">        <span class="attr">code</span>: <span class="number">1</span>,</div><div class="line">        <span class="attr">msg</span>: <span class="string">"获取客户信息失败"</span>,</div><div class="line">        <span class="attr">data</span>: <span class="literal">null</span></div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">if</span>(con.length &gt; <span class="number">0</span>)&#123;</div><div class="line">        result = &#123;</div><div class="line">            <span class="attr">code</span>: <span class="number">0</span>,</div><div class="line">            <span class="attr">msg</span>: <span class="string">"获取客户信息成功"</span>,</div><div class="line">            <span class="attr">data</span>: con</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line">    res.writeHead(<span class="number">200</span>,&#123;</div><div class="line">        <span class="string">'content-type'</span>: <span class="string">'application/json;charset=utf-8;'</span><span class="comment">// 重置相应头信息，防止IE乱码</span></div><div class="line">    &#125;);</div><div class="line">    res.end(<span class="built_in">JSON</span>.stringify(result));<span class="comment">// 返回信息，把对象转为JSON格式的字符串</span></div><div class="line">    <span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="getInfo"><a href="#getInfo" class="headerlink" title="getInfo"></a>getInfo</h3><p>2)根据客户端传递ID获取对应信息<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(pathname === <span class="string">"/getInfo"</span>)&#123;</div><div class="line">    customId = query[<span class="string">"id"</span>];</div><div class="line">    result = &#123;</div><div class="line">        <span class="attr">code</span>: <span class="number">1</span>,</div><div class="line">        <span class="attr">msg</span>: <span class="string">"获取客户信息失败"</span>,</div><div class="line">        <span class="attr">data</span>: <span class="literal">null</span></div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; con.length;i ++)&#123;</div><div class="line">        <span class="keyword">if</span>(con[i].id == customId)&#123;</div><div class="line">            result = &#123;</div><div class="line">                <span class="attr">code</span>: <span class="number">0</span>,</div><div class="line">                <span class="attr">msg</span>: <span class="string">"获取客户信息成功"</span>,</div><div class="line">                <span class="attr">data</span>: con[i]</div><div class="line">            &#125;;</div><div class="line">            <span class="keyword">break</span>;<span class="comment">// 找到就不用再往下继续找了，提高性能</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    res.writeHead(<span class="number">200</span>,&#123;</div><div class="line">        <span class="string">'content-type'</span>: <span class="string">'application/json;charset=utf-8;'</span></div><div class="line">    &#125;);</div><div class="line">    res.end(<span class="built_in">JSON</span>.stringify(result));</div><div class="line">    <span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="removeInfo"><a href="#removeInfo" class="headerlink" title="removeInfo"></a>removeInfo</h3><p>3)根据客户端传递删除对应信息<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(pathname === <span class="string">"/removeInfo"</span>)&#123;</div><div class="line">    customId = query[<span class="string">"id"</span>];</div><div class="line">    result = &#123;</div><div class="line">        <span class="attr">code</span>: <span class="number">1</span>,</div><div class="line">        <span class="attr">msg</span>: <span class="string">"删除客户信息失败"</span></div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; con.length;i ++)&#123;</div><div class="line">        <span class="keyword">var</span> flag = <span class="literal">false</span>;</div><div class="line">        <span class="keyword">if</span>(customId == con[i][<span class="string">"id"</span>])&#123;</div><div class="line">            con.splice(i,<span class="number">1</span>);</div><div class="line">            flag = <span class="literal">true</span>;</div><div class="line">            <span class="keyword">break</span>;<span class="comment">// 删除完毕则推出循环</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(flag)&#123;<span class="comment">// 说明删除成功了，把con写入</span></div><div class="line">        fs.writeFileSync(customPath,<span class="built_in">JSON</span>.stringify(con),<span class="string">"utf-8"</span>);<span class="comment">// 读取进来的是字符串，写入的也是字符串</span></div><div class="line">        result = &#123;</div><div class="line">            <span class="attr">code</span>: <span class="number">0</span>,</div><div class="line">            <span class="attr">msg</span>: <span class="string">"删除客户信息成功"</span></div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line">    res.writeHead(<span class="number">200</span>,&#123;</div><div class="line">        <span class="string">'content-type'</span>: <span class="string">'application/json;charset=utf-8;'</span></div><div class="line">    &#125;);</div><div class="line">    res.end(<span class="built_in">JSON</span>.stringify(result));</div><div class="line">    <span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="addInfo"><a href="#addInfo" class="headerlink" title="addInfo"></a>addInfo</h3><p>4)增加客户信息<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(pathname === <span class="string">"/addInfo"</span>)&#123;</div><div class="line">    <span class="keyword">var</span> str = <span class="string">''</span>;</div><div class="line">    req.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>)</span>&#123;<span class="comment">// 服务器接收post中data传递的内容</span></div><div class="line">        str += chunk;</div><div class="line">    &#125;);</div><div class="line">    req.on(<span class="string">'end'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="comment">// str = '&#123;"name":"","age":""&#125;'</span></div><div class="line">        <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(str);<span class="comment">// 转JSON对象</span></div><div class="line">        result = &#123;</div><div class="line">            <span class="attr">code</span>: <span class="number">1</span>,</div><div class="line">            <span class="attr">msg</span>: <span class="string">"增加客户信息失败"</span></div><div class="line">        &#125;;</div><div class="line">        <span class="keyword">if</span>(data[<span class="string">"name"</span>] == <span class="string">""</span>)&#123;<span class="comment">// data["age"]...</span></div><div class="line">            res.writeHead(<span class="number">200</span>,&#123;</div><div class="line">                <span class="string">'content-type'</span>: <span class="string">'application/json;charset=utf-8;'</span></div><div class="line">            &#125;);</div><div class="line">            res.end(<span class="built_in">JSON</span>.stringify(result));</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        con.length === <span class="number">0</span> ? data[<span class="string">"id"</span>] = <span class="number">1</span> : data[<span class="string">"id"</span>] = <span class="built_in">parseFloat</span>(con[con.length - <span class="number">1</span>][<span class="string">"id"</span>]) + <span class="number">1</span>;</div><div class="line">        con.push(data);</div><div class="line"></div><div class="line">        fs.writeFileSync(customPath,<span class="built_in">JSON</span>.stringify(con),<span class="string">"utf-8"</span>);</div><div class="line">        result = &#123;</div><div class="line">            <span class="attr">code</span>: <span class="number">0</span>,</div><div class="line">            <span class="attr">msg</span>: <span class="string">"增加客户信息成功"</span></div><div class="line">        &#125;;</div><div class="line">        res.writeHead(<span class="number">200</span>,&#123;</div><div class="line">            <span class="string">'content-type'</span>: <span class="string">'application/json;charset=utf-8;'</span></div><div class="line">        &#125;);</div><div class="line">        res.end(<span class="built_in">JSON</span>.stringify(result));</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">return</span>;<span class="comment">// 注意位置！</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="updateInfo"><a href="#updateInfo" class="headerlink" title="updateInfo"></a>updateInfo</h3><p>5)修改客户信息<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(pathname === <span class="string">"/updateInfo"</span>)&#123;</div><div class="line">    <span class="keyword">var</span> str = <span class="string">''</span>;</div><div class="line">    req.on(<span class="string">"data"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>)</span>&#123;</div><div class="line">        str += chunk;</div><div class="line">    &#125;);</div><div class="line">    <span class="comment">// 注意：req.on("end",function()&#123;...&#125;)和res.end('...')别搞混淆了</span></div><div class="line">    req.on(<span class="string">"end"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(str);<span class="comment">// 转JSON对象</span></div><div class="line">        result = &#123;</div><div class="line">            <span class="attr">code</span>: <span class="number">1</span>,</div><div class="line">            <span class="attr">msg</span>: <span class="string">"修改客户信息失败"</span></div><div class="line">        &#125;;</div><div class="line">        <span class="keyword">if</span>(data[<span class="string">"name"</span>] == <span class="string">""</span>)&#123;<span class="comment">// data["age"]...</span></div><div class="line">            res.writeHead(<span class="number">200</span>,&#123;</div><div class="line">                <span class="string">'content-type'</span>: <span class="string">'application/json;charset=utf-8;'</span></div><div class="line">            &#125;);</div><div class="line">            res.end(<span class="built_in">JSON</span>.stringify(result));</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">var</span> flag = <span class="literal">false</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; con.length;i ++)&#123;</div><div class="line">            <span class="keyword">if</span>(data[<span class="string">"id"</span>] == con[i][<span class="string">"id"</span>])&#123;</div><div class="line">                con[i] = data;<span class="comment">// 能改...</span></div><div class="line">                flag = <span class="literal">true</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(flag)&#123;<span class="comment">// 说明修改成功了</span></div><div class="line">            fs.writeFileSync(customPath,<span class="built_in">JSON</span>.stringify(con),<span class="string">"utf-8"</span>);<span class="comment">// 写入</span></div><div class="line">            result = &#123;</div><div class="line">                <span class="attr">code</span>: <span class="number">0</span>,</div><div class="line">                <span class="attr">msg</span>: <span class="string">"修改客户信息成功"</span></div><div class="line">            &#125;;</div><div class="line">        &#125;</div><div class="line">        res.writeHead(<span class="number">200</span>,&#123;</div><div class="line">            <span class="string">'content-type'</span>: <span class="string">'application/json;charset=utf-8;'</span></div><div class="line">        &#125;);</div><div class="line">        res.end(<span class="built_in">JSON</span>.stringify(result));</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><h3 id="index-js"><a href="#index-js" class="headerlink" title="index.js"></a>index.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> indexInit = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> $list = $(<span class="string">"#list"</span>),</div><div class="line">        $del = $(<span class="string">"#del"</span>);</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">addData</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        $.ajax(&#123;</div><div class="line">            <span class="string">"url"</span>: <span class="string">"/getList"</span>,<span class="comment">// 相对于根目录</span></div><div class="line">            success: callback</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params">jsonData</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> arr = jsonData.data;</div><div class="line">        <span class="keyword">var</span> str = <span class="string">''</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">            str += <span class="string">'&lt;li&gt;'</span>;</div><div class="line">                str += <span class="string">'&lt;span class="w50"&gt;'</span>+ arr[i].id +<span class="string">'&lt;/span&gt;'</span>;</div><div class="line">                str += <span class="string">'&lt;span class="w150"&gt;'</span>+ arr[i].name +<span class="string">'&lt;/span&gt;'</span>;</div><div class="line">                str += <span class="string">'&lt;span class="w50"&gt;'</span>+ arr[i].age +<span class="string">'&lt;/span&gt;'</span>;</div><div class="line">                str += <span class="string">'&lt;span class="w200"&gt;'</span>+ arr[i].phone +<span class="string">'&lt;/span&gt;'</span>;</div><div class="line">                str += <span class="string">'&lt;span class="w200"&gt;'</span>+ arr[i].address +<span class="string">'&lt;/span&gt;'</span>;</div><div class="line">                str += <span class="string">'&lt;span class="w150 control"&gt;'</span>;</div><div class="line">                    str += <span class="string">'&lt;a href="add.html?id='</span>+ arr[i].id +<span class="string">'"&gt;修改&lt;/a&gt;'</span>;</div><div class="line">                    str += <span class="string">'&lt;a href="javascript:;" id="del" customId="'</span>+ arr[i].id +<span class="string">'"&gt;删除&lt;/a&gt;'</span>;</div><div class="line">                str += <span class="string">'&lt;/span&gt;'</span>;</div><div class="line">            str += <span class="string">'&lt;/li&gt;'</span>;</div><div class="line">        &#125;</div><div class="line">        $list.html(str);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">bind</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        $list.on(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;<span class="comment">// 这里可能还没加载进来，所以获取删除按钮要用事件委托</span></div><div class="line">            ev = ev || event;</div><div class="line">            ev.target = ev.target || ev.srcElement;</div><div class="line">            <span class="keyword">if</span>(ev.target.tagName.toLowerCase() == <span class="string">"a"</span> &amp;&amp; ev.target.id == <span class="string">"del"</span>)&#123;</div><div class="line">                <span class="keyword">var</span> flag = <span class="built_in">window</span>.confirm(<span class="string">"are you sure?"</span>)</div><div class="line">                <span class="keyword">if</span>(flag)&#123;</div><div class="line">                    $.ajax(&#123;</div><div class="line">                        <span class="attr">url</span>: <span class="string">"/removeInfo?id="</span> + ev.target.getAttribute(<span class="string">"customId"</span>),</div><div class="line">                        <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">jsonData</span>)</span>&#123;</div><div class="line">                            <span class="keyword">if</span>(jsonData &amp;&amp; jsonData.code == <span class="number">0</span>)&#123;</div><div class="line">                                $list[<span class="number">0</span>].removeChild(ev.target.parentNode.parentNode);</div><div class="line">                                <span class="keyword">return</span>;</div><div class="line">                            &#125;</div><div class="line">                            alert(jsonData.msg);</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        addData();<span class="comment">// 初始化数据</span></div><div class="line">        bind();<span class="comment">// 事件绑定</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="attr">init</span>: init</div><div class="line">    &#125;;</div><div class="line">&#125;)();</div><div class="line">indexInit.init();</div></pre></td></tr></table></figure>
<h3 id="add-js"><a href="#add-js" class="headerlink" title="add.js"></a>add.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> addInit = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> $name = $(<span class="string">"#userName"</span>),</div><div class="line">        $age = $(<span class="string">"#userAge"</span>),</div><div class="line">        $phone = $(<span class="string">"#userPhone"</span>),</div><div class="line">        $address = $(<span class="string">"#userAddress"</span>),</div><div class="line">        $submit = $(<span class="string">"#submit"</span>),</div><div class="line">        objData = <span class="literal">null</span>;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">bind</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">String</span>.prototype.queryURLParameter = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> obj = &#123;&#125;,</div><div class="line">                reg = <span class="regexp">/([^?=&amp;#]+)=([^?=&amp;#]+)/g</span>;</div><div class="line">            <span class="keyword">this</span>.replace(reg, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">                <span class="keyword">var</span> key = <span class="built_in">arguments</span>[<span class="number">1</span>],</div><div class="line">                    value = <span class="built_in">arguments</span>[<span class="number">2</span>];</div><div class="line">                obj[key] = value;</div><div class="line">            &#125;);</div><div class="line">            <span class="keyword">return</span> obj;</div><div class="line">        &#125;;</div><div class="line">        <span class="keyword">var</span> urlObj = <span class="built_in">window</span>.location.href.queryURLParameter(),<span class="comment">// &#123;id: 1&#125;</span></div><div class="line">            customId = urlObj[<span class="string">"id"</span>],</div><div class="line">            isFlag = <span class="keyword">typeof</span> customId === <span class="string">"undefined"</span> ? <span class="literal">false</span> : <span class="literal">true</span>;<span class="comment">// true代表修改，false代表增加</span></div><div class="line"></div><div class="line">        <span class="comment">// 更新，不应该需要时间触发</span></div><div class="line">        $.ajax(&#123;</div><div class="line">            <span class="attr">url</span>: <span class="string">"/getInfo?id="</span> + customId,</div><div class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">jsonData</span>)</span>&#123;</div><div class="line">                <span class="keyword">if</span>(jsonData &amp;&amp; jsonData.code == <span class="number">0</span>)&#123;</div><div class="line">                    $name.val(jsonData.data[<span class="string">"name"</span>]);</div><div class="line">                    $age.val(jsonData.data[<span class="string">"age"</span>]);</div><div class="line">                    $phone.val(jsonData.data[<span class="string">"phone"</span>]);</div><div class="line">                    $address.val(jsonData.data[<span class="string">"address"</span>]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        <span class="comment">// 点击增加</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">addInfo</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            $.ajax(&#123;</div><div class="line">                <span class="attr">url</span>: <span class="string">"/addInfo"</span>,</div><div class="line">                <span class="attr">type</span>: <span class="string">"post"</span>,</div><div class="line">                <span class="attr">data</span>: <span class="built_in">JSON</span>.stringify(objData),<span class="comment">// 传字符串格式的数据！</span></div><div class="line">                success: addCallback</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">addCallback</span>(<span class="params">jsonData</span>)</span>&#123;</div><div class="line">            <span class="keyword">if</span>(jsonData.code == <span class="number">0</span>)&#123;</div><div class="line">                <span class="built_in">window</span>.location.href = <span class="string">"index.html"</span>;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 点击修改</span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">updateInfo</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">            objData.id = customId;<span class="comment">// 因为增加的时候不需要穿ID，所以这里单独存放</span></div><div class="line">            $.ajax(&#123;</div><div class="line">                <span class="attr">url</span>: <span class="string">"/updateInfo"</span>,</div><div class="line">                <span class="attr">type</span>: <span class="string">"post"</span>,</div><div class="line">                <span class="attr">data</span>: <span class="built_in">JSON</span>.stringify(objData),</div><div class="line">                <span class="attr">success</span>: updateCallback</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">updateCallback</span>(<span class="params">jsonData</span>)</span>&#123;</div><div class="line">            <span class="keyword">if</span>(jsonData &amp;&amp; jsonData.code == <span class="number">0</span>)&#123;</div><div class="line">                <span class="built_in">window</span>.location.href= <span class="string">"index.html"</span>;</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            alert(jsonData.msg);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $submit.on(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 点击提交的时候是修改或者增加，要区分</span></div><div class="line">            objData = &#123;</div><div class="line">                <span class="string">"name"</span>: $name.val() || <span class="string">"无"</span>,</div><div class="line">                <span class="string">"age"</span>: $age.val() || <span class="string">"无"</span>,</div><div class="line">                <span class="string">"phone"</span>: $phone.val() || <span class="string">"无"</span>,</div><div class="line">                <span class="string">"address"</span>: $address.val() || <span class="string">"无"</span></div><div class="line">            &#125;;</div><div class="line">            <span class="keyword">if</span>(isFlag)&#123;<span class="comment">// 修改</span></div><div class="line">                updateInfo();</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;<span class="comment">// 增加</span></div><div class="line">                addInfo();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        bind(); </div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="attr">init</span>: init</div><div class="line">    &#125;;</div><div class="line">&#125;)();</div><div class="line">addInit.init();</div></pre></td></tr></table></figure>
<h2 id="代码下载"><a href="#代码下载" class="headerlink" title="代码下载"></a>代码下载</h2><p><a href="/resources/files/Node.zip">CRM</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;需求文档&quot;&gt;&lt;a href=&quot;#需求文档&quot; class=&quot;headerlink&quot; title=&quot;需求文档&quot;&gt;&lt;/a&gt;需求文档&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 1、查：打开页面时，获取所有用户信息&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 2、增：新增客户&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 3、改：先获取指定客户ID的信息，再更新其信息&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 4、删：删除指定客户ID的信息&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Node" scheme="http://wwww.yesokiloveyou.com/categories/Node/"/>
    
    
      <category term="CRM" scheme="http://wwww.yesokiloveyou.com/tags/CRM/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript Object</title>
    <link href="http://wwww.yesokiloveyou.com/2016/12/11/js-object/"/>
    <id>http://wwww.yesokiloveyou.com/2016/12/11/js-object/</id>
    <published>2016-12-11T13:45:05.000Z</published>
    <updated>2016-12-17T08:01:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="封装-单例模式"><a href="#封装-单例模式" class="headerlink" title="封装-单例模式"></a>封装-单例模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> person1 = &#123;<span class="comment">// 命名空间，起到了分组的作用，也避免了冲突</span></div><div class="line">    <span class="string">"name"</span>: <span class="string">"yangk"</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> person2 = &#123;</div><div class="line">    <span class="string">"name"</span>: <span class="string">"jiangjun"</span></div><div class="line">&#125;;</div><div class="line"><span class="comment">// 解决上述代码重复的问题</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreatePerson</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">        <span class="attr">name</span>: name</div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> person1 = CreatePerson(<span class="string">"yangk"</span>);</div><div class="line"><span class="keyword">var</span> person1 = CreatePerson(<span class="string">"jiangjun"</span>);</div><div class="line"><span class="comment">// 问题：person1和person2之间没有内在的联系，不能反映出它们是同一个原型对象的实例</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="封装-工厂模式"><a href="#封装-工厂模式" class="headerlink" title="封装-工厂模式"></a>封装-工厂模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreatePerson</span>(<span class="params">name,age</span>)</span>&#123;</div><div class="line">    <span class="comment">// 原料</span></div><div class="line">    <span class="keyword">var</span> obj = &#123;&#125;;</div><div class="line">    <span class="comment">// 加工</span></div><div class="line">    obj.name = name;</div><div class="line">    obj.age = age;</div><div class="line">    obj.showName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">    &#125;;</div><div class="line">    <span class="comment">// 出厂</span></div><div class="line">    <span class="keyword">return</span> obj;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> person1 = CreatePerson(<span class="string">"yangk"</span>,<span class="string">"24"</span>);</div><div class="line"><span class="keyword">var</span> person2 = CreatePerson(<span class="string">"jiangjun"</span>,<span class="string">"25"</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(person1.showName == person2.showName);<span class="comment">// false</span></div></pre></td></tr></table></figure>
<h3 id="封装-构造函数-原型模式"><a href="#封装-构造函数-原型模式" class="headerlink" title="封装-构造函数+原型模式"></a>封装-构造函数+原型模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreatePerson</span>(<span class="params">name,age</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.age = age;</div><div class="line">&#125;</div><div class="line">CreatePerson.prototype.showName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> CreatePerson(<span class="string">"yangk"</span>,<span class="string">"24"</span>);<span class="comment">// 不传参时可以把后面的括号省略</span></div><div class="line"><span class="keyword">var</span> person2 = <span class="keyword">new</span> CreatePerson(<span class="string">"jiangjun"</span>,<span class="string">"28"</span>);</div><div class="line"><span class="built_in">console</span>.log(person1.showName == person2.showName);<span class="comment">// true</span></div></pre></td></tr></table></figure>
<h3 id="继承-call-apply"><a href="#继承-call-apply" class="headerlink" title="继承-call/apply"></a>继承-call/apply</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreatePerson</span>(<span class="params">name,sex</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.sex = sex;</div><div class="line">&#125;</div><div class="line">CreatePerson.prototype.showName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateStar</span>(<span class="params">name,sex,job</span>)</span>&#123;</div><div class="line">    CreatePerson.call(<span class="keyword">this</span>,name,sex);<span class="comment">// this实例对象，继承属性</span></div><div class="line">    <span class="keyword">this</span>.job = job;</div><div class="line">&#125;</div><div class="line">CreateStar.prototype = CreatePerson.prototype;<span class="comment">// 继承方法，CreateStar.prototype上添加方法会影响父类</span></div><div class="line">CreateStar.prototype.showJob = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.job);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> CreatePerson(<span class="string">'yangk'</span>,<span class="string">'男'</span>);</div><div class="line"><span class="built_in">console</span>.log(person1.showJob);<span class="comment">// 有</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> person2 = <span class="keyword">new</span> CreateStar(<span class="string">'黄晓明'</span>,<span class="string">'男'</span>,<span class="string">'演员'</span>);</div><div class="line">person2.showName();</div></pre></td></tr></table></figure>
<h3 id="继承-浅拷贝"><a href="#继承-浅拷贝" class="headerlink" title="继承-浅拷贝"></a>继承-浅拷贝</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 解决上面prototype继承的时候影响父类的问题</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">obj1,obj2</span>)</span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> obj2)&#123;</div><div class="line">        obj1[attr] = obj2[attr];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreatePerson</span>(<span class="params">name,sex</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">this</span>.sex = sex;</div><div class="line">&#125;</div><div class="line">CreatePerson.prototype.showName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateStar</span>(<span class="params">name,sex,job</span>)</span>&#123;</div><div class="line">    CreatePerson.call(<span class="keyword">this</span>,name,sex);<span class="comment">// this实例对象，继承属性</span></div><div class="line">    <span class="keyword">this</span>.job = job;</div><div class="line">&#125;</div><div class="line"><span class="comment">//CreateStar.prototype = CreatePerson.prototype;// 继承方法，CreateStar.prototype上添加方法会影响父类</span></div><div class="line">extend(CreateStar.prototype,CreatePerson.prototype);</div><div class="line">CreateStar.prototype.showJob = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.job);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> CreatePerson(<span class="string">'yangk'</span>,<span class="string">'男'</span>);</div><div class="line"><span class="built_in">console</span>.log(person1.showJob);<span class="comment">// undefined</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> person2 = <span class="keyword">new</span> CreateStar(<span class="string">'黄晓明'</span>,<span class="string">'男'</span>,<span class="string">'演员'</span>);</div><div class="line">person2.showName();</div></pre></td></tr></table></figure>
<h3 id="继承-深拷贝"><a href="#继承-深拷贝" class="headerlink" title="继承-深拷贝"></a>继承-深拷贝</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">Child,Parent</span>)</span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> Parent)&#123;</div><div class="line">        Child[attr] = Parent[attr];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span>(<span class="params">Parent,Child</span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">var</span> Child = Child || &#123;&#125;;</div><div class="line">　　　　<span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> Parent)&#123;</div><div class="line">　　　　　　<span class="keyword">if</span>(<span class="keyword">typeof</span> Parent[i] === <span class="string">'object'</span>)&#123;</div><div class="line">　　　　　　　　Child[i] = (Parent[i].constructor === <span class="built_in">Array</span>) ? [] : &#123;&#125;;</div><div class="line">　　　　　　　　deepCopy(Parent[i], Child[i]);</div><div class="line">　　　　　　&#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">　　　　　　　　Child[i] = Parent[i];</div><div class="line">　　　　　　&#125;</div><div class="line">　　　　&#125;</div><div class="line">　　　　<span class="keyword">return</span> Child;</div><div class="line">　　&#125;</div><div class="line"><span class="keyword">var</span> arrParent = [</div><div class="line">    <span class="number">1</span>,</div><div class="line">    <span class="number">2</span>,</div><div class="line">    [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</div><div class="line">];</div><div class="line"><span class="keyword">var</span> arrChild = [];</div><div class="line"><span class="comment">// extend(arrChild,arrParent);</span></div><div class="line"><span class="comment">// deepCopy(arrParent,arrChild);</span></div><div class="line">arrChild = deepCopy(arrParent);</div><div class="line"></div><div class="line">arrChild[<span class="number">2</span>][<span class="number">0</span>] = <span class="string">"yangk"</span>;</div><div class="line"><span class="built_in">console</span>.log(arrParent[<span class="number">2</span>][<span class="number">0</span>]);<span class="comment">// 父元素不变</span></div></pre></td></tr></table></figure>
<h3 id="继承-空对象中介"><a href="#继承-空对象中介" class="headerlink" title="继承-空对象中介"></a>继承-空对象中介</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend</span>(<span class="params">Child,Parent</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line">    F.prototype = Parent.prototype;</div><div class="line">    Child.prototype = <span class="keyword">new</span> F();</div><div class="line">    Child.prototype.constructor = Child;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreatePerson</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">&#125;</div><div class="line">CreatePerson.prototype.showName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateStar</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    CreatePerson.call(<span class="keyword">this</span>,name);<span class="comment">// 属性还是需要call办法继承</span></div><div class="line">&#125;</div><div class="line"><span class="comment">// 避免属性继承，只继承showName，画画原型链就明白</span></div><div class="line"><span class="comment">// var F = function()&#123;&#125;;</span></div><div class="line"><span class="comment">// F.prototype = CreatePerson.prototype;</span></div><div class="line"><span class="comment">// CreateStar.prototype = new F();</span></div><div class="line"><span class="comment">// CreateStar.prototype.constructor = CreateStar;</span></div><div class="line">extend(CreateStar,CreatePerson);</div><div class="line"></div><div class="line">CreateStar.prototype.showYi = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 对父类没影响</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> CreateStar(<span class="string">"yangk"</span>);</div><div class="line">person1.showName();</div><div class="line">person1.showYi();</div></pre></td></tr></table></figure>
<h3 id="关于类中return要注意的"><a href="#关于类中return要注意的" class="headerlink" title="关于类中return要注意的"></a>关于类中return要注意的</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> num = <span class="number">10</span>;<span class="comment">// 这里的num和this.num没有任何关系</span></div><div class="line">    <span class="keyword">this</span>.x = <span class="number">100</span>;</div><div class="line">    <span class="keyword">this</span>.getX = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.x);</div><div class="line">    &#125;;</div><div class="line">    <span class="comment">//return 100;// 不会有卵用</span></div><div class="line">    <span class="comment">//return &#123;name: "yangk"&#125;;// 会覆盖默认返回的</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> f1 = <span class="keyword">new</span> Fn;</div><div class="line"><span class="built_in">console</span>.log(f1.num);<span class="comment">// undefined</span></div><div class="line"><span class="built_in">console</span>.log(f1);<span class="comment">// 默认返回类的实例对象</span></div><div class="line"></div><div class="line"><span class="comment">// instanceof检测实例是否属于某个类</span></div><div class="line"><span class="built_in">console</span>.log(f1 <span class="keyword">instanceof</span> Fn);<span class="comment">// true</span></div><div class="line"><span class="built_in">console</span>.log(f1 <span class="keyword">instanceof</span> <span class="built_in">Object</span>);<span class="comment">// true</span></div><div class="line"></div><div class="line"><span class="comment">// typeof不能细分Object下的数组、正则...，可以用instanceof来细分</span></div></pre></td></tr></table></figure>
<h3 id="判断是否公有属性-方法"><a href="#判断是否公有属性-方法" class="headerlink" title="判断是否公有属性/方法"></a>判断是否公有属性/方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 检测某一个属性是否属于这个对象</span></div><div class="line"><span class="built_in">console</span>.log(<span class="string">"getX"</span> <span class="keyword">in</span> f1);</div><div class="line"><span class="comment">// 检测某一个属性是否属于这个对象的私有属性</span></div><div class="line"><span class="built_in">console</span>.log(f1.hasOwnProperty(<span class="string">"getX"</span>));<span class="comment">// f1下的hasOwnProperty属性是通过原型链找到Object上的</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasPubProperty</span>(<span class="params">obj,attr</span>)</span>&#123;<span class="comment">// 检测是否是共有</span></div><div class="line">    <span class="comment">// 是其属性且不是其私有的</span></div><div class="line">    <span class="keyword">return</span> (attr <span class="keyword">in</span> obj) &amp;&amp; !obj.hasOwnProperty(attr);<span class="comment">// false</span></div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(hasPubProperty(f1,<span class="string">"getX"</span>));</div></pre></td></tr></table></figure>
<h3 id="理解原型链"><a href="#理解原型链" class="headerlink" title="理解原型链"></a>理解原型链</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">每一个函数数据类型(普通函数、类、Object)都有一个天生的属性：prototype，并且这个属性是一个对象数据类型的；</div><div class="line">prototype上又有一个天生的属性：constructor，属性值是当前函数／类本身，Fn；</div><div class="line">每一个对象(普通对象、实例、prototype)数据类型也天生自带属性：__proto__，属性值是当前实例所属类的原型。</div><div class="line">``` javascript</div><div class="line">function Fn()&#123;</div><div class="line">    this.x = 100;</div><div class="line">    this.sum = function()&#123;</div><div class="line"></div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line">Fn.prototype.getX = function()&#123;</div><div class="line">    console.log(this.x);</div><div class="line">&#125;;</div><div class="line">Fn.prototype.sum = function()&#123;</div><div class="line"></div><div class="line">&#125;;</div><div class="line">var f1 = new Fn;</div><div class="line">var f2 = new Fn;</div><div class="line">console.log(Fn.prototype.constructor === Fn);// 验证第一二句话</div><div class="line">console.log(f1.__proto__ === Fn.prototype);// 验证第三句话</div><div class="line"></div><div class="line">console.log(f1.__proto__.getX === f2.getX);// true</div><div class="line">console.log(f1.getX === Fn.prototype.getX);// true</div><div class="line"></div><div class="line">console.log(f1.sum === f2.__proto__.sum);// false，私有和公有，先找私有，找到就不找了，找不到再找公有</div><div class="line">console.log(f1.sum === Fn.prototype.sum);</div><div class="line"></div><div class="line">f1.sum = function()&#123;</div><div class="line">    // 修改私有的</div><div class="line">&#125;;</div><div class="line">f1.__proto__.sum = function()&#123;</div><div class="line">    // 修改公有的，IE不让用</div><div class="line">&#125;;</div><div class="line">Fn.prototype.sum = function()&#123;</div><div class="line">    // 修改公有的，这样应对IE</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p><img src="/resources/images/js.jpeg" alt=""></p>
<h3 id="关于this"><a href="#关于this" class="headerlink" title="关于this"></a>关于this</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.x = <span class="number">100</span>;<span class="comment">// 这里的this是实例</span></div><div class="line">    <span class="keyword">this</span>.y = <span class="number">200</span>;</div><div class="line">    <span class="keyword">this</span>.getY = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.y);<span class="comment">// 这里的this要看在哪执行的</span></div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line">Fn.prototype = &#123;</div><div class="line">    <span class="attr">constructor</span>: Fn,</div><div class="line">    <span class="attr">y</span>: <span class="number">300</span>,</div><div class="line">    <span class="attr">getX</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.x);<span class="comment">// 这里的this要看在哪执行的</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">getY</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.y);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> Fn();</div><div class="line">f.getX();<span class="comment">// 私有没有，执行公有的 &gt; 100</span></div><div class="line"><span class="comment">// 先确定this指向</span></div><div class="line"><span class="comment">// 把this替换成对应的代码</span></div><div class="line"><span class="comment">// 按照原型链查找的机制一步步的寻找结果</span></div><div class="line"></div><div class="line">f.__proto__.getX();<span class="comment">// 因为f.__proto__直接指向prototype所以直接执行公有的，但是this是f.__proto__，直接查找公有的prototype，发现并没有，所以undefined</span></div><div class="line"></div><div class="line">Fn.prototype.getX();<span class="comment">// undefined</span></div><div class="line"></div><div class="line">f.getY();<span class="comment">// 执行私有的</span></div><div class="line"></div><div class="line">Fn.prototype.getY();<span class="comment">// 直接执行公有的</span></div></pre></td></tr></table></figure>
<h3 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Array</span>.prototype.myUnique = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> obj = &#123;&#125;;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="keyword">this</span>.length;i ++)&#123;</div><div class="line">        <span class="keyword">if</span>(obj[<span class="keyword">this</span>[i]] == <span class="keyword">this</span>[i])&#123;</div><div class="line">            <span class="comment">// arr.splice(i,1);</span></div><div class="line">            <span class="keyword">this</span>[i] = <span class="keyword">this</span>[<span class="keyword">this</span>.length - <span class="number">1</span>];</div><div class="line">            <span class="keyword">this</span>.length --;<span class="comment">// 删除</span></div><div class="line">            i --;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        obj[<span class="keyword">this</span>[i]] = <span class="keyword">this</span>[i];</div><div class="line">    &#125;</div><div class="line">    obj = <span class="literal">null</span>;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;<span class="comment">// 为了实现链式写法</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</div><div class="line"><span class="comment">// arr.myUnique();// this &gt; arr</span></div><div class="line"><span class="comment">// arr.__proto__.myUnique();// ie不认</span></div><div class="line"><span class="comment">// Array.prototype.myUnique();// this &gt; Array.prototype</span></div><div class="line"><span class="comment">// sort执行后的返回值是排序后的 数组 ，所以可以用reverse()...</span></div><div class="line">arr.myUnique().sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> a - b;</div><div class="line">&#125;).reverse().pop();<span class="comment">// pop返回的是被删除的元素</span></div><div class="line"><span class="built_in">console</span>.log(arr);</div></pre></td></tr></table></figure>
<h3 id="遍历私有属性-方法"><a href="#遍历私有属性-方法" class="headerlink" title="遍历私有属性/方法"></a>遍历私有属性/方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;<span class="comment">// 会遍历私有或自己写的公有的</span></div><div class="line">    <span class="comment">// if(obj.propertyIsEnumerable(key))&#123;// 可枚举</span></div><div class="line">    <span class="comment">//     // 只有私有的了</span></div><div class="line">    <span class="comment">//     console.log(obj[key]);</span></div><div class="line">    <span class="comment">// &#125;</span></div><div class="line">    <span class="keyword">if</span>(obj.hasOwnProperty(key))&#123;<span class="comment">// 也可以这样判断是否是自己私有的</span></div><div class="line">        <span class="built_in">console</span>.log(obj[key]);   </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 私有属性才可枚举</span></div><div class="line"><span class="built_in">console</span>.log(obj.propertyIsEnumerable(<span class="string">"name"</span>));<span class="comment">// true</span></div><div class="line"><span class="comment">// 公有属性不可枚举</span></div><div class="line"><span class="built_in">console</span>.log(obj.propertyIsEnumerable(<span class="string">"aaa"</span>));<span class="comment">// false</span></div><div class="line"><span class="built_in">console</span>.log(obj.propertyIsEnumerable(<span class="string">"toString"</span>));<span class="comment">// false</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;封装-单例模式&quot;&gt;&lt;a href=&quot;#封装-单例模式&quot; class=&quot;headerlink&quot; title=&quot;封装-单例模式&quot;&gt;&lt;/a&gt;封装-单例模式&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = &amp;#123;&lt;span class=&quot;comment&quot;&gt;// 命名空间，起到了分组的作用，也避免了冲突&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;yangk&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person2 = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;jiangjun&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 解决上述代码重复的问题&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CreatePerson&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;: name&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = CreatePerson(&lt;span class=&quot;string&quot;&gt;&quot;yangk&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = CreatePerson(&lt;span class=&quot;string&quot;&gt;&quot;jiangjun&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 问题：person1和person2之间没有内在的联系，不能反映出它们是同一个原型对象的实例&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="JS" scheme="http://wwww.yesokiloveyou.com/categories/JS/"/>
    
    
      <category term="面向对象" scheme="http://wwww.yesokiloveyou.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript mark</title>
    <link href="http://wwww.yesokiloveyou.com/2016/12/04/base-js/"/>
    <id>http://wwww.yesokiloveyou.com/2016/12/04/base-js/</id>
    <published>2016-12-03T16:11:18.000Z</published>
    <updated>2017-02-09T13:45:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>JavaScript学习中一些零碎笔记，持续更新…<br><a id="more"></a></p>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">基本：</div><div class="line">    number、string、boolean、<span class="literal">null</span>、<span class="literal">undefined</span></div><div class="line">引用：</div><div class="line">    object:&#123;&#125;、[]、/^$/、<span class="built_in">Date</span></div><div class="line">    <span class="function"><span class="keyword">function</span></span></div></pre></td></tr></table></figure>
<h3 id="比较的奥秘"><a href="#比较的奥秘" class="headerlink" title="比较的奥秘"></a>比较的奥秘</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">switch</span>中<span class="keyword">case</span>的比较是===</div><div class="line"></div><div class="line">!：首先将值转换为布尔类型的，然后再取反</div><div class="line"></div><div class="line">!!：将其他数据类型转换为布尔类型，相当于<span class="built_in">Boolean</span>()</div><div class="line"></div><div class="line"><span class="number">1</span>、对象和对象比较永远不想等，例如[]==[],&#123;&#125;==&#123;&#125;</div><div class="line"></div><div class="line"><span class="number">2</span>、对象和字符串比较，先调用toString()方法先将对象转换为字符串，然后再进行比较，例如[] == <span class="string">""</span>为<span class="literal">true</span>，&#123;&#125;转换为字符串是<span class="string">"[object object]"</span>，所以&#123;&#125; == <span class="string">""</span>为<span class="literal">false</span></div><div class="line"></div><div class="line"><span class="number">3</span>、对象和布尔类型比较，对象先转化为字符串(toString)，然后转换为数字(<span class="built_in">Number</span>)，布尔类型也转换为数字(<span class="number">1</span>或<span class="number">0</span>)，<span class="built_in">Number</span>(<span class="string">""</span>)是<span class="number">0</span>，例如[] == <span class="literal">false</span>是<span class="literal">true</span></div><div class="line"></div><div class="line"><span class="number">4</span>、对象和数字比较，同上...例如[] == <span class="number">1</span>为<span class="literal">false</span></div><div class="line"></div><div class="line"><span class="number">5</span>、布尔和数字比较，布尔转换为数字(<span class="number">1</span>或<span class="number">0</span>)</div><div class="line"></div><div class="line"><span class="number">6</span>、字符串和数字，字符串转换为数字</div><div class="line"></div><div class="line"><span class="number">7</span>、字符串和布尔，都转换为数字</div><div class="line"></div><div class="line"><span class="number">9</span>、<span class="literal">null</span> == <span class="literal">undefined</span>是<span class="literal">true</span>，除此之外<span class="literal">null</span>或<span class="literal">undefined</span>和其他任何数据类型的比较都不相等</div><div class="line"></div><div class="line"><span class="number">10</span>、JS中==是值比较，===是值和类型都比较</div></pre></td></tr></table></figure>
<h3 id="预解析"><a href="#预解析" class="headerlink" title="预解析"></a>预解析</h3><p>同一次预解析只发生在一个(script)脚本块中<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 带var会进行预解析，结果undefined，不加报错则不会预解析，报错</span></div><div class="line"><span class="built_in">console</span>.log(num1);<span class="comment">// undefined</span></div><div class="line"><span class="keyword">var</span> num1 = <span class="number">12</span>;</div><div class="line"><span class="built_in">console</span>.log(num2);<span class="comment">// 报错</span></div><div class="line">num2 = <span class="number">12</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params"></span>)</span>&#123; </div><div class="line">    alert(a);<span class="comment">// 先预解析弹出undifined，注意这两句的先后顺序！再注意下面的var，由于预解析时找出下面的var，故不向上找啦！</span></div><div class="line">    <span class="keyword">var</span> a=<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line">box();</div><div class="line">alert(a);<span class="comment">// 弹出2</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params"></span>)</span>&#123; </div><div class="line">    alert(a);<span class="comment">// 函数内预解析找不到var，向上找为2就弹出2.然后向下执行又被修改为1</span></div><div class="line">    a=<span class="number">1</span>;<span class="comment">// 能修改全部变量的a</span></div><div class="line">&#125;</div><div class="line">box();</div><div class="line">alert(a);<span class="comment">// 所以弹出1</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params">a</span>)</span>&#123; </div><div class="line">    alert(a);<span class="comment">// 函数内预解析找到参数a，就不向上找了，由于调用时没有传入参数，所以弹出undefined </span></div><div class="line">    a=<span class="number">1</span>;<span class="comment">// 此时的a为局部变量，并赋值为1，与此函数外面的a没有任何关系啦</span></div><div class="line">&#125;</div><div class="line">box();</div><div class="line">alert(a);<span class="comment">// 所以弹出2</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a=<span class="number">2</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params">a</span>)</span>&#123;<span class="comment">// 参数的本质是个局部变量即var a=2;</span></div><div class="line">    alert(a);<span class="comment">// 弹出2</span></div><div class="line">    a=<span class="number">1</span>;<span class="comment">// 此时的a之所以不能修改外面的值啦，是因为预解析时函数内已找到参数，此时修改的是函数内a的值</span></div><div class="line">&#125;</div><div class="line">box(a);</div><div class="line">alert(a);<span class="comment">// 弹出2</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">alert(f2);<span class="comment">// undefined</span></div><div class="line"><span class="keyword">if</span>(<span class="literal">true</span>)&#123; </div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123; </div><div class="line">        <span class="keyword">var</span> b=<span class="number">2</span>;</div><div class="line">        alert(b);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 带var和不带var的区别：有没有预解析，undefined和报错的区别</span></div><div class="line"><span class="built_in">console</span>.log(a);<span class="comment">// undefined</span></div><div class="line"><span class="keyword">var</span> a = <span class="number">12</span>;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(b);<span class="comment">// 报错，没有var预解析，找不到b</span></div><div class="line">b = <span class="number">12</span>;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 带var的先声明默认赋值undefined，预解析只发生在当前作用域</span></div><div class="line"><span class="comment">// 带function的声明并定义完成，即开辟内存空间并存储完成</span></div><div class="line">alert(n);<span class="comment">// undefined</span></div><div class="line"><span class="keyword">var</span> n = <span class="number">9</span>;<span class="comment">// </span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    alert(n);<span class="comment">// undefined</span></div><div class="line">    n = <span class="number">7</span>;<span class="comment">// 私有作用域变成7</span></div><div class="line">    <span class="keyword">var</span> n = <span class="number">6</span>;<span class="comment">// 私有作用域变成6</span></div><div class="line">&#125;</div><div class="line">fn();</div><div class="line">alert(n);<span class="comment">// 9</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> n = <span class="number">9</span>;</div><div class="line"><span class="keyword">var</span> s = <span class="string">"yangk"</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(n);<span class="comment">// undefined</span></div><div class="line">    s = <span class="string">'jiangjun'</span>;</div><div class="line">    n = <span class="number">7</span>;</div><div class="line">    <span class="keyword">var</span> n = <span class="number">6</span>;</div><div class="line">    <span class="built_in">console</span>.log(s);<span class="comment">// jiangjun</span></div><div class="line">&#125;</div><div class="line">fn();</div><div class="line"><span class="built_in">console</span>.log(n);<span class="comment">// 9</span></div><div class="line"><span class="built_in">console</span>.log(s);<span class="comment">// jiangjun</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 发现相重的，不重复声明，但可以重复定义赋值，而函数预解析时声明并定义赋值</span></div><div class="line"><span class="built_in">console</span>.log(a);<span class="comment">// function a()&#123; console.log(2); &#125;</span></div><div class="line"><span class="keyword">var</span> a;</div><div class="line"><span class="built_in">console</span>.log(a);<span class="comment">// function a()&#123; console.log(2); &#125;</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(a);<span class="comment">// function a()&#123; console.log(2); &#125;</span></div><div class="line"><span class="keyword">var</span> a = <span class="number">3</span>;<span class="comment">// 重新赋值为3</span></div><div class="line"><span class="built_in">console</span>.log(a);<span class="comment">// 3</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 预解析是不管条件语句的</span></div><div class="line"><span class="keyword">if</span>(!(<span class="string">"a"</span> <span class="keyword">in</span> <span class="built_in">window</span>))&#123;</div><div class="line">    <span class="keyword">var</span> a = <span class="number">12</span>;</div><div class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);<span class="comment">// √</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(a);<span class="comment">// undefined</span></div><div class="line"><span class="keyword">if</span>(<span class="number">1</span> != <span class="number">1</span>)&#123;</div><div class="line">    <span class="keyword">var</span> a = <span class="number">12</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 只预解释=左边的，右边不解释</span></div><div class="line"><span class="built_in">console</span>.log(fn);<span class="comment">// undefined</span></div><div class="line"><span class="built_in">console</span>.log(a);<span class="comment">// 报错</span></div><div class="line"><span class="keyword">var</span> fn = <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line">fn();</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// function中return 下面 的代码虽然不执行了，但是会预解析，后面 返回值不预解释</span></div><div class="line"><span class="comment">// 预解释发生在一个(script)脚本块中，不同的脚本块中不预解释</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(b);<span class="comment">// undefined</span></div><div class="line">    <span class="built_in">console</span>.log(a);<span class="comment">// 报错</span></div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;&#125;;</div><div class="line">    <span class="keyword">var</span> b = <span class="number">12</span>;</div><div class="line">&#125;</div><div class="line">fn();</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 自执行函数在全局作用域下是不尽兴预解释的，当代码执行到这里的时候定义和执行一起完成</span></div><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)();</div><div class="line">~(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)();</div><div class="line">!(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)();</div><div class="line">+(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)();</div><div class="line">-(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)();</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// JS中如果变量的名字和函数的名字一样其实是一个东西，会重复，会冲突</span></div><div class="line"><span class="comment">// 预解释的时候如果名字已经声明过了，则不需要重新的声明，但是需要重新的赋值</span></div><div class="line"><span class="comment">// var fn = 13;</span></div><div class="line"><span class="comment">// function fn()&#123;</span></div><div class="line"><span class="comment">//     console.log("ok");</span></div><div class="line"><span class="comment">// &#125;</span></div><div class="line"></div><div class="line"><span class="comment">// 注意函数的预解释是声明加定义</span></div><div class="line">fn();<span class="comment">// 2</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 声明 + 定义(赋值)，由于一开始就声明+定义了，这里不会对再经过的代码起作用（声明／定义）</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line">fn();<span class="comment">// 2</span></div><div class="line"><span class="keyword">var</span> fn = <span class="number">10</span>;<span class="comment">// 再此经过时会重新定义</span></div><div class="line">fn();<span class="comment">// 10()会报错</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 定义</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line">fn();</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fo</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> n + i ++;<span class="comment">// 这里先执行i ++</span></div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> f = fo();</div><div class="line"><span class="keyword">var</span> a = f(<span class="number">15</span>);</div><div class="line">alert(a);<span class="comment">// 15，并且上面f()中的i变成了1</span></div><div class="line"><span class="keyword">var</span> d = f(<span class="number">20</span>);</div><div class="line">alert(d);<span class="comment">// 21</span></div><div class="line"><span class="keyword">var</span> b = fo()(<span class="number">15</span>);<span class="comment">// 重新执行了15</span></div><div class="line">alert(b);</div><div class="line"><span class="keyword">var</span> c = fo()(<span class="number">20</span>);<span class="comment">// 重新执行了20</span></div><div class="line">alert(c);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> number = <span class="number">2</span>;</div><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">    <span class="attr">number</span>: <span class="number">4</span>,</div><div class="line">    <span class="attr">fn1</span>: (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 一上来自执行</span></div><div class="line">        <span class="keyword">this</span>.number *= <span class="number">2</span>;<span class="comment">// this是window</span></div><div class="line">        number = number * <span class="number">2</span>;<span class="comment">// undefined * 2</span></div><div class="line">        <span class="built_in">console</span>.log(number);<span class="comment">// NaN</span></div><div class="line">        <span class="keyword">var</span> number = <span class="number">3</span>;</div><div class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.number *= <span class="number">2</span>;</div><div class="line">            number *= <span class="number">3</span>;</div><div class="line">            alert(number);</div><div class="line">        &#125;</div><div class="line">    &#125;)()</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> fn1 = obj.fn1;<span class="comment">// 这里只是return的函数，上面的console.log(number)不会再输出了</span></div><div class="line">alert(number);<span class="comment">// 全局的number等于4</span></div><div class="line">fn1();<span class="comment">// 局部的number等于9，此时全局的number已经变成8</span></div><div class="line"></div><div class="line">obj.fn1();<span class="comment">// 局部的number驻留内存9 * 3 = 27，此时obj.number已经等于8</span></div><div class="line">alert(<span class="built_in">window</span>.number);<span class="comment">// 8</span></div><div class="line">alert(obj.number);<span class="comment">// 8</span></div></pre></td></tr></table></figure>
<h3 id="try-catch"><a href="#try-catch" class="headerlink" title="try catch"></a>try catch</h3><p>语法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>&#123;</div><div class="line">    <span class="comment">// JS要执行的代码</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span>(e)&#123;<span class="comment">// 形参一定要写，名字可以随便起，当try中代码报错了，会自动的执行catch中的代码</span></div><div class="line">    <span class="comment">// e.message;</span></div><div class="line">    <span class="comment">// throw new Error("shit");</span></div><div class="line">    <span class="comment">// throw new ReferenceError;// 引用错误</span></div><div class="line">    <span class="comment">// throw new TypeError;// 类型错误</span></div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">RangeError</span>(<span class="string">"ss"</span>);<span class="comment">// 范围错误</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">finally</span>&#123;<span class="comment">// 不管try是否报错这里都会执行</span></div><div class="line">    <span class="comment">// 一般不加</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>作用1：不让浏览器控制台报错，继续执行后面的JS代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(num);</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span>(e)&#123;</div><div class="line">    <span class="built_in">console</span>.log(e.message);</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);<span class="comment">// 我会继续执行</span></div></pre></td></tr></table></figure></p>
<p>作用2：既要捕获错误信息，也可手动定义错误内容，又要下面的代码不执行<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(num);</div><div class="line">&#125;</div><div class="line"><span class="keyword">catch</span>(e)&#123;</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"shit"</span>);</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);<span class="comment">// 我会继续执行</span></div></pre></td></tr></table></figure></p>
<p>作用3：处理浏览器的兼容性…</p>
<h3 id="查找上级作用域"><a href="#查找上级作用域" class="headerlink" title="查找上级作用域"></a>查找上级作用域</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 如何查找当前作用域的上一级作用域：看当前函数是在哪个作用域下定义的，和函数在哪执行的无关</span></div><div class="line"><span class="keyword">var</span> num = <span class="number">12</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> num = <span class="number">120</span>;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// return后的不预解释，直接在这里定义，返回函数的内存地址。函数是在这里定义的</span></div><div class="line">        <span class="built_in">console</span>.log(num);</div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> f = fn();<span class="comment">// fn()执行后返回一个函数，执行函数会形成一个私有作用域</span></div><div class="line">f();<span class="comment">// 形成私有作用域，num不是私有的，往上找...</span></div><div class="line"></div><div class="line">~<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> num = <span class="number">1200</span>;</div><div class="line">    f();</div><div class="line">&#125;();</div><div class="line"><span class="comment">// 上面将形成3个栈内存，2个堆内存，画图理解</span></div></pre></td></tr></table></figure>
<h3 id="点击计数"><a href="#点击计数" class="headerlink" title="点击计数"></a>点击计数</h3><h4 id="利用全局变量"><a href="#利用全局变量" class="headerlink" title="利用全局变量"></a>利用全局变量</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 利用全局作用域不销毁的原理，弊端：不销毁且容易冲突</span></div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oDiv.innerHTML = <span class="number">0</span>;</div><div class="line">oDiv.style.cssText = <span class="string">"border: 1px solid red;height: 40px;line-height: 40px;text-align: center;font-size: 20px;cursor: pointer;"</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(oDiv);</div><div class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</div><div class="line">oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    num ++;</div><div class="line">    oDiv.innerHTML = num;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="利用私有作用域"><a href="#利用私有作用域" class="headerlink" title="利用私有作用域"></a>利用私有作用域</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 弊端：有一个不销毁的私有作用域，占一丢丢内存</span></div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oDiv.innerHTML = <span class="number">0</span>;</div><div class="line">oDiv.style.cssText = <span class="string">"border: 1px solid red;height: 40px;line-height: 40px;text-align: center;font-size: 20px;cursor: pointer;"</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(oDiv);</div><div class="line">~<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> num = <span class="number">0</span>;</div><div class="line">    oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        num ++;</div><div class="line">        oDiv.innerHTML = num;</div><div class="line">    &#125;;</div><div class="line">&#125;();</div></pre></td></tr></table></figure>
<p>函数执行形成一个私有作用域，保护里面的私有变量不受外界干扰，我们把这种机制叫做闭包<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> n = <span class="number">12</span>;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 销毁不了</span></div><div class="line">        n ++;</div><div class="line">        <span class="built_in">console</span>.log(n);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> f = fn();</div><div class="line">f();<span class="comment">// 13 &gt;&gt; 驻留内存</span></div><div class="line">f();<span class="comment">// 14</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oDiv.innerHTML = <span class="number">0</span>;</div><div class="line">oDiv.style.cssText = <span class="string">"border: 1px solid red;height: 40px;line-height: 40px;text-align: center;font-size: 20px;cursor: pointer;"</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(oDiv);</div><div class="line"></div><div class="line"><span class="comment">// oDiv.onclick = function()&#123;</span></div><div class="line"><span class="comment">//     var i = 0;</span></div><div class="line"><span class="comment">//     return function()&#123;</span></div><div class="line"><span class="comment">//         i ++;</span></div><div class="line"><span class="comment">//         oDiv.innerHTML = i;</span></div><div class="line"><span class="comment">//     &#125;;</span></div><div class="line"><span class="comment">// &#125;();</span></div><div class="line"></div><div class="line">oDiv.onclick = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        i ++;</div><div class="line">        oDiv.innerHTML = i;</div><div class="line">    &#125;;</div><div class="line">&#125;)();</div></pre></td></tr></table></figure>
<h4 id="利用innerHTML"><a href="#利用innerHTML" class="headerlink" title="利用innerHTML"></a>利用innerHTML</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 弊端：重新渲染</span></div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oDiv.innerHTML = <span class="number">0</span>;</div><div class="line">oDiv.style.cssText = <span class="string">"border: 1px solid red;height: 40px;line-height: 40px;text-align: center;font-size: 20px;cursor: pointer;"</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(oDiv);</div><div class="line">oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">// oDiv.innerHTML = parseInt(oDiv.innerHTML) + 1;</span></div><div class="line">    oDiv.innerHTML ++;<span class="comment">// 有默认的转换机制</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="利用自定义属性"><a href="#利用自定义属性" class="headerlink" title="利用自定义属性"></a>利用自定义属性</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oDiv.innerHTML = <span class="number">0</span>;</div><div class="line">oDiv.style.cssText = <span class="string">"border: 1px solid red;height: 40px;line-height: 40px;text-align: center;font-size: 20px;cursor: pointer;"</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(oDiv);</div><div class="line">oDiv.num = <span class="number">0</span>;<span class="comment">// 既不是全局变量也不是私有变量，是自定义属性</span></div><div class="line">oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.innerHTML = ++ <span class="keyword">this</span>.num;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="内存释放／垃圾回收-待续，高程3…"><a href="#内存释放／垃圾回收-待续，高程3…" class="headerlink" title="内存释放／垃圾回收(待续，高程3…)"></a>内存释放／垃圾回收(待续，高程3…)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 堆内存：存放引用类型的值</span></div><div class="line"><span class="comment">// 对象数据类型或者函数数据类型在定义的时候都会先开辟一个堆内存，堆内存有一个引用地址，当堆内存被占用(引用)的情况下数销毁不了的</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> obj1 = &#123;<span class="comment">// 开一个堆内存，假如地址是xxxfff000，obj1指向该堆内存</span></div><div class="line">    name: <span class="string">"yangk"</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> obj2 = obj1;<span class="comment">// obj2也指向xxxfff000</span></div><div class="line"></div><div class="line"><span class="comment">// 当堆内存没人引用时，浏览器将在空闲的时候将其回收，所以销毁堆内存时我们只需要把引用他的变量赋值为null即可</span></div><div class="line">obj1 = <span class="literal">null</span>;<span class="comment">// 空对象指针，谁都不指</span></div><div class="line">obj2 = <span class="literal">null</span>;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 栈内存(作用域)</span></div><div class="line"><span class="comment">// 全局作用域和私有作用域</span></div><div class="line"></div><div class="line"><span class="comment">// 全局作用域：只有当页面关闭的时候其才销毁</span></div><div class="line"><span class="comment">// 私有作用域：函数执行会产生私有作用域，当私有作用域中的代码执行完成后，当前作用域会进行释放和销毁(闭包除外)</span></div><div class="line"></div><div class="line"><span class="comment">// 当私有作用域中的部分内容被占用的情况下是不能被销毁的</span></div><div class="line"></div><div class="line"><span class="comment">// 不销毁情况：</span></div><div class="line"><span class="comment">// 函数执行返回了一个引用数据类型值，并且被外面一个东西给接受了</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> num = <span class="number">100</span>;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        num ++;</div><div class="line">        <span class="built_in">console</span>.log(num);</div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> f = fn();</div><div class="line">f();<span class="comment">// 101</span></div><div class="line">f();<span class="comment">// 102</span></div><div class="line">fn()();<span class="comment">// 这种情况fn返回的函数没有被占用，但是还需要执行一次，暂时不销毁，当返回的函数执行完成后，浏览器会在空闲的时候将其销毁</span></div><div class="line"><span class="comment">// 私有作用域中给DOM元素的事件绑定方法一般也不销毁</span></div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);<span class="comment">// 通过DOM方法获取的元素都是对象数据类型的值</span></div><div class="line">~<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">    &#125;;</div><div class="line">&#125;();</div></pre></td></tr></table></figure>
<h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><p>setTimeout配合递归模拟setInterval<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(num++);</div><div class="line">    <span class="keyword">if</span>(num === <span class="number">5</span>)&#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> timer = setTimeout(go,<span class="number">1000</span>);</div><div class="line">&#125;</div><div class="line">go();</div></pre></td></tr></table></figure></p>
<h3 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div1"</span>);</div><div class="line">oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</div><div class="line">    ev = ev || <span class="built_in">window</span>.event;</div><div class="line">    ev.target = ev.target || ev.srcElement;<span class="comment">// 事件源</span></div><div class="line">    <span class="comment">// ev.pageY = ev.pageY || ev.clientY + win("scrollTop");// 兼容IE6-8</span></div><div class="line">    ev.preventDefault ? ev.preventDefault() : ev.returnValue = <span class="literal">true</span>;<span class="comment">// 阻止默认行为</span></div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line"></div><div class="line">    ev.stopPropagation ? ev.stopPropagation() : ev.cancelBubble = <span class="literal">true</span>;<span class="comment">// 阻止冒泡</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="关于this"><a href="#关于this" class="headerlink" title="关于this"></a>关于this</h3><p>看方法名前面是否有点，有的话点前面是谁this就是谁<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">    <span class="attr">fn</span>:fn</div><div class="line">&#125;;</div><div class="line">fn();<span class="comment">// this &gt; window,严格模式下undefined</span></div><div class="line">obj.fn();<span class="comment">// this &gt; obj</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">"yangk"</span>;</div><div class="line">&#125;</div><div class="line">Person.prototype.showName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person;</div><div class="line">p1.showName();<span class="comment">// this &gt; p1</span></div><div class="line">p1.__proto__.showName();<span class="comment">// this &gt; p1.__proto__</span></div><div class="line">Person.prototype.showName();<span class="comment">// this &gt; p1.prototype</span></div></pre></td></tr></table></figure>
<p>自执行函数中的this永远是window，严格模式下是undefined<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);<span class="comment">// this &gt; window</span></div><div class="line">&#125;)();</div><div class="line">~<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);<span class="comment">// this &gt; window</span></div><div class="line">&#125;();</div></pre></td></tr></table></figure></p>
<p>元素的某一个行为绑定一个方法，this &gt; 元素<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line">oDiv.onclick = fn;</div><div class="line">oDiv.onclick = fn();<span class="comment">// 注意这里是执行的返回结果返回！！！！！！undefined</span></div><div class="line"></div><div class="line">oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    fn();<span class="comment">// this  &gt;  window</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>使用call/apply强制改变this<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">    <span class="attr">fn</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">obj.fn();<span class="comment">// this &gt; obj</span></div><div class="line">obj.fn.call(<span class="number">12</span>);<span class="comment">// this &gt; 12</span></div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line">sum.call(<span class="number">100</span>,<span class="number">100.</span>..)<span class="comment">// 第一个参数是this，后面对应接受的形参，没有undefined</span></div><div class="line"></div><div class="line">sum.call();<span class="comment">//在非严格模式下，call的第一个参数不写或者写null/undefined，默认的this都是window，严格模式下写谁就是谁，写null就是null，不写是undefined</span></div><div class="line"></div><div class="line">apply(obj,[...]);</div></pre></td></tr></table></figure>
<h3 id="乘法表"><a href="#乘法表" class="headerlink" title="乘法表"></a>乘法表</h3><h4 id="加换行符实现"><a href="#加换行符实现" class="headerlink" title="加换行符实现"></a>加换行符实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i &lt;= <span class="number">9</span>;i ++)&#123;</div><div class="line">    <span class="keyword">for</span>(j = <span class="number">1</span>;j &lt;= i;j ++)&#123;</div><div class="line">        <span class="keyword">var</span> oSpan = <span class="built_in">document</span>.createElement(<span class="string">"span"</span>);</div><div class="line">        oSpan.innerHTML = j + <span class="string">"x"</span> + i + <span class="string">"="</span> + i * j + <span class="string">"&amp;nbsp;&amp;nbsp"</span>;</div><div class="line">        <span class="built_in">document</span>.body.appendChild(oSpan);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">document</span>.body.innerHTML += <span class="string">"&lt;br&gt;"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="利用块元素的机制实现"><a href="#利用块元素的机制实现" class="headerlink" title="利用块元素的机制实现"></a>利用块元素的机制实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i &lt;= <span class="number">9</span>;i ++)&#123;</div><div class="line">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.createElement(<span class="string">"p"</span>);</div><div class="line">    <span class="keyword">for</span>(j = <span class="number">1</span>;j &lt;= i;j ++)&#123;</div><div class="line">        oP.innerHTML += j + <span class="string">"x"</span> + i + <span class="string">"="</span> + i * j + <span class="string">"&amp;nbsp;&amp;nbsp"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">document</span>.body.appendChild(oP);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="用字符串拼接的方法实现"><a href="#用字符串拼接的方法实现" class="headerlink" title="用字符串拼接的方法实现"></a>用字符串拼接的方法实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">""</span>;</div><div class="line">str += <span class="string">"&lt;ul&gt;"</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i &lt;= <span class="number">9</span>;i ++)&#123;</div><div class="line">    str += <span class="string">"&lt;li&gt;"</span>;</div><div class="line">    <span class="keyword">for</span>(j = <span class="number">1</span>;j &lt;= i;j ++)&#123;</div><div class="line">        str += j + <span class="string">"x"</span> + i + <span class="string">"="</span> + j * i + <span class="string">"&amp;nbsp;&amp;nbsp;"</span>;</div><div class="line">    &#125;</div><div class="line">    str += <span class="string">"&lt;/li&gt;"</span>;</div><div class="line">&#125;</div><div class="line">str += <span class="string">"&lt;/ul&gt;"</span>;</div><div class="line"><span class="built_in">document</span>.body.innerHTML = str;</div></pre></td></tr></table></figure>
<h3 id="打印个正方形"><a href="#打印个正方形" class="headerlink" title="打印个正方形"></a>打印个正方形</h3><h4 id="浮动实现"><a href="#浮动实现" class="headerlink" title="浮动实现"></a>浮动实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oWrap = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oWrap.style.cssText = <span class="string">"width:400px;height:400px;margin:0 auto;background-color:#eee;"</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(oWrap);</div><div class="line"></div><div class="line"><span class="keyword">var</span> arrColor = [<span class="string">"red"</span>,<span class="string">"green"</span>,<span class="string">"blue"</span>,<span class="string">"pink"</span>,<span class="string">"yellow"</span>,<span class="string">"#ccc"</span>];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">100</span>;i ++)&#123;</div><div class="line">    <span class="keyword">var</span> oSpan = <span class="built_in">document</span>.createElement(<span class="string">"span"</span>);</div><div class="line">    oSpan.style.cssText = <span class="string">"width:40px;height:40px;float:left;background-color:"</span>+ arrColor[i%arrColor.length] +<span class="string">""</span>;</div><div class="line">    oWrap.appendChild(oSpan);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="两个循环定位实现"><a href="#两个循环定位实现" class="headerlink" title="两个循环定位实现"></a>两个循环定位实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oWrap = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oWrap.style.cssText = <span class="string">"width:400px;height:400px;margin:0 auto;background-color:#eee;position:relative;"</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(oWrap);</div><div class="line"></div><div class="line"><span class="keyword">var</span> arrColor = [<span class="string">"red"</span>,<span class="string">"green"</span>,<span class="string">"blue"</span>,<span class="string">"pink"</span>,<span class="string">"yellow"</span>,<span class="string">"#ccc"</span>];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i ++)&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>;j &lt; <span class="number">10</span>;j ++)&#123;</div><div class="line">        <span class="keyword">var</span> oSpan = <span class="built_in">document</span>.createElement(<span class="string">"span"</span>);</div><div class="line">        oSpan.style.cssText = <span class="string">"width:40px;height:40px;float:left;background-color:"</span>+ arrColor[(i * <span class="number">10</span> + j)%arrColor.length] +<span class="string">";position:absolute;left:"</span>+ j * <span class="number">40</span> +<span class="string">"px;top:"</span>+ i % <span class="number">10</span> * <span class="number">40</span> +<span class="string">"px;"</span>;</div><div class="line">        oWrap.appendChild(oSpan);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="一个循环定位实现"><a href="#一个循环定位实现" class="headerlink" title="一个循环定位实现"></a>一个循环定位实现</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oWrap = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oWrap.style.cssText = <span class="string">"width:400px;height:400px;margin:0 auto;background-color:#eee;position:relative;"</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(oWrap);</div><div class="line"></div><div class="line"><span class="keyword">var</span> arrColor = [<span class="string">"red"</span>,<span class="string">"green"</span>,<span class="string">"blue"</span>,<span class="string">"pink"</span>,<span class="string">"yellow"</span>,<span class="string">"#ccc"</span>];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">100</span>;i ++)&#123;</div><div class="line">    <span class="keyword">var</span> oSpan = <span class="built_in">document</span>.createElement(<span class="string">"span"</span>);</div><div class="line">    oSpan.style.cssText = <span class="string">"width:40px;height:40px;float:left;background-color:"</span>+ arrColor[i % arrColor.length] +<span class="string">";position:absolute;left:"</span>+ i % <span class="number">10</span> * <span class="number">40</span> +<span class="string">"px;top:"</span>+ <span class="built_in">Math</span>.floor(i / <span class="number">10</span>) * <span class="number">40</span> +<span class="string">"px;"</span>;</div><div class="line">    oWrap.appendChild(oSpan);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="倒计时"><a href="#倒计时" class="headerlink" title="倒计时"></a>倒计时</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 倒计时原理：目标时间 - 当前时间</span></div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oDiv.style.textAlign = <span class="string">"center"</span>;</div><div class="line"></div><div class="line"><span class="comment">// 设定目标时间，把时间格式的字符串转换为标准格式，中杠ie6，7，8不兼容，所以下面用/代替</span></div><div class="line"><span class="keyword">var</span> tarTime = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"2016/12/05 09:30:00"</span>);</div><div class="line"><span class="comment">// 目标时间戳</span></div><div class="line"><span class="keyword">var</span> tarSpan = tarTime.getTime();</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">// 获取现在时间</span></div><div class="line">    <span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">    <span class="comment">// 当前时间戳</span></div><div class="line">    <span class="keyword">var</span> nowSpan = nowTime.getTime();</div><div class="line"></div><div class="line">    <span class="comment">// 求时间戳之差</span></div><div class="line">    <span class="keyword">var</span> diffTime = tarSpan - nowSpan;</div><div class="line"></div><div class="line">    <span class="comment">// 计算小时</span></div><div class="line">    <span class="keyword">var</span> hours = <span class="built_in">Math</span>.floor( diffTime / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> );</div><div class="line">    <span class="comment">// 上面小时占用的毫秒数</span></div><div class="line">    <span class="keyword">var</span> hoursMs = hours * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;</div><div class="line">    <span class="comment">// 剩下的毫秒数</span></div><div class="line">    <span class="keyword">var</span> halfMs = diffTime - hoursMs;</div><div class="line"></div><div class="line">    <span class="comment">// 计算分钟</span></div><div class="line">    <span class="keyword">var</span> minutes = <span class="built_in">Math</span>.floor(halfMs / <span class="number">1000</span> / <span class="number">60</span>);</div><div class="line">    <span class="comment">// 上面分钟占用的毫秒数</span></div><div class="line">    <span class="keyword">var</span> minutesMs = minutes * <span class="number">60</span> * <span class="number">1000</span>;</div><div class="line">    <span class="comment">// 剩下的毫秒数</span></div><div class="line">    halfMs = halfMs - minutesMs;</div><div class="line"></div><div class="line">    <span class="comment">// 计算秒</span></div><div class="line">    <span class="keyword">var</span> seconds = <span class="built_in">Math</span>.floor(halfMs / <span class="number">1000</span>);</div><div class="line"></div><div class="line">    oDiv.innerHTML = <span class="string">"距离明天上班还有："</span>+ hours +<span class="string">"时"</span>+ minutes +<span class="string">"分"</span>+ seconds +<span class="string">"秒"</span>;</div><div class="line">&#125;</div><div class="line"><span class="built_in">document</span>.body.appendChild(oDiv);</div><div class="line"></div><div class="line">count();</div><div class="line">setInterval(count,<span class="number">1000</span>);</div></pre></td></tr></table></figure>
<p>注意星期<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">week = <span class="string">"日一二三四五六"</span>.charAt(oDate.getDay());</div><div class="line"><span class="built_in">console</span>.log(week);</div></pre></td></tr></table></figure></p>
<h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>一个function生命周期：出生，预解释时声明加定义，开辟一个新的内存空间，让函数名存储这个快的地址；生长，函数执行形成私有作用域，里面开始类似window的新一轮与解析，死亡：一般情况下(如果没有返回function)，私有作用域下的代码执行完成后，整个私有作用域就销毁了。</p>
<h4 id="简单的隔N行变色"><a href="#简单的隔N行变色" class="headerlink" title="简单的隔N行变色"></a>简单的隔N行变色</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> aLi = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</div><div class="line"><span class="keyword">var</span> arrColor = [<span class="string">"red"</span>,<span class="string">"green"</span>,<span class="string">"yellow"</span>,<span class="string">"pink"</span>];</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeBg</span>(<span class="params">num</span>)</span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; aLi.length;i ++)&#123;</div><div class="line">        aLi[i].style.backgroundColor = arrColor[i % num];</div><div class="line"></div><div class="line">        <span class="keyword">var</span> oldColor = <span class="string">""</span>;</div><div class="line">        aLi[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            oldColor = <span class="keyword">this</span>.style.backgroundColor;</div><div class="line">            <span class="keyword">this</span>.style.backgroundColor = <span class="string">"#ccc"</span>;</div><div class="line">        &#125;;</div><div class="line">        aLi[i].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.style.backgroundColor = oldColor;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">changeBg(<span class="number">2</span>);</div></pre></td></tr></table></figure>
<h4 id="简单的求和"><a href="#简单的求和" class="headerlink" title="简单的求和"></a>简单的求和</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> total = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt;<span class="built_in">arguments</span>.length;i ++)&#123;</div><div class="line">        <span class="keyword">var</span> num = <span class="built_in">Number</span>(<span class="built_in">arguments</span>[i]);<span class="comment">// 两种情况：NaN或者数字</span></div><div class="line">        <span class="keyword">if</span>(<span class="built_in">isNaN</span>(num))&#123;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        total += num;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">console</span>.log(total);</div><div class="line">&#125;</div><div class="line">sum(<span class="number">1</span>,<span class="number">2</span>,<span class="string">"a"</span>,<span class="string">"3"</span>,<span class="string">"4"</span>);</div></pre></td></tr></table></figure>
<h4 id="简单的变色"><a href="#简单的变色" class="headerlink" title="简单的变色"></a>简单的变色</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> arr = [<span class="string">"red"</span>,<span class="string">"green"</span>,<span class="string">"blue"</span>,<span class="string">"white"</span>];</div><div class="line"></div><div class="line"><span class="built_in">document</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.body.style.backgroundColor = arr[num++%arr.length];</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="函数的3种角色"><a href="#函数的3种角色" class="headerlink" title="函数的3种角色"></a>函数的3种角色</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 函数的3中角色互不相关</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> num = <span class="number">500</span>;</div><div class="line">    <span class="keyword">this</span>.x = <span class="number">100</span>;</div><div class="line">&#125;</div><div class="line">Fn.prototype.getX = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.x);</div><div class="line">&#125;;</div><div class="line">Fn.aaa = <span class="number">1000</span>;<span class="comment">// 当做一个普通对象来使用</span></div><div class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> Fn;</div><div class="line"><span class="keyword">var</span> res = Fn();<span class="comment">// undefined</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(f.num);<span class="comment">// undefined</span></div><div class="line"><span class="built_in">console</span>.log(f.aaa);<span class="comment">// undefined</span></div><div class="line"><span class="built_in">console</span>.log(Fn.aaa);<span class="comment">// 1000</span></div></pre></td></tr></table></figure>
<h3 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h3><h4 id="找n-m间不重复的随机数"><a href="#找n-m间不重复的随机数" class="headerlink" title="找n-m间不重复的随机数"></a>找n-m间不重复的随机数</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 找10 - 100之间不重复的整数10个整数并排序</span></div><div class="line"><span class="keyword">var</span> arr = [];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i ++)&#123;</div><div class="line">    <span class="comment">// var iNum = Math.round( Math.random() * 90 + 10 );// 在这里定义一旦下面arr[i] == iNum就会陷入死循环</span></div><div class="line">    find();</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">find</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> iNum = <span class="built_in">Math</span>.round( <span class="built_in">Math</span>.random() * <span class="number">90</span> + <span class="number">10</span> );</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;<span class="comment">// push之前检查一遍</span></div><div class="line">        <span class="keyword">if</span>(arr[i] == iNum)&#123;</div><div class="line">            find();</div><div class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    arr.push(iNum);</div><div class="line">&#125;</div><div class="line"></div><div class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">num1,num2</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> num1 - num2;</div><div class="line">&#125;);</div><div class="line"><span class="built_in">console</span>.log(arr);</div></pre></td></tr></table></figure>
<h4 id="简单验证码"><a href="#简单验证码" class="headerlink" title="简单验证码"></a>简单验证码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> codeStr = <span class="string">'abcdefghijklmnokqrstuvwxyzABCDEFGHIJKLMNOKQRSTUVWXYZ0123456789'</span>;</div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</div><div class="line">oDiv.style.cssText = <span class="string">"width:80px;text-align:center;line-height:40px;background-color:#000;margin:50px auto;cursor:pointer;color:#fff;-webkit-user-select:none;"</span>;</div><div class="line"><span class="keyword">var</span> iNum = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandom</span>(<span class="params">n,m</span>)</span>&#123;</div><div class="line">    n = <span class="built_in">Number</span>(n);<span class="comment">// 数字或NaN</span></div><div class="line">    m = <span class="built_in">Number</span>(m);</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">isNaN</span>(n) || <span class="built_in">isNaN</span>(m))&#123;</div><div class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.random();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(n &gt; m)&#123;</div><div class="line">        <span class="keyword">var</span> temp = n;</div><div class="line">        n = m;</div><div class="line">        m = temp;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.round( <span class="built_in">Math</span>.random() * (m - n) + n );</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">rand</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> str = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)&#123;</div><div class="line">        iNum = getRandom(<span class="number">0</span>,<span class="number">61</span>);</div><div class="line">        str += codeStr.charAt(iNum);</div><div class="line">    &#125;</div><div class="line">    oDiv.innerHTML = str;</div><div class="line">&#125;</div><div class="line">rand();</div><div class="line"></div><div class="line"><span class="built_in">document</span>.body.appendChild(oDiv);</div><div class="line"></div><div class="line">oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    rand();</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h3><h4 id="删除相同的"><a href="#删除相同的" class="headerlink" title="删除相同的"></a>删除相同的</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">7</span>];</div><div class="line"><span class="comment">// 1 [2,1,3,3,2,4,6,2,6,5,7,4,4,6,2,9,9,8,3,2,7]</span></div><div class="line"><span class="comment">// 2 [1,3,3,2,4,6,2,6,5,7,4,4,6,2,9,9,8,3,2,7]</span></div><div class="line"><span class="comment">// 1 [3,3,2,4,6,2,6,5,7,4,4,6,2,9,9,8,3,2,7]</span></div><div class="line"><span class="comment">// 3 [3,2,4,6,2,6,5,7,4,4,6,2,9,9,8,3,2,7]</span></div><div class="line"><span class="comment">// 3 [2,4,6,2,6,5,7,4,4,6,2,9,9,8,3,2,7]</span></div><div class="line"><span class="comment">// 2 [4,6,2,6,5,7,4,4,6,2,9,9,8,3,2,7]</span></div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> j = i + <span class="number">1</span>;j &lt; arr.length;j ++)&#123;</div><div class="line">        <span class="keyword">if</span>(arr[i] == arr[j])&#123;</div><div class="line">            arr.splice(j,<span class="number">1</span>);<span class="comment">// 原有数组变化了</span></div><div class="line">            j --;<span class="comment">// 上面删除以后，后面的索引项都往前提了一位，这会影响我们的计算，所以这里要处理，解决数组塌陷问题</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(arr);</div></pre></td></tr></table></figure>
<h4 id="根据对象属性名不能等"><a href="#根据对象属性名不能等" class="headerlink" title="根据对象属性名不能等"></a>根据对象属性名不能等</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="string">"yangk"</span>,<span class="string">"yangk"</span>];</div><div class="line"></div><div class="line"><span class="comment">// 把数组中的每一项，当做一个新对象的属性名和属性值存起来，在存储的时候判断当前的属性名是否已经存在，存在就代表数组该项重复了，进行删除，否则则代表不重复，直接存储</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> obj = &#123;&#125;;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">    <span class="keyword">if</span>(obj[arr[i]] == arr[i])&#123;<span class="comment">// 如果有就删除且跳出</span></div><div class="line">        arr.splice(i,<span class="number">1</span>);</div><div class="line">        i --;</div><div class="line">        <span class="keyword">continue</span>;<span class="comment">// 跳出本次循环，也提高了查询次数提高性能</span></div><div class="line">    &#125;</div><div class="line">    obj[arr[i]] = arr[i];</div><div class="line">&#125;</div><div class="line">obj = <span class="literal">null</span>;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(arr);</div></pre></td></tr></table></figure>
<h4 id="push非重复的"><a href="#push非重复的" class="headerlink" title="push非重复的"></a>push非重复的</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// arr[0] : arr[1]，相当退出内循环，此时j = false</span></div><div class="line"><span class="comment">// arr[1] : arr[2]，arr[1] : arr[3]，发现相等又退出内循环，此时j = false</span></div><div class="line"><span class="comment">// arr[2] : arr[3]，arr[2] : arr[4]，arr[2] : arr[5]发现一切正常，此时i等于2故push: arr[2]，此时j = 6</span></div><div class="line"><span class="comment">// arr[3] : arr[4]，arr[3] : arr[5]，发现相等又退出内循环，此时j = false</span></div><div class="line"><span class="comment">// arr[4] : arr[5]，无异常，push: arr[4]，此时j = 6</span></div><div class="line"><span class="comment">// arr[5] 此时j等于6，push: arr[5]，此时j = 6</span></div><div class="line"><span class="keyword">var</span> arr=[<span class="number">5</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">5</span>];</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">jiayou</span>(<span class="params">arr</span>)</span></div><div class="line">&#123; </div><div class="line">    <span class="keyword">var</span> newArr = [];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)</div><div class="line">    &#123; </div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = i + <span class="number">1</span>;j &lt; arr.length;j ++)</div><div class="line">        &#123; </div><div class="line">            <span class="keyword">if</span>(arr[i] === arr[j])</div><div class="line">            &#123; </div><div class="line">                j = <span class="literal">false</span>;<span class="comment">// 与后面比较完再看j的值</span></div><div class="line">                <span class="keyword">break</span>;<span class="comment">// 直接退出循环</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">console</span>.log(i + <span class="string">":"</span> + j);</div><div class="line">        <span class="keyword">if</span>(j)</div><div class="line">        &#123; </div><div class="line">            newArr.push(arr[i]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> newArr;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(jiayou(arr));</div></pre></td></tr></table></figure>
<h3 id="找数组最大-最小值"><a href="#找数组最大-最小值" class="headerlink" title="找数组最大/最小值"></a>找数组最大/最小值</h3><h4 id="排序后掐头去尾法"><a href="#排序后掐头去尾法" class="headerlink" title="排序后掐头去尾法"></a>排序后掐头去尾法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">33</span>,<span class="number">73</span>,<span class="number">23</span>,<span class="number">13</span>,<span class="number">9</span>];</div><div class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> a - b;</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> min = arr[<span class="number">0</span>];</div><div class="line"><span class="keyword">var</span> max = arr[arr.length - <span class="number">1</span>];</div><div class="line"><span class="built_in">console</span>.log(min,max);</div></pre></td></tr></table></figure>
<h4 id="假设法"><a href="#假设法" class="headerlink" title="假设法"></a>假设法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">33</span>,<span class="number">73</span>,<span class="number">23</span>,<span class="number">13</span>,<span class="number">9</span>];</div><div class="line"><span class="comment">// 假设法：先假设一个是最小值，然后和数组后面的每一项进行比较，如果比我们的当前值还要小，说明假设错误，把当前值赋值给假设值，最大值同理！</span></div><div class="line"><span class="keyword">var</span> min = max = arr[<span class="number">0</span>];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length;i ++)&#123;</div><div class="line">    arr[i] &lt; min ? min = arr[i] : <span class="literal">null</span>;</div><div class="line">    arr[i] &gt; max ? max = arr[i] : <span class="literal">null</span>;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(min,max);</div></pre></td></tr></table></figure>
<h4 id="eval-法"><a href="#eval-法" class="headerlink" title="eval()法"></a>eval()法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [<span class="number">33</span>,<span class="number">73</span>,<span class="number">23</span>,<span class="number">13</span>,<span class="number">9</span>];</div><div class="line"></div><div class="line"><span class="comment">/*var aaa = arr.toString();// 数组转字符串，也可以用join转</span></div><div class="line">var bbb = eval(aaa);// 字符串转表达式，保留的是最后一项的结果还是不行</div><div class="line">// 括号表达式：一个括号中放多项值，中间用逗号隔开，最后获取的只有最后一项，例如(33,73,23,13,9)返回的结果是9</div><div class="line">console.log(Math.max(bbb));// 结果是9，所以这种方式行不通*/</div><div class="line"></div><div class="line"><span class="keyword">var</span> min = <span class="built_in">eval</span>(<span class="string">"Math.min("</span>+ arr.toString() +<span class="string">")"</span>);</div><div class="line"><span class="keyword">var</span> max = <span class="built_in">eval</span>(<span class="string">"Math.max("</span>+ arr.toString() +<span class="string">")"</span>);</div><div class="line"><span class="built_in">console</span>.log(min,max);</div></pre></td></tr></table></figure>
<p>关于括号表达式<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> obj = &#123;&#125;;</div><div class="line">obj.fn = fn;</div><div class="line">(fn,obj.fn)();<span class="comment">// 一个括号中出现多项内容中间用逗号隔开，取最后，是直接把内容复制一份一模一样的放进来(理解this)，所以这里的this是window</span></div><div class="line">(obj.fn)();<span class="comment">// 只有一项时，this是obj，只有一项加不加小括号无所谓</span></div></pre></td></tr></table></figure></p>
<h4 id="Math-max-apply-法"><a href="#Math-max-apply-法" class="headerlink" title="Math.max.apply()法"></a>Math.max.apply()法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// apply，虽然传递的是一个数组，但是也相当于一个个传递参数，利用这个原理：</span></div><div class="line"><span class="keyword">var</span> max = <span class="built_in">Math</span>.max.apply(<span class="literal">null</span>,arr);</div><div class="line"><span class="built_in">console</span>.log(max);</div></pre></td></tr></table></figure>
<h3 id="平均数"><a href="#平均数" class="headerlink" title="平均数"></a>平均数</h3><h4 id="一般写法"><a href="#一般写法" class="headerlink" title="一般写法"></a>一般写法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">avgFn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">// arguments.sort();// 类数组不能直接sort</span></div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="built_in">arguments</span>.length;i ++)&#123;</div><div class="line">        arr[arr.length] = <span class="built_in">arguments</span>[i];</div><div class="line">    &#125;</div><div class="line">    arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> a - b;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    arr.shift();<span class="comment">// 删头</span></div><div class="line">    arr.pop();<span class="comment">// 删尾</span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> total = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">        total += arr[i];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> (total / arr.length).toFixed(<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> res = avgFn(<span class="number">10</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(res);</div></pre></td></tr></table></figure>
<h4 id="求和优化"><a href="#求和优化" class="headerlink" title="求和优化"></a>求和优化</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">avgFn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">// arguments.sort();// 类数组不能直接sort</span></div><div class="line">    <span class="keyword">var</span> arr = [];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="built_in">arguments</span>.length;i ++)&#123;</div><div class="line">        arr[arr.length] = <span class="built_in">arguments</span>[i];</div><div class="line">    &#125;</div><div class="line">    arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> a - b;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    arr.shift();</div><div class="line">    arr.pop();</div><div class="line"></div><div class="line">    <span class="keyword">return</span> (<span class="built_in">eval</span>(arr.join(<span class="string">"+"</span>)) / arr.length).toFixed(<span class="number">2</span>);<span class="comment">// 求和</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> res = avgFn(<span class="number">10</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(res);</div></pre></td></tr></table></figure>
<h4 id="类数组转数组优化"><a href="#类数组转数组优化" class="headerlink" title="类数组转数组优化"></a>类数组转数组优化</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Array.prototype.slice = function()&#123;</span></div><div class="line"><span class="comment">//     var arr = [];</span></div><div class="line"><span class="comment">//     // this就是我们想要操作的那个数组</span></div><div class="line"><span class="comment">//     for(var i = 0;i &lt; this.length;i++)&#123;</span></div><div class="line"><span class="comment">//         arr[arr.length] = this[i];</span></div><div class="line"><span class="comment">//     &#125;</span></div><div class="line"><span class="comment">//     // 让this变成arguments就实现arguments转数组了</span></div><div class="line"><span class="comment">//     // for(var i = 0;i &lt; arguments.length;i ++)&#123;</span></div><div class="line"><span class="comment">//     //     arr[arr.length] = arguments[i];</span></div><div class="line"><span class="comment">//     // &#125;</span></div><div class="line"><span class="comment">//     return arr;</span></div><div class="line"><span class="comment">// &#125;;</span></div><div class="line"><span class="comment">// [12,23,34].slice();</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">avgFn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> arr = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</div><div class="line">    <span class="comment">// [].slice.call(arguments,0)// 实例也有slice方法和上面一样的事，0可传可不传</span></div><div class="line">    <span class="comment">// [].__proto__.slice.call(...)// ie不兼容</span></div><div class="line">    <span class="comment">// [].slice.apply[arguments,[0]]</span></div><div class="line">    </div><div class="line">    arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> a - b;</div><div class="line">    &#125;).shift();</div><div class="line"></div><div class="line">    arr.length --;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> (<span class="built_in">eval</span>(arr.join(<span class="string">"+"</span>)) / arr.length).toFixed(<span class="number">2</span>);<span class="comment">// 求和</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> res = avgFn(<span class="number">10</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(res);</div></pre></td></tr></table></figure>
<h4 id="换个姿势"><a href="#换个姿势" class="headerlink" title="换个姿势"></a>换个姿势</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// arguments可以通过下面方式使用数组中的所有方法</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">avgFn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    [].sort.call(<span class="built_in">arguments</span>,<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> a - b;</div><div class="line">    &#125;);</div><div class="line">    [].shift.call(<span class="built_in">arguments</span>);</div><div class="line">    [].pop.call(<span class="built_in">arguments</span>);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> (<span class="built_in">eval</span>([].join.call(<span class="built_in">arguments</span>,<span class="string">"+"</span>)) / <span class="built_in">arguments</span>.length).toFixed(<span class="number">2</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> res = avgFn(<span class="number">10</span>,<span class="number">10</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(res);</div></pre></td></tr></table></figure>
<h3 id="插入数据的几种方法"><a href="#插入数据的几种方法" class="headerlink" title="插入数据的几种方法"></a>插入数据的几种方法</h3><p>回流（重排）：结构改变（增加，删除，位置改变）<br>重绘：部分样式改变，浏览器只需要重新渲染当前元素即可<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 原始内容</span></div><div class="line"><span class="keyword">var</span> oUl = <span class="built_in">document</span>.getElementById(<span class="string">"ul1"</span>);</div><div class="line"><span class="keyword">var</span> aLi = oUl.getElementsByTagName(<span class="string">"li"</span>);</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; aLi.length;i ++)&#123;</div><div class="line">    aLi[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">this</span>.style.backgroundColor = <span class="string">"orange"</span>;</div><div class="line">    &#125;;</div><div class="line">    aLi[i].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">this</span>.style.backgroundColor = <span class="string">""</span>;</div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> arr = [</div><div class="line">    <span class="string">"水电费水电费的是否"</span>,</div><div class="line">    <span class="string">"fgdgdfg规范的身高大概"</span>,</div><div class="line">    <span class="string">"个梵蒂冈法规的"</span>,</div><div class="line">    <span class="string">"就换个价格"</span></div><div class="line">];</div></pre></td></tr></table></figure></p>
<h4 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h4><p>优：对原来内容的事件绑定有影响，劣：1次回流，模板引擎数据绑定的原理就是字符串拼接<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">""</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">    str += <span class="string">"&lt;li&gt;"</span> + arr[i] + <span class="string">"&lt;/li&gt;"</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">// oUl.innerHTML = oUl.innerHTML + str;// 之前的变成字符串...</span></div><div class="line"><span class="comment">// 一拿一放一渲染的方式（之前）的li的所有事件都会消失的</span></div><div class="line">oUl.innerHTML += str;</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">""</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">    str += <span class="string">"&lt;li&gt;"</span>;</div><div class="line">    str += <span class="string">"&lt;span&gt;"</span>+ (i + <span class="number">4</span>) +<span class="string">"&lt;/span&gt;"</span>;</div><div class="line">    str += arr[i].title;</div><div class="line">    str += <span class="string">"&lt;/li&gt;"</span>;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 先把之前的3个li以字符串拿出来，再以字符串添加，再重新渲染，原来的事件会消失</span></div><div class="line">oUl.innerHTML += str;</div></pre></td></tr></table></figure>
<h4 id="动态创建"><a href="#动态创建" class="headerlink" title="动态创建"></a>动态创建</h4><p>优：对原来无影响，劣：添加一次回流一次…<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">    <span class="keyword">var</span> oLi = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</div><div class="line">    oLi.innerHTML = arr[i];</div><div class="line">    oUl.appendChild(oLi);<span class="comment">// 向末尾增加，不会影响之前的元素</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="文档碎片"><a href="#文档碎片" class="headerlink" title="文档碎片"></a>文档碎片</h4><p>文档碎片：JS中用来临时存储元素的容器<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> frg = <span class="built_in">document</span>.createDocumentFragment();</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length;i ++)&#123;</div><div class="line">    <span class="keyword">var</span> oLi = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</div><div class="line">    oLi.innerHTML = arr[i];</div><div class="line">    frg.appendChild(oLi);</div><div class="line">&#125;</div><div class="line">oUl.appendChild(frg);</div><div class="line">frg = <span class="literal">null</span>;<span class="comment">// 手动释放容器</span></div></pre></td></tr></table></figure></p>
<h3 id="DOM元素宽高距离"><a href="#DOM元素宽高距离" class="headerlink" title="DOM元素宽高距离"></a>DOM元素宽高距离</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// clientHeight：height + padding，真实内容高度，和父级是否隐藏无关</span></div><div class="line"><span class="comment">// clientTop：上边框的宽度</span></div><div class="line"><span class="comment">// offsetHeight：clientHeight + clientTop + clientBottom，height + padding + border</span></div><div class="line"><span class="comment">// offsetTop：当前元素的外边框距离有定位父级的内边框的距离</span></div><div class="line"><span class="comment">// offsetParent：当前元素有定位的父级</span></div><div class="line"></div><div class="line"><span class="comment">// scrollHeight：同clientHeight</span></div><div class="line"><span class="comment">// document.documentElement.scrollHeight：文档高</span></div><div class="line"><span class="comment">// document.documentElement.clientHeight：窗口高</span></div><div class="line"><span class="comment">// document.documentElement.scrollTop：滚动高</span></div><div class="line"></div><div class="line"><span class="comment">// window.getComputedStyle(obj,null)["height"]</span></div><div class="line"><span class="comment">// obj.currentStyle["height"]</span></div></pre></td></tr></table></figure>
<h3 id="关于运动"><a href="#关于运动" class="headerlink" title="关于运动"></a>关于运动</h3><h4 id="根据步长"><a href="#根据步长" class="headerlink" title="根据步长"></a>根据步长</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line"><span class="keyword">var</span> maxLeft = utils.win(<span class="string">"clientWidth"</span>) - oDiv.offsetWidth;</div><div class="line"><span class="keyword">var</span> duration = <span class="number">2000</span>;</div><div class="line"><span class="keyword">var</span> step = (maxLeft / duration) * <span class="number">10</span>;<span class="comment">// 步长</span></div><div class="line"><span class="keyword">var</span> oDivLeft = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    oDivLeft = utils.css(oDiv,<span class="string">"left"</span>);</div><div class="line">    <span class="keyword">if</span>(oDivLeft &gt;= maxLeft)&#123;</div><div class="line">        clearInterval(timer);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    oDivLeft += step;</div><div class="line">    utils.css(oDiv,<span class="string">"left"</span>,oDivLeft);</div><div class="line">&#125;,<span class="number">10</span>);</div></pre></td></tr></table></figure>
<p>临界点判断<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</div><div class="line"><span class="keyword">var</span> maxLeft = utils.win(<span class="string">"clientWidth"</span>) - oDiv.offsetWidth;<span class="comment">// 目标值</span></div><div class="line"><span class="keyword">var</span> step = <span class="number">5</span>;</div><div class="line"><span class="keyword">var</span> curLeft = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    curLeft = utils.css(oDiv,<span class="string">"left"</span>);</div><div class="line">    <span class="keyword">if</span>(curLeft + step &gt;= maxLeft)&#123;<span class="comment">// 再进行边界判断的时候加上步长</span></div><div class="line">        utils.css(oDiv,<span class="string">"left"</span>,maxLeft);<span class="comment">// 如果上面不加，有种被拉回来的感觉会闪一次</span></div><div class="line">        clearInterval(timer);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    curLeft += step;<span class="comment">// 也可以直接写上面这样边界判断的时候就不用加步长了</span></div><div class="line">    utils.css(oDiv,<span class="string">"left"</span>,curLeft);</div><div class="line">&#125;,<span class="number">10</span>);</div></pre></td></tr></table></figure></p>
<p>setTimeout 递归模拟<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</div><div class="line"><span class="keyword">var</span> maxLeft = utils.win(<span class="string">"clientWidth"</span>) - oDiv.offsetWidth;<span class="comment">// 目标值</span></div><div class="line"><span class="keyword">var</span> step = <span class="number">5</span>;</div><div class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    clearTimeout(timer);<span class="comment">// 定时器清除后timer的值是什么呢？</span></div><div class="line">    <span class="keyword">var</span> curLeft = utils.css(oDiv,<span class="string">"left"</span>);</div><div class="line">    <span class="keyword">if</span>(curLeft + step &gt;= maxLeft)&#123;</div><div class="line">        utils.css(oDiv,<span class="string">"left"</span>,maxLeft);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    curLeft += step;</div><div class="line">    utils.css(oDiv,<span class="string">"left"</span>,curLeft);</div><div class="line">    timer = setTimeout(move,<span class="number">10</span>);</div><div class="line">    <span class="built_in">console</span>.log(timer);<span class="comment">// 还是不同的数字呢??</span></div><div class="line">&#125;</div><div class="line">move();</div></pre></td></tr></table></figure></p>
<h4 id="限制时间"><a href="#限制时间" class="headerlink" title="限制时间"></a>限制时间</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</div><div class="line"><span class="keyword">var</span> target = utils.win(<span class="string">"clientWidth"</span>) - oDiv.offsetWidth;<span class="comment">// 目标值</span></div><div class="line"><span class="keyword">var</span> begin = utils.css(oDiv,<span class="string">"left"</span>);<span class="comment">// 起始值</span></div><div class="line"><span class="keyword">var</span> change = target - begin;<span class="comment">// 总距离</span></div><div class="line"><span class="keyword">var</span> duration = <span class="number">2000</span>;</div><div class="line"><span class="keyword">var</span> time = <span class="literal">null</span>;</div><div class="line"></div><div class="line"><span class="comment">// time(当前时间),begin(初始值),change(变化量),duration(持续时间)</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Linear</span>(<span class="params">t,b,c,d</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> c * t / d + b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    time += <span class="number">10</span>;</div><div class="line">    <span class="built_in">console</span>.log(time);</div><div class="line">    <span class="keyword">if</span>(time &gt;= duration)&#123;</div><div class="line">        utils.css(oDiv,<span class="string">"left"</span>,target);</div><div class="line">        clearInterval(timer);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> curPos = Linear(time,begin,change,duration);</div><div class="line">    utils.css(oDiv,<span class="string">"left"</span>,curPos);</div><div class="line">&#125;,<span class="number">10</span>);</div></pre></td></tr></table></figure>
<h4 id="解决作用域累计的问题"><a href="#解决作用域累计的问题" class="headerlink" title="解决作用域累计的问题"></a>解决作用域累计的问题</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</div><div class="line"><span class="keyword">var</span> minLeft = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> maxLeft = utils.win(<span class="string">"clientWidth"</span>) - oDiv.offsetWidth;</div><div class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">target</span>)</span>&#123;</div><div class="line">    _move();</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_move</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        clearTimeout(timer);<span class="comment">// !!!!!!!!!!!</span></div><div class="line">        <span class="keyword">var</span> curLeft = utils.css(oDiv,<span class="string">"left"</span>);</div><div class="line">        <span class="keyword">if</span>(curLeft &lt; target)&#123;<span class="comment">// 向右</span></div><div class="line">            <span class="keyword">if</span>(curLeft + <span class="number">5</span> &gt;= target)&#123;<span class="comment">// 边界判断要加目标值</span></div><div class="line">                utils.css(oDiv,<span class="string">"left"</span>,target);</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            curLeft += <span class="number">5</span>;</div><div class="line">            utils.css(oDiv,<span class="string">"left"</span>,curLeft);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(curLeft &gt; target)&#123;<span class="comment">// 向左</span></div><div class="line">            <span class="keyword">if</span>(curLeft - <span class="number">5</span> &lt;= target)&#123;</div><div class="line">                utils.css(oDiv,<span class="string">"left"</span>,target);</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            curLeft -= <span class="number">5</span>;</div><div class="line">            utils.css(oDiv,<span class="string">"left"</span>,curLeft);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// timer = setTimeout(function()&#123;// 每次都需要先执行匿名函数，形成一个私有作用域，这样写性能不好</span></div><div class="line">        <span class="comment">//     move(target);</span></div><div class="line">        <span class="comment">// &#125;,10);</span></div><div class="line">        <span class="comment">// timer = setTimeout(move(),10);// 这样写是返回结果，也不对</span></div><div class="line">        timer = setTimeout(_move,<span class="number">10</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"left"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    move(minLeft)</div><div class="line">&#125;;</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"right"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    move(maxLeft)</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="自定义timer"><a href="#自定义timer" class="headerlink" title="自定义timer"></a>自定义timer</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 边界判断</span></div><div class="line"><span class="comment">// 清除没有用的定时器</span></div><div class="line"><span class="comment">// _move避免作用域的累积</span></div><div class="line"><span class="comment">// 把定时器的返回值放在自定义属性上，防止全局和一个元素做多个事情</span></div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</div><div class="line"><span class="keyword">var</span> minLeft = <span class="number">0</span>;</div><div class="line"><span class="keyword">var</span> maxLeft = utils.win(<span class="string">"clientWidth"</span>) - oDiv.offsetWidth;</div><div class="line"><span class="comment">//var timer = null; // 放在全局下用的都是同一个timer，但放在全局下又不好，解决之道是自定义属性</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">target</span>)</span>&#123;</div><div class="line">    <span class="comment">//var timer = null;// 放在这里，当向一边还没走完时向右走哆嗦，又向左右向右</span></div><div class="line">    _move();</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_move</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        clearTimeout(oDiv.timer);<span class="comment">// !!!!!!!!!!!</span></div><div class="line">        <span class="keyword">var</span> curLeft = utils.css(oDiv,<span class="string">"left"</span>);</div><div class="line">        <span class="keyword">if</span>(curLeft &lt; target)&#123;<span class="comment">// 向右</span></div><div class="line">            <span class="keyword">if</span>(curLeft + <span class="number">5</span> &gt;= target)&#123;<span class="comment">// 边界判断要加目标值</span></div><div class="line">                utils.css(oDiv,<span class="string">"left"</span>,target);</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            curLeft += <span class="number">5</span>;</div><div class="line">            utils.css(oDiv,<span class="string">"left"</span>,curLeft);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(curLeft &gt; target)&#123;<span class="comment">// 向左</span></div><div class="line">            <span class="keyword">if</span>(curLeft - <span class="number">5</span> &lt;= target)&#123;</div><div class="line">                utils.css(oDiv,<span class="string">"left"</span>,target);</div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            curLeft -= <span class="number">5</span>;</div><div class="line">            utils.css(oDiv,<span class="string">"left"</span>,curLeft);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        oDiv.timer = setTimeout(_move,<span class="number">10</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"left"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    move(minLeft)</div><div class="line">&#125;;</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"right"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    move(maxLeft)</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="水平垂直都动"><a href="#水平垂直都动" class="headerlink" title="水平垂直都动"></a>水平垂直都动</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</div><div class="line"><span class="keyword">var</span> beginLeft = utils.css(oDiv,<span class="string">"left"</span>);</div><div class="line"><span class="keyword">var</span> beginTop = utils.css(oDiv,<span class="string">"top"</span>);</div><div class="line"><span class="keyword">var</span> targetLeft = <span class="number">1000</span>;</div><div class="line"><span class="keyword">var</span> targetTop = <span class="number">500</span>;</div><div class="line"><span class="keyword">var</span> changeLeft = targetLeft - beginLeft;</div><div class="line"><span class="keyword">var</span> changeTop = targetTop - beginTop;</div><div class="line"><span class="keyword">var</span> duration = <span class="number">1000</span>;</div><div class="line"><span class="keyword">var</span> time = <span class="number">0</span>;<span class="comment">// 走了多长时间了</span></div><div class="line"></div><div class="line">oDiv.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    time += <span class="number">10</span>;</div><div class="line">    <span class="keyword">if</span>(time &gt;= duration)&#123;</div><div class="line">        utils.css(oDiv,&#123;</div><div class="line">            <span class="attr">left</span>: targetLeft,</div><div class="line">            <span class="attr">top</span>: targetTop</div><div class="line">        &#125;);</div><div class="line">        clearInterval(oDiv.timer);</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> curLeft = Linear(time,beginLeft,changeLeft,duration);</div><div class="line">    <span class="keyword">var</span> curTop = Linear(time,beginTop,changeTop,duration);</div><div class="line">    utils.css(oDiv,&#123;</div><div class="line">        <span class="attr">left</span>: curLeft,</div><div class="line">        <span class="attr">top</span>: curTop</div><div class="line">    &#125;);</div><div class="line">&#125;,<span class="number">10</span>);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Linear</span>(<span class="params">t,b,c,d</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> c * t / d + b;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 使用</span></div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</div><div class="line">run(oDiv,&#123;</div><div class="line">    <span class="attr">left</span>: <span class="number">300</span></div><div class="line">&#125;,<span class="number">1000</span>,[<span class="string">"Bounce"</span>,<span class="string">"easeIn"</span>],<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.style.backgroundColor = <span class="string">"pink"</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 方法</span></div><div class="line">~<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> move = &#123;</div><div class="line">        <span class="attr">Linear</span>: <span class="function"><span class="keyword">function</span>(<span class="params">t,b,c,d</span>)</span>&#123;<span class="comment">// 此种动画形式的彻底研究</span></div><div class="line">            <span class="keyword">return</span> t * c / d + b;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">Quad</span>: &#123;<span class="comment">//二次方的缓动（t^2）；</span></div><div class="line">            easeIn: <span class="function"><span class="keyword">function</span>(<span class="params">t,b,c,d</span>)</span>&#123;</div><div class="line">                <span class="keyword">return</span> c*(t/=d)*t + b;</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">Cubic</span>: &#123;<span class="comment">//三次方的缓动（t^3）</span></div><div class="line">            easeIn: <span class="function"><span class="keyword">function</span>(<span class="params">t,b,c,d</span>)</span>&#123;</div><div class="line">                <span class="keyword">return</span> c*(t/=d)*t*t + b;</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">Bounce</span>: &#123;<span class="comment">//指数衰减的反弹缓动。</span></div><div class="line">            easeIn: <span class="function"><span class="keyword">function</span>(<span class="params">t,b,c,d</span>)</span>&#123;</div><div class="line">                <span class="keyword">return</span> c - move.Bounce.easeOut(d-t, <span class="number">0</span>, c, d) + b;</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">easeOut</span>: <span class="function"><span class="keyword">function</span>(<span class="params">t,b,c,d</span>)</span>&#123;</div><div class="line">                <span class="keyword">if</span> ((t/=d) &lt; (<span class="number">1</span>/<span class="number">2.75</span>)) &#123;</div><div class="line">                    <span class="keyword">return</span> c*(<span class="number">7.5625</span>*t*t) + b;</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &lt; (<span class="number">2</span>/<span class="number">2.75</span>)) &#123;</div><div class="line">                    <span class="keyword">return</span> c*(<span class="number">7.5625</span>*(t-=(<span class="number">1.5</span>/<span class="number">2.75</span>))*t + <span class="number">.75</span>) + b;</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t &lt; (<span class="number">2.5</span>/<span class="number">2.75</span>)) &#123;</div><div class="line">                    <span class="keyword">return</span> c*(<span class="number">7.5625</span>*(t-=(<span class="number">2.25</span>/<span class="number">2.75</span>))*t + <span class="number">.9375</span>) + b;</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="keyword">return</span> c*(<span class="number">7.5625</span>*(t-=(<span class="number">2.625</span>/<span class="number">2.75</span>))*t + <span class="number">.984375</span>) + b;</div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">easeInOut</span>: <span class="function"><span class="keyword">function</span>(<span class="params">t,b,c,d</span>)</span>&#123;</div><div class="line">                <span class="keyword">if</span> (t &lt; d/<span class="number">2</span>) <span class="keyword">return</span> move.Bounce.easeIn(t*<span class="number">2</span>, <span class="number">0</span>, c, d) * <span class="number">.5</span> + b;</div><div class="line">                <span class="keyword">else</span> <span class="keyword">return</span> move.Bounce.easeOut(t*<span class="number">2</span>-d, <span class="number">0</span>, c, d) * <span class="number">.5</span> + c*<span class="number">.5</span> + b;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    move.Linear();</div><div class="line">    <span class="comment">// 多方向的运动</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params">curEle,target,duration,effect,callBack</span>)</span>&#123;</div><div class="line">        <span class="comment">// 数字</span></div><div class="line">        <span class="comment">// 数组</span></div><div class="line">        <span class="comment">// 不传</span></div><div class="line">        <span class="keyword">var</span> tempEffect = move.Linear;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> effect === <span class="string">"number"</span>)&#123;</div><div class="line">            <span class="keyword">switch</span>(effect)&#123;</div><div class="line">                <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">                    tempEffect = move.Quad.easeIn;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                    tempEffect = move.Cubic.easeIn;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">                    tempEffect = move.Bounce.easeIn;</div><div class="line">                    <span class="comment">// ...</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(effect <span class="keyword">instanceof</span> <span class="built_in">Array</span>)&#123;<span class="comment">// ["Bounce","easeIn"]</span></div><div class="line">            tempEffect = effect.length &gt;= <span class="number">2</span> ? move[effect[<span class="number">0</span>]][effect[<span class="number">1</span>]] : move[effect[<span class="number">0</span>]].easeIn;<span class="comment">// 默认...</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(effect === <span class="string">"function"</span>)&#123;<span class="comment">// 相当于effect没传</span></div><div class="line">            callBack = effect;<span class="comment">// tempEffect还是默认的</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        clearInterval(curEle,curEle.timer);</div><div class="line">        <span class="keyword">var</span> begin = &#123;&#125;;</div><div class="line">        <span class="keyword">var</span> change = &#123;&#125;;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> target)&#123;</div><div class="line">            <span class="keyword">if</span>(target.hasOwnProperty(key))&#123;<span class="comment">// 私有，非原型</span></div><div class="line">                begin[key] = utils.css(curEle,key);</div><div class="line">                change[key] = target[key] - begin[key];</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 运动...</span></div><div class="line">        <span class="keyword">var</span> time = <span class="number">0</span>;</div><div class="line">        curEle.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            time += <span class="number">10</span>;</div><div class="line">            <span class="keyword">if</span>(time &gt;= duration)&#123;</div><div class="line">                utils.css(curEle,target);<span class="comment">// 批量设置目标值</span></div><div class="line">                clearInterval(curEle.timer);</div><div class="line">                <span class="keyword">typeof</span> callBack === <span class="string">"function"</span> ? callBack.call(curEle) : <span class="literal">null</span>;</div><div class="line">                <span class="comment">//callBack &amp;&amp; callBack();</span></div><div class="line">                <span class="keyword">return</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> target)&#123;</div><div class="line">                <span class="keyword">if</span>(target.hasOwnProperty(key))&#123;</div><div class="line">                    <span class="keyword">var</span> curPos = tempEffect(time,begin[key],change[key],duration);<span class="comment">// !!!</span></div><div class="line">                    utils.css(curEle,key,curPos);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;,<span class="number">10</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">window</span>.run = run;</div><div class="line">&#125;();</div></pre></td></tr></table></figure>
<h3 id="简版运动演化"><a href="#简版运动演化" class="headerlink" title="简版运动演化"></a>简版运动演化</h3><h4 id="动起来"><a href="#动起来" class="headerlink" title="动起来"></a>动起来</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn1"</span>);</div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</div><div class="line">oBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove();</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    clearInterval(timer);</div><div class="line">    timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> speed = <span class="number">7</span>;</div><div class="line">        <span class="keyword">if</span>(oDiv.offsetLeft &gt;= <span class="number">300</span>)&#123;</div><div class="line">            clearInterval(timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            oDiv.style.left = oDiv.offsetLeft + speed + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="透明度"><a href="#透明度" class="headerlink" title="透明度"></a>透明度</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</div><div class="line"><span class="keyword">var</span> alpha = <span class="number">30</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">iTarget</span>)</span>&#123;</div><div class="line">    clearInterval(timer);</div><div class="line">    timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(alpha &gt; iTarget)&#123;</div><div class="line">            speed = <span class="number">-10</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            speed = <span class="number">10</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(alpha == iTarget)&#123;</div><div class="line">            clearInterval(timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            alpha += speed;</div><div class="line">            oDiv.style.filter = <span class="string">'alpha(opacity:'</span>+alpha+<span class="string">')'</span>;</div><div class="line">            oDiv.style.opacity = alpha/<span class="number">100</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div><div class="line">oDiv.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="number">100</span>);</div><div class="line">&#125;;</div><div class="line">oDiv.onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="number">30</span>);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="缓冲"><a href="#缓冲" class="headerlink" title="缓冲"></a>缓冲</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//像素是屏幕显示的最小单位 290.9 &gt;&gt; 290 并不是四舍五入   &gt;&gt;  速度取整</span></div><div class="line"><span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn1"</span>);</div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</div><div class="line"></div><div class="line">oBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove();</div><div class="line">&#125;;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    clearInterval(timer);</div><div class="line">    timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> speed = (<span class="number">300</span> - oDiv.offsetLeft) / <span class="number">10</span>;<span class="comment">//距离和速度成正比</span></div><div class="line">        speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);<span class="comment">//速度取整，-1.5 &gt; -2</span></div><div class="line">        <span class="keyword">if</span>(oDiv.offsetLeft == <span class="number">300</span>)&#123;</div><div class="line">            clearInterval(timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            oDiv.style.left = oDiv.offsetLeft + speed + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="缓冲（固定底部）"><a href="#缓冲（固定底部）" class="headerlink" title="缓冲（固定底部）"></a>缓冲（固定底部）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">    <span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;</div><div class="line">    <span class="keyword">var</span> mubiao = <span class="built_in">document</span>.documentElement.clientHeight - oDiv.offsetHeight + scrollTop;</div><div class="line">    startMove(oDiv,mubiao);</div><div class="line">&#125;;</div><div class="line"><span class="comment">//注意timer不能放在window.onscroll中！！</span></div><div class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">obj,iTarget</span>)</span>&#123;</div><div class="line">    clearInterval(timer);</div><div class="line">    timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> speed = (iTarget-obj.offsetTop) / <span class="number">7</span>;</div><div class="line">        speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);</div><div class="line">        <span class="built_in">console</span>.log(<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span>(obj.offsetTop == iTarget)&#123;</div><div class="line">            clearInterval(timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            obj.style.top = obj.offsetTop + speed + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="缓冲（固定中间）"><a href="#缓冲（固定中间）" class="headerlink" title="缓冲（固定中间）"></a>缓冲（固定中间）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">    <span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop || <span class="built_in">document</span>.body.scrollTop;</div><div class="line">    <span class="keyword">var</span> mubiao = <span class="built_in">parseInt</span>((<span class="built_in">document</span>.documentElement.clientHeight - oDiv.offsetHeight)/<span class="number">2</span>) + scrollTop;<span class="comment">//有除有可能有小数，有小数有可能出问题</span></div><div class="line">    startMove(oDiv,mubiao);</div><div class="line">&#125;;</div><div class="line"><span class="comment">//注意timer不能放在window.onscroll中</span></div><div class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">obj,iTarget</span>)</span>&#123;</div><div class="line">    clearInterval(timer);</div><div class="line">    timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> speed = (iTarget-obj.offsetTop) / <span class="number">7</span>;</div><div class="line">        speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);</div><div class="line">        <span class="keyword">if</span>(obj.offsetTop == iTarget)&#123;</div><div class="line">            clearInterval(timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            obj.style.top = obj.offsetTop + speed + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="匀速运动的停止条件"><a href="#匀速运动的停止条件" class="headerlink" title="匀速运动的停止条件"></a>匀速运动的停止条件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</div><div class="line"></div><div class="line">oDiv.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="number">0</span>);</div><div class="line">&#125;;</div><div class="line">oDiv.onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="number">-100</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">iTarget</span>)</span>&#123;</div><div class="line">    clearInterval(timer);</div><div class="line">    timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(oDiv.offsetLeft &gt; iTarget)&#123;<span class="comment">//offsetLeft &gt; 目标点 速度负</span></div><div class="line">            speed = <span class="number">-7</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            speed = <span class="number">7</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(iTarget - oDiv.offsetLeft) &lt;= <span class="number">7</span>)&#123;<span class="comment">//匀速运动的停止条件。缓冲运动则不需这样的条件因为其速度越来越小，最后一点一点的也会撑到目标点</span></div><div class="line">            clearInterval(timer);</div><div class="line">            oDiv.style.left = iTarget + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            oDiv.style.left = oDiv.offsetLeft + speed + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="多物体"><a href="#多物体" class="headerlink" title="多物体"></a>多物体</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//多个定时器互不影响</span></div><div class="line"><span class="keyword">var</span> aDiv = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; aDiv.length; i++)&#123;</div><div class="line">    aDiv[i].timer = <span class="literal">null</span>;</div><div class="line">    aDiv[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        startMove(<span class="keyword">this</span>,<span class="number">300</span>);</div><div class="line">    &#125;;</div><div class="line">    aDiv[i].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        startMove(<span class="keyword">this</span>,<span class="number">100</span>);</div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">obj,iTarget</span>)</span>&#123;</div><div class="line">    clearInterval(obj.timer);</div><div class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> speed = (iTarget - obj.offsetWidth) / <span class="number">7</span>;</div><div class="line">        speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(obj.offsetWidth == iTarget)&#123;</div><div class="line">            clearInterval(obj.timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            obj.style.width = obj.offsetWidth + speed +<span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="多物体透明度"><a href="#多物体透明度" class="headerlink" title="多物体透明度"></a>多物体透明度</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//多物体运动时多有的东西都不能共用包括alpha</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> aDiv = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt; aDiv.length;i++)&#123;</div><div class="line">    aDiv[i].timer = <span class="literal">null</span>;</div><div class="line">    aDiv[i].alpha = <span class="number">30</span>;</div><div class="line">    aDiv[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        startMove(<span class="keyword">this</span>,<span class="number">100</span>);</div><div class="line">    &#125;;</div><div class="line">    aDiv[i].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        startMove(<span class="keyword">this</span>,<span class="number">30</span>);</div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">obj,iTarget</span>)</span>&#123;</div><div class="line">    clearInterval(obj.timer);</div><div class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> speed = (iTarget - obj.alpha)/<span class="number">6</span>;</div><div class="line">        speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(obj.alpha == iTarget)&#123;</div><div class="line">            clearInterval(obj.timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            obj.alpha += speed;</div><div class="line">            obj.style.filter = <span class="string">'alpha(opacity:'</span>+ obj.alpha +<span class="string">')'</span>;</div><div class="line">            obj.style.opacity = obj.alpha / <span class="number">100</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="多物体任意值"><a href="#多物体任意值" class="headerlink" title="多物体任意值"></a>多物体任意值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">obj,name</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(obj.currentStyle)&#123;</div><div class="line">        <span class="keyword">return</span> obj.currentStyle[name];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> getComputedStyle(obj,<span class="literal">false</span>)[name];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> aDiv = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</div><div class="line"></div><div class="line">aDiv[<span class="number">0</span>].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="keyword">this</span>,<span class="string">"width"</span>,<span class="string">"300"</span>);</div><div class="line">&#125;;</div><div class="line">aDiv[<span class="number">0</span>].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="keyword">this</span>,<span class="string">"width"</span>,<span class="string">"100"</span>);</div><div class="line">&#125;;</div><div class="line">aDiv[<span class="number">1</span>].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="keyword">this</span>,<span class="string">"height"</span>,<span class="number">300</span>);</div><div class="line">&#125;;</div><div class="line">aDiv[<span class="number">1</span>].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="keyword">this</span>,<span class="string">"height"</span>,<span class="number">100</span>);</div><div class="line">&#125;;</div><div class="line">aDiv[<span class="number">2</span>].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="keyword">this</span>,<span class="string">"borderWidth"</span>,<span class="string">"10"</span>);</div><div class="line">&#125;;</div><div class="line">aDiv[<span class="number">2</span>].onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="keyword">this</span>,<span class="string">"borderWidth"</span>,<span class="string">"1"</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">obj,name,iTarget</span>)</span>&#123;</div><div class="line">    clearInterval(obj.timer);</div><div class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> cur = <span class="built_in">parseInt</span>( getStyle(obj,name) );<span class="comment">//getStyle获取的值是带单位的</span></div><div class="line">        <span class="keyword">var</span> speed = (iTarget - cur) / <span class="number">6</span>;</div><div class="line">        speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(cur == iTarget)&#123;</div><div class="line">            clearInterval(obj.timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            obj.style[name] = cur + speed + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="多物体任意值（考虑透明度）"><a href="#多物体任意值（考虑透明度）" class="headerlink" title="多物体任意值（考虑透明度）"></a>多物体任意值（考虑透明度）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//透明度获取和设置时候的问题</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">obj,name</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(obj.currentStyle)&#123;</div><div class="line">        <span class="keyword">return</span> obj.currentStyle[name];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> getComputedStyle(obj,<span class="literal">false</span>)[name];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line"></div><div class="line">oDiv.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="keyword">this</span>,<span class="string">"opacity"</span>,<span class="number">100</span>);</div><div class="line">&#125;;</div><div class="line">oDiv.onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(<span class="keyword">this</span>,<span class="string">"opacity"</span>,<span class="number">30</span>);</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">obj,attr,iTarget</span>)</span>&#123;</div><div class="line">    clearInterval(obj.timer);</div><div class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> cur = <span class="number">0</span>;</div><div class="line">        <span class="keyword">if</span>(attr == <span class="string">"opacity"</span>)&#123;</div><div class="line">            cur = <span class="built_in">Math</span>.round(<span class="built_in">parseFloat</span>(getStyle(obj,attr))*<span class="number">100</span>);<span class="comment">//透明度parseInt有问题，Math.round()去掉小数解决ie7透明度跳动的问题</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            cur = <span class="built_in">parseInt</span>(getStyle(obj,attr));</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">var</span> speed = (iTarget - cur) / <span class="number">7</span>;</div><div class="line">        speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);</div><div class="line"></div><div class="line">        <span class="keyword">if</span>(cur == iTarget)&#123;</div><div class="line">            clearInterval(obj.timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">if</span>(attr == <span class="string">"opacity"</span>)&#123;</div><div class="line">                obj.style.filter = <span class="string">'alpha(opacity:'</span>+(cur + speed)+<span class="string">')'</span>;</div><div class="line">                obj.style.opacity = (cur + speed) / <span class="number">100</span>;</div><div class="line">                <span class="built_in">document</span>.title = obj.style.opacity;<span class="comment">//ie7这个opacity值一直会跳动 例如0.07 * 100</span></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                obj.style[attr] = cur + speed + <span class="string">"px"</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="完美"><a href="#完美" class="headerlink" title="完美"></a>完美</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">obj,attr</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(obj.currentStyle)&#123;</div><div class="line">        <span class="keyword">return</span> obj.currentStyle[attr];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> getComputedStyle(obj,<span class="literal">false</span>)[attr];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">startMove</span>(<span class="params">obj,json,fnEnd</span>)</span>&#123;</div><div class="line">    clearInterval(obj.timer);</div><div class="line">    obj.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> oStop = <span class="literal">true</span>;</div><div class="line">        <span class="keyword">for</span>( <span class="keyword">var</span> attr <span class="keyword">in</span> json)&#123;</div><div class="line">            <span class="keyword">var</span> cur = <span class="number">0</span>;</div><div class="line">            <span class="keyword">if</span>(attr == <span class="string">"opacity"</span>)&#123;</div><div class="line">                cur = <span class="built_in">Math</span>.round( <span class="built_in">parseFloat</span>( getStyle(obj,attr) ) * <span class="number">100</span> );</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                cur = <span class="built_in">parseInt</span>( getStyle(obj,attr) );</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">var</span> speed = (json[attr] - cur) / <span class="number">7</span>;</div><div class="line">            speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);</div><div class="line"></div><div class="line">            <span class="keyword">if</span>(cur != json[attr])&#123;</div><div class="line">                oStop = <span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(attr == <span class="string">"opacity"</span>)&#123;</div><div class="line">                obj.style.filter = <span class="string">'alpha(opacity:'</span>+(cur+speed)+<span class="string">')'</span>;</div><div class="line">                obj.style.opacity = (cur + speed) / <span class="number">100</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                obj.style[attr] = cur + speed + <span class="string">"px"</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(oStop)&#123;</div><div class="line">            clearInterval(obj.timer);</div><div class="line">            fnEnd&amp;&amp;fnEnd();</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">oDiv.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    startMove(oDiv,&#123;<span class="string">"width"</span>:<span class="string">"110"</span>,<span class="string">"height"</span>:<span class="string">"300"</span>,<span class="string">"opacity"</span>:<span class="number">100</span>,<span class="string">"borderWidth"</span>:<span class="string">"30"</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        alert(<span class="number">1</span>);</div><div class="line">    &#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="几种运动形式总结"><a href="#几种运动形式总结" class="headerlink" title="几种运动形式总结"></a>几种运动形式总结</h4><h5 id="匀速"><a href="#匀速" class="headerlink" title="匀速"></a>匀速</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">StartMove1</span>(<span class="params">id,iTarget</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.oDiv = <span class="built_in">document</span>.getElementById(id);</div><div class="line">    <span class="keyword">this</span>.speed = <span class="number">0</span>;</div><div class="line">    <span class="keyword">this</span>.timer = <span class="literal">null</span>;        </div><div class="line">    clearInterval(<span class="keyword">this</span>.timer);</div><div class="line">    <span class="keyword">if</span>(iTarget &gt; <span class="keyword">this</span>.oDiv.offsetLeft)&#123;</div><div class="line">        <span class="keyword">this</span>.speed = <span class="number">7</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">this</span>.speed = <span class="number">-7</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> This = <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">this</span>.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(iTarget - This.oDiv.offsetLeft) &lt; <span class="number">7</span>)&#123;</div><div class="line">            clearInterval(This.timer);</div><div class="line">            This.oDiv.style.left = iTarget + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            This.oDiv.style.left = This.oDiv.offsetLeft + This.speed + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">new</span> StartMove1(<span class="string">"div1"</span>,<span class="number">500</span>);</div></pre></td></tr></table></figure>
<h5 id="弹性"><a href="#弹性" class="headerlink" title="弹性"></a>弹性</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">StartMove2</span>(<span class="params">id,iTarget</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.timer = <span class="literal">null</span>;</div><div class="line">    <span class="keyword">this</span>.speed = <span class="number">0</span>;</div><div class="line">    <span class="keyword">this</span>.oDiv = <span class="built_in">document</span>.getElementById(id);</div><div class="line">    clearInterval(<span class="keyword">this</span>.timer);</div><div class="line">    <span class="keyword">var</span> This = <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">this</span>.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        This.speed += (iTarget - This.oDiv.offsetLeft) / <span class="number">5</span>;<span class="comment">//step1</span></div><div class="line">        This.speed *= <span class="number">0.7</span>;<span class="comment">//step2</span></div><div class="line">        <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(This.speed) &lt; <span class="number">1</span> &amp;&amp; <span class="built_in">Math</span>.abs(iTarget-This.oDiv.offsetLeft) &lt; <span class="number">1</span>)&#123;<span class="comment">//step3</span></div><div class="line">            clearInterval(This.timer);</div><div class="line">            This.speed = <span class="number">0</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            This.oDiv.style.left = This.oDiv.offsetLeft + This.speed + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">new</span> StartMove2(<span class="string">"div1"</span>,<span class="number">500</span>);</div></pre></td></tr></table></figure>
<h5 id="重力"><a href="#重力" class="headerlink" title="重力"></a>重力</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">StartMove3</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">    <span class="keyword">this</span>.oWinHeight = <span class="built_in">document</span>.documentElement.clientHeight - <span class="keyword">this</span>.oDiv.offsetHeight;</div><div class="line">    <span class="keyword">this</span>.oT = <span class="number">0</span>;</div><div class="line">    <span class="keyword">this</span>.timer = <span class="literal">null</span>;</div><div class="line">    <span class="keyword">this</span>.speed = <span class="number">0</span>;</div><div class="line">    <span class="keyword">this</span>.iNum = <span class="number">0</span>;<span class="comment">//计数判断何时清除定时器</span></div><div class="line">    clearInterval(<span class="keyword">this</span>.timer);</div><div class="line">    <span class="keyword">var</span> This = <span class="keyword">this</span>;</div><div class="line">    <span class="keyword">this</span>.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        This.speed += <span class="number">3</span>;<span class="comment">//step1：加速度</span></div><div class="line">        This.oT = This.oDiv.offsetTop + This.speed;</div><div class="line">        <span class="keyword">if</span>(This.oT &gt; This.oWinHeight)&#123;</div><div class="line">            This.iNum ++;</div><div class="line">            <span class="keyword">if</span>(This.iNum == <span class="number">6</span>)&#123;</div><div class="line">                clearInterval(This.timer);</div><div class="line">            &#125;</div><div class="line">            This.oT = This.oWinHeight;</div><div class="line">            This.speed *= <span class="number">-1</span>;<span class="comment">//step2：变方向</span></div><div class="line">            This.speed *= <span class="number">0.75</span>;<span class="comment">//step3：摩擦力</span></div><div class="line">            <span class="built_in">console</span>.log(This.speed);</div><div class="line">        &#125;</div><div class="line">        This.oDiv.style.top = This.oT + <span class="string">"px"</span>;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">new</span> StartMove3();</div></pre></td></tr></table></figure>
<h5 id="缓冲-1"><a href="#缓冲-1" class="headerlink" title="缓冲"></a>缓冲</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">StartMove4</span>(<span class="params">iTarget</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</div><div class="line">    <span class="keyword">this</span>.timer = <span class="literal">null</span>;</div><div class="line">    <span class="keyword">var</span> This = <span class="keyword">this</span>;</div><div class="line">    clearInterval(<span class="keyword">this</span>.timer);</div><div class="line">    <span class="keyword">this</span>.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> speed = (iTarget - This.oDiv.offsetLeft) / <span class="number">7</span>;</div><div class="line">        speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed);</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(speed) &lt; <span class="number">1</span>)&#123;</div><div class="line">            clearInterval(This.timer);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            This.oDiv.style.left = This.oDiv.offsetLeft + speed + <span class="string">"px"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">30</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">new</span> StartMove4(<span class="number">500</span>);</div></pre></td></tr></table></figure>
<h3 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h3><h4 id="首屏"><a href="#首屏" class="headerlink" title="首屏"></a>首屏</h4><p>给对应区域一张尽量小默认图，当真实内容加载陈功时再加载真实图片<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div1"</span>);</div><div class="line"><span class="keyword">var</span> oImg = oDiv.getElementsByTagName(<span class="string">"img"</span>)[<span class="number">0</span>];</div><div class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</div><div class="line"></div><div class="line">timer = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> loadImg = <span class="keyword">new</span> Image();</div><div class="line">    loadImg.src = oImg.getAttribute(<span class="string">"data-src"</span>);</div><div class="line">    loadImg.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        oImg.src = <span class="keyword">this</span>.src;</div><div class="line">        oImg.style.display = <span class="string">"block"</span>;</div><div class="line">        loadImg = <span class="literal">null</span>;<span class="comment">// 注意这里释放别搞错了...</span></div><div class="line"></div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"加载完成！"</span>);<span class="comment">// 里面处理完成的</span></div><div class="line">        <span class="keyword">var</span> time2 = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">        <span class="built_in">console</span>.log(time2 - time1);<span class="comment">// 加载时间</span></div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">var</span> time1 = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"正在加载中..."</span>);<span class="comment">// 外面处理loading的</span></div><div class="line">&#125;,<span class="number">500</span>);</div></pre></td></tr></table></figure></p>
<h4 id="其他屏"><a href="#其他屏" class="headerlink" title="其他屏"></a>其他屏</h4><p>出现在屏幕中时开始加载真实图片<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.querySelector(<span class="string">"#div1"</span>);</div><div class="line"><span class="keyword">var</span> oImg = oDiv.getElementsByTagName(<span class="string">"img"</span>)[<span class="number">0</span>];</div><div class="line"></div><div class="line"><span class="built_in">window</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(oImg.isLoad)<span class="keyword">return</span>;</div><div class="line">    <span class="keyword">var</span> A = utils.offset(oDiv).top + oDiv.offsetHeight;<span class="comment">// 这里不能用oImg，oImg藏起来获取有问题</span></div><div class="line">    <span class="keyword">var</span> B = utils.win(<span class="string">"scrollTop"</span>) + utils.win(<span class="string">"clientHeight"</span>);</div><div class="line">    <span class="keyword">if</span>(A &lt; B)&#123;</div><div class="line">        <span class="keyword">var</span> loadImg = <span class="keyword">new</span> Image();</div><div class="line">        loadImg.src = oImg.getAttribute(<span class="string">"data-src"</span>);</div><div class="line">        loadImg.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">"ok"</span>);</div><div class="line">            oImg.src = <span class="keyword">this</span>.src;</div><div class="line">            oImg.style.display = <span class="string">"block"</span>;</div><div class="line">            loadImg = <span class="literal">null</span>;</div><div class="line">        &#125;;</div><div class="line">        oImg.isLoad = <span class="literal">true</span>;<span class="comment">// 不管是否加载成功进入后就不再重新加载了，JS定义的属性控制台上看不见的</span></div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p><a href="javascript">连接</a><br>补充：数据异步加载一般是开始把前两屏的数据加载进来，当页面滚动到对应区域时再加载渲染数据</p>
<h3 id="兼容性处理举例"><a href="#兼容性处理举例" class="headerlink" title="兼容性处理举例"></a>兼容性处理举例</h3><p>try catch:不管是什么都要走try中的代码，不好<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">ele,attr</span>)</span>&#123;</div><div class="line">    <span class="keyword">try</span>&#123;</div><div class="line">        <span class="keyword">return</span> getComputedStyle(ele,<span class="literal">null</span>)[attr];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span>(e)&#123;</div><div class="line">        <span class="keyword">return</span> ele.currentStyle[attr];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>判断是否存在此属性<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">ele,attr</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.getComputedStyle)&#123;</div><div class="line">        <span class="keyword">return</span> getComputedStyle(ele,<span class="literal">null</span>)[attr];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> ele.currentStyle[attr];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">ele,attr</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="string">"getComputedStyle"</span> <span class="keyword">in</span> <span class="built_in">window</span>)&#123;</div><div class="line">        <span class="keyword">return</span> getComputedStyle(ele,<span class="literal">null</span>)[attr];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> ele.currentStyle[attr];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">ele,attr</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="built_in">window</span>.getComputedStyle === <span class="string">"function"</span>)&#123;</div><div class="line">        <span class="keyword">return</span> getComputedStyle(ele,<span class="literal">null</span>)[attr];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> ele.currentStyle[attr];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>navigator.userAgent<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">ele,attr</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="regexp">/MSIE(6|7|8)/</span>.test(navigator.userAgent))&#123;</div><div class="line">        <span class="keyword">return</span> ele.currentStyle[attr];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">return</span> getComputedStyle(ele,<span class="literal">null</span>)[attr];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>对单位的处理<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getStyle</span>(<span class="params">ele,attr</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> val = <span class="literal">null</span>,reg = <span class="literal">null</span>;</div><div class="line">    <span class="comment">// var val = reg = null;// 这样写reg是全局的</span></div><div class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.getComputedStyle)&#123;</div><div class="line">        val = <span class="built_in">window</span>.getComputedStyle(ele,<span class="literal">null</span>)[attr];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;<span class="comment">// ie6-8</span></div><div class="line">        <span class="keyword">if</span>(attr === <span class="string">"opacity"</span>)&#123;</div><div class="line">            val = ele.currentStyle[<span class="string">"filter"</span>];<span class="comment">// alpha(opacty=10)</span></div><div class="line">            reg = <span class="regexp">/^alpha\(opacity=(\d+(?:\.\d+)?)\)$/i</span>;</div><div class="line">            val = reg.test(val) ? reg.exec(val)[<span class="number">1</span>] / <span class="number">100</span> : <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            val = ele.currentStyle[attr];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 负数、小数、单位可能出现或不出现</span></div><div class="line">    reg = <span class="regexp">/^(-?\d+(\.\d+)?)(px|pt|rem|em)?$/i</span>;</div><div class="line">    <span class="keyword">return</span> reg.test(val) ? <span class="built_in">parseFloat</span>(val) : val;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="String常用方法"><a href="#String常用方法" class="headerlink" title="String常用方法"></a>String常用方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">'yangkkk'</span>;</div><div class="line"></div><div class="line">str.length;</div><div class="line"></div><div class="line">str.charAt(<span class="number">0</span>);<span class="comment">// 获取指定索引对应的字符</span></div><div class="line"></div><div class="line">str.charCodeAt(<span class="number">0</span>);<span class="comment">// 索引位置字符对应的ASCII码值</span></div><div class="line"></div><div class="line">str.substr(n,m);<span class="comment">// 索引n(包括n)开始截取 m个 字符</span></div><div class="line"></div><div class="line">str.substring(n,m);<span class="comment">// 从索引n找到m(不包括m)处</span></div><div class="line"></div><div class="line">str.slice(n,m);<span class="comment">// 和substring()一样，支持负数作为索引，例如splice(-10)</span></div><div class="line"></div><div class="line">str.indexOf(字符);<span class="comment">// 获取指定字符在对应字符串中第一次出现的索引和charAt()相反</span></div><div class="line"></div><div class="line">lastIndexOf(字符);<span class="comment">// 获取字符在字符串中最后一次出现的位置，如果没有返回-1</span></div><div class="line"></div><div class="line">str.toLowerCase();</div><div class="line"></div><div class="line">toUpperCase();</div><div class="line"></div><div class="line">str.replace(旧字符，新字符);<span class="comment">// 配合正则使用较好</span></div><div class="line">str.replace(<span class="string">'k'</span>,<span class="string">"o"</span>).replace(<span class="string">'k'</span>,<span class="string">"o"</span>).replace(<span class="string">'k'</span>,<span class="string">"o"</span>);</div><div class="line">str.replace(<span class="regexp">/k/g</span>,<span class="string">"o"</span>);</div><div class="line"></div><div class="line">str.split(<span class="string">""</span>)<span class="comment">// 变成数组</span></div></pre></td></tr></table></figure>
<h4 id="时间转换"><a href="#时间转换" class="headerlink" title="时间转换"></a>时间转换</h4><p>主要用到String的split()方法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> time = <span class="string">"2016-12-10 12:45:3"</span>;<span class="comment">// 转成：2016年12月10日 12时45分03秒</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> arr = time.split(<span class="string">" "</span>);<span class="comment">// 字符串按空格拆分成数组</span></div><div class="line"><span class="keyword">var</span> arrLeft = arr[<span class="number">0</span>].split(<span class="string">"-"</span>);<span class="comment">// 数组中的字符串按-拆分成数组</span></div><div class="line"><span class="keyword">var</span> arrRight = arr[<span class="number">1</span>].split(<span class="string">":"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> leftStr = <span class="string">""</span>;</div><div class="line"><span class="keyword">var</span> rightStr = <span class="string">""</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> l = <span class="string">""</span>;</div><div class="line"><span class="keyword">var</span> r = <span class="string">""</span>;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arrLeft.length;i ++)&#123;</div><div class="line">    <span class="keyword">switch</span>(i)&#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">            l = <span class="string">"年"</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">            l = <span class="string">"月"</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            l = <span class="string">"日"</span>;</div><div class="line">    &#125;</div><div class="line">    leftStr += arrLeft[i] + l;</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arrRight.length;i ++)&#123;</div><div class="line">    <span class="keyword">switch</span>(i)&#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">            r = <span class="string">"时"</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">            r = <span class="string">"分"</span>;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            r = <span class="string">"秒"</span>;</div><div class="line">    &#125;</div><div class="line">    rightStr += arrRight[i] + r;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(leftStr + <span class="string">" "</span> + rightStr);</div></pre></td></tr></table></figure></p>
<h4 id="str-replace"><a href="#str-replace" class="headerlink" title="str.replace()"></a>str.replace()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">"20151213"</span>;</div><div class="line"><span class="keyword">var</span> arr = [<span class="string">"零"</span>,<span class="string">"一"</span>,<span class="string">"二"</span>,<span class="string">"三"</span>,<span class="string">"四"</span>,<span class="string">"五"</span>,<span class="string">"六"</span>,<span class="string">"七"</span>,<span class="string">"八"</span>,<span class="string">"九"</span>];</div><div class="line"></div><div class="line">str = str.replace(<span class="regexp">/\d/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">// var num = arguments[0];</span></div><div class="line">    <span class="comment">// var str = arr[num];</span></div><div class="line">    <span class="comment">// return str;</span></div><div class="line">    <span class="comment">// ["2", 0, "20151213"]// 数字，索引，str</span></div><div class="line">    <span class="keyword">return</span> arr[<span class="built_in">arguments</span>[<span class="number">0</span>]];</div><div class="line">&#125;);</div><div class="line"><span class="built_in">console</span>.log(str);</div></pre></td></tr></table></figure>
<h3 id="Array常用方法"><a href="#Array常用方法" class="headerlink" title="Array常用方法"></a>Array常用方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// push:返回新数组的长度，原来数组改变</span></div><div class="line"><span class="comment">// unshift:数组开头增加，返回改变后的长度，原来数组改变</span></div><div class="line"><span class="comment">// pop:不穿参数，删除数组最后一个，返回删除的内容，返回类型和删除内容类型一样，原来数组改变</span></div><div class="line"><span class="comment">// shift:不传参数，删除数组第一个，返回删除的内容，返回类型和删除内容类型一样，原来数组改变</span></div><div class="line"></div><div class="line"><span class="comment">// splice(n,0,x):向数组中索引为n的前面添加新的内容，返回空数组，原来数组改变</span></div><div class="line"><span class="comment">// splice(n,m):从索引n（包含n）开始删除m个元素，把删除的内容当作新的数组返回，原来数组改变</span></div><div class="line"><span class="comment">// splice(n,m,x):从索引n开始删除m个元素，用x替换删除的，把删除的内容当作新的数组返回，原来数组改变</span></div><div class="line"></div><div class="line"><span class="comment">// splice(0,0,x)   &gt;&gt;  unshift</span></div><div class="line"><span class="comment">// splice(arr.length,0,x)  &gt;&gt;  push</span></div><div class="line"><span class="comment">// splice(arr.length-1,1)  &gt;&gt;  pop</span></div><div class="line"><span class="comment">// splice(0,1) &gt;&gt;  shift</span></div><div class="line"><span class="comment">// 注意以上虽然功效一样，但返回的内容是不一样的</span></div><div class="line"></div><div class="line"><span class="comment">// slice(n,m):从索引n（包含n）开始，找到索引m处（不含m），找到内容作为一个新数组返回，原有数组不变</span></div><div class="line"><span class="comment">// slice(n):从n找到末尾</span></div><div class="line"><span class="comment">// slice(0)或slice():将原来数组原封不动的复制一份</span></div><div class="line"></div><div class="line"><span class="comment">// concat:数组与数组的拼接，例如arr1.concat(arr2)</span></div><div class="line"></div><div class="line"><span class="comment">// toString:将对象转换为字符串，把数组中每一项拿出来用逗号隔开拼接为一个字符串，原有数组不变</span></div><div class="line"></div><div class="line"><span class="comment">// join(分隔符):将对象转换为字符串，把数组中每一项拿出来用逗号隔开拼接为一个字符串，原有数组不变</span></div><div class="line"><span class="comment">// 例如实现数组所有数字相加：eval(arr.join("+"))</span></div><div class="line"></div><div class="line"><span class="comment">// reverse:返回反转后的数组，原有数组改变</span></div><div class="line"></div><div class="line"><span class="comment">// sort:排序，直接写sort只能处理10以内的数字，处理所有的传参数，是利用冒泡排序的思想实现的</span></div><div class="line"></div><div class="line"><span class="comment">// 常用但不兼容的几个方法(待续)：</span></div><div class="line"><span class="comment">// indexOf()</span></div><div class="line"><span class="comment">// forEach()</span></div><div class="line"><span class="comment">// map()</span></div><div class="line"><span class="comment">// ...</span></div></pre></td></tr></table></figure>
<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 冒泡排序：当前项和后一项进行比较，如果当前项 &gt; 后一项，两者交换位置</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>,<span class="number">10</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">4</span>];</div><div class="line"></div><div class="line"><span class="comment">// [10,12,13,8,4]</span></div><div class="line"><span class="comment">// [10,12,13,8,4]</span></div><div class="line"><span class="comment">// [10,12,8,13,4]</span></div><div class="line"><span class="comment">// [10,12,8,4,13]</span></div><div class="line"></div><div class="line"><span class="comment">// [10,12,8,4,13]</span></div><div class="line"><span class="comment">// [10,8,12,4,13]</span></div><div class="line"><span class="comment">// [10,8,4,12,13]</span></div><div class="line"></div><div class="line"><span class="comment">// [8,10,4,12,13]</span></div><div class="line"><span class="comment">// [8,4,10,12,13]</span></div><div class="line"></div><div class="line"><span class="comment">// [4,8,10,12,13]</span></div><div class="line"></div><div class="line"><span class="comment">// 每一轮都将最大的放在后面，比较arr.length - 1轮，每一轮又比较arr.length - 1 - i次</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortArr</span>(<span class="params">arr,type</span>)</span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.length - <span class="number">1</span>;i ++)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>;j &lt; arr.length - <span class="number">1</span> - i;j ++)&#123;</div><div class="line">            <span class="keyword">if</span>(arr[j] &gt; arr[j + <span class="number">1</span>])&#123;</div><div class="line">                <span class="keyword">var</span> temp = arr[j];</div><div class="line">                arr[j] = arr[j + <span class="number">1</span>];</div><div class="line">                arr[j + <span class="number">1</span>] = temp;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    type == <span class="number">1</span> ? arr.reverse() : <span class="keyword">void</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">sortArr(arr,<span class="number">1</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(arr);</div></pre></td></tr></table></figure>
<h3 id="内容排序原理"><a href="#内容排序原理" class="headerlink" title="内容排序原理"></a>内容排序原理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> oUl = <span class="built_in">document</span>.querySelector(<span class="string">"#ul1"</span>);</div><div class="line"><span class="keyword">var</span> aLi = <span class="built_in">document</span>.querySelectorAll(<span class="string">"li"</span>);</div><div class="line"></div><div class="line"><span class="comment">// 类数组转数组</span></div><div class="line"><span class="keyword">var</span> newAli = [].slice.call(aLi);</div><div class="line"><span class="comment">// 排序数组</span></div><div class="line">newAli.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">parseInt</span>(a.innerHTML) - <span class="built_in">parseInt</span>(b.innerHTML);</div><div class="line">&#125;);</div><div class="line"><span class="comment">// appendChild</span></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; newAli.length;i ++)&#123;</div><div class="line">    oUl.appendChild(newAli[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="数据类型检测的4种方式"><a href="#数据类型检测的4种方式" class="headerlink" title="数据类型检测的4种方式"></a>数据类型检测的4种方式</h3><h4 id="typeof"><a href="#typeof" class="headerlink" title="typeof"></a>typeof</h4><p>typeof返回的都是字符串，字符串中包含了对应的数据类型，例如”number”、”string”、”boolean”、”undefined”、”function”、”object”，局限性：不能细分正则、数组、null，常见应用如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 实现num2不传的时候默认0</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">num1,num2</span>)</span>&#123;</div><div class="line">    <span class="comment">// num2 = num2 || 0;// 有真即真，假如传的false这里结果也会是0</span></div><div class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> num2 === <span class="string">"undefined"</span>)&#123;<span class="comment">// 改写成这样</span></div><div class="line">        num2 = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">console</span>.log(num2);</div><div class="line">&#125;</div><div class="line">fn(<span class="number">10</span>,<span class="literal">false</span>);</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">callback</span>)</span>&#123;</div><div class="line">    <span class="comment">// callback &amp;&amp; callback();// 同真为真，有假即加，不传值的时候不至于出错</span></div><div class="line">    <span class="keyword">typeof</span> callback === <span class="string">"function"</span> ? callback() : <span class="literal">null</span>;</div><div class="line">&#125;</div><div class="line">fn(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'hello world'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="instanceof"><a href="#instanceof" class="headerlink" title="instanceof"></a>instanceof</h4><p>问题1：只能区分实例创建出来的结果是有区别的，对于字面量创建的无法判断，严格意义上来讲只有实例创建出来的结果才是标准的对象<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="number">1</span> <span class="keyword">instanceof</span> <span class="built_in">Number</span>);<span class="comment">// false</span></div><div class="line"><span class="built_in">console</span>.log(<span class="string">""</span> <span class="keyword">instanceof</span> <span class="built_in">String</span>);<span class="comment">// false</span></div><div class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> <span class="keyword">instanceof</span> <span class="built_in">Boolean</span>);<span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.log( <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1</span>) <span class="keyword">instanceof</span> <span class="built_in">Number</span> );</div><div class="line"><span class="built_in">console</span>.log( <span class="keyword">new</span> <span class="built_in">String</span>(<span class="number">1</span>) <span class="keyword">instanceof</span> <span class="built_in">String</span> );</div><div class="line"><span class="built_in">console</span>.log( <span class="keyword">new</span> <span class="built_in">Boolean</span>(<span class="literal">true</span>) <span class="keyword">instanceof</span> <span class="built_in">Boolean</span> );</div></pre></td></tr></table></figure></p>
<p>问题2：结果未必准确<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [];</div><div class="line"><span class="built_in">console</span>.log(arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>);<span class="comment">// true</span></div><div class="line"><span class="built_in">console</span>.log(arr <span class="keyword">instanceof</span> <span class="built_in">Object</span>);<span class="comment">// true</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Fn</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">Fn.prototype = <span class="keyword">new</span> <span class="built_in">Array</span>;</div><div class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> Fn;</div><div class="line"><span class="built_in">console</span>.log(f <span class="keyword">instanceof</span> <span class="built_in">Array</span>);<span class="comment">// true</span></div></pre></td></tr></table></figure></p>
<p>问题3：对于特殊的数据类型，例如null和undefined所属的类是Null和undefined，但是浏览器把这两个类保护起来了，不允许我们外部访问使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="literal">null</span> <span class="keyword">instanceof</span> Null);<span class="comment">// 报错</span></div><div class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span> <span class="keyword">instanceof</span> Undefined);</div></pre></td></tr></table></figure></p>
<h4 id="constructor-NaN"><a href="#constructor-NaN" class="headerlink" title="constructor"></a>constructor</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = [];</div><div class="line"><span class="built_in">console</span>.log(obj.constructor);<span class="comment">// function Array()&#123; ... &#125;</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> num = <span class="number">1</span>;</div><div class="line"><span class="built_in">console</span>.log(num.constructor === <span class="built_in">Number</span>);<span class="comment">// true</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> reg = <span class="regexp">/^$/</span>;</div><div class="line"><span class="built_in">console</span>.log(reg.constructor === <span class="built_in">RegExp</span>);</div><div class="line"><span class="built_in">console</span>.log(reg.constructor === <span class="built_in">Object</span>);<span class="comment">// false</span></div></pre></td></tr></table></figure>
<p>问题：发生继承时检测失败<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Fn</span>(<span class="params"></span>)</span>&#123;&#125;</div><div class="line">Fn.prototype = <span class="keyword">new</span> <span class="built_in">Array</span>;</div><div class="line"><span class="keyword">var</span> f = <span class="keyword">new</span> Fn();</div><div class="line"><span class="built_in">console</span>.log(f.constructor);<span class="comment">// Array，检测失败</span></div></pre></td></tr></table></figure></p>
<h4 id="Object-prototype-toString-call"><a href="#Object-prototype-toString-call" class="headerlink" title="Object.prototype.toString.call()"></a>Object.prototype.toString.call()</h4><p>解释：执行Object.prototype.toString方法并改变this指向<br>作用1：对于Number、String、Boolean、Array、RegExp、Date、Function原型上的toString方法都是把当前的数据类型转为字符串<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="number">1</span>).toString());<span class="comment">// Number.prototype.toString</span></div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="string">'1'</span>).toString());<span class="comment">// String.prototype.toString</span></div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="literal">true</span>).toString());</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> ([]).toString());</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="regexp">/^$/</span>).toString());</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="keyword">new</span> <span class="built_in">Date</span>()).toString());</div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> (<span class="keyword">new</span> <span class="built_in">Function</span>()).toString());</div></pre></td></tr></table></figure></p>
<p>作用2：进制转换<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log((<span class="number">128</span>).toString(<span class="number">2</span>));</div><div class="line"><span class="built_in">console</span>.log((<span class="number">128</span>).toString(<span class="number">8</span>));</div><div class="line"><span class="built_in">console</span>.log((<span class="number">128</span>).toString(<span class="number">10</span>));</div></pre></td></tr></table></figure></p>
<p>作用3：返回当前方法的执行主体（this）所属类的详细信息<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 例如下面：执行主体是&#123;name:"yangk"&#125;，所属类的详细信息"[object Object]"，第一个小写的object代表当前对象是对象数据类型的，第二个Object代表的是obj是Object这个类的一个实例，即obj所属的类是Object</span></div><div class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">name</span>:<span class="string">"yangk"</span>&#125;;</div><div class="line"><span class="built_in">console</span>.log( obj.toString() );</div><div class="line"><span class="built_in">console</span>.log( <span class="built_in">Math</span>.toString() );<span class="comment">// "[object Math]"，toString中的this是谁，返回的就是谁所属类的信息"[object Math]"</span></div></pre></td></tr></table></figure></p>
<p>案例实战<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [];</div><div class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(arr));<span class="comment">// [object Array]</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(&#123;&#125;.toString.call(<span class="number">1</span>));<span class="comment">// 这种写法和上面一样,&#123;&#125;找到也是Object.prototype.toString</span></div><div class="line"><span class="built_in">console</span>.log(&#123;&#125;.toString.call(<span class="literal">null</span>));</div><div class="line"><span class="built_in">console</span>.log(&#123;&#125;.toString.call(<span class="literal">undefined</span>));</div><div class="line"></div><div class="line"><span class="keyword">if</span>(<span class="built_in">Object</span>.prototype.toString.call(arr) === <span class="string">"[object Array]"</span>)&#123; ... &#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [];</div><div class="line"><span class="keyword">var</span> reg = <span class="regexp">/^\[object Array\]$/</span>;</div><div class="line"><span class="keyword">if</span>(reg.test(<span class="built_in">Object</span>.prototype.toString.call(arr)))&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'这是一个数组！'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 无区别</span></div><div class="line"><span class="keyword">var</span> obj = &#123;&#125;;</div><div class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</div><div class="line"></div><div class="line"><span class="comment">// 有区别</span></div><div class="line"><span class="keyword">var</span> num = <span class="number">1</span>;<span class="comment">// 基本，nun instanceof Number &gt;&gt; false</span></div><div class="line"><span class="keyword">var</span> num = <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">1</span>);<span class="comment">// 对象，num instanceof Number &gt;&gt; true</span></div><div class="line"></div><div class="line"><span class="built_in">Object</span>.prototype.aaa = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"bbb"</span>);</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">"aaa"</span></div><div class="line">&#125;;</div><div class="line">obj.aaa();<span class="comment">// obj.__proto__.aaa();</span></div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;<span class="comment">// 能遍历私有和自己写的公有的</span></div><div class="line">    <span class="built_in">console</span>.log(obj[key]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 是否可枚举，私有true，公有false</span></div><div class="line"><span class="built_in">console</span>.log(obj.propertyIsEnumerable(<span class="string">"name"</span>));<span class="comment">// true</span></div><div class="line"><span class="built_in">console</span>.log(obj.propertyIsEnumerable(<span class="string">"aaa"</span>));<span class="comment">// false</span></div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</div><div class="line">    <span class="comment">// if(obj.propertyIsEnumerable(key))&#123;</span></div><div class="line">    <span class="comment">//     console.log(key + "...");</span></div><div class="line">    <span class="comment">// &#125;</span></div><div class="line">    <span class="keyword">if</span>(obj.hasOwnProperty(key))&#123;</div><div class="line">        <span class="built_in">console</span>.log(key + <span class="string">"..."</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p>JSON是一种数据格式，主要用于前后台交互时作为数据的载体<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [</div><div class="line">    &#123;<span class="string">"name"</span>:<span class="string">"yangk"</span>&#125;,</div><div class="line">    &#123;<span class="string">"age"</span>:<span class="string">"24"</span>&#125;</div><div class="line">];</div><div class="line"><span class="comment">// 把JSON格式的数组转换为JSON格式的字符串</span></div><div class="line"><span class="keyword">var</span> str = <span class="built_in">window</span>.JSON.stringify(arr);<span class="comment">// 转为JSON格式的字符串，window可不加</span></div><div class="line"></div><div class="line"><span class="comment">// 把JSON格式的字符串转换为JSON格式的数组/对象</span></div><div class="line"><span class="keyword">var</span> jsonArr = <span class="built_in">JSON</span>.parse(str);</div><div class="line"><span class="built_in">console</span>.log(jsonArr);<span class="comment">// 数组格式的</span></div><div class="line"></div><div class="line"><span class="comment">// ie6-7不兼容JSON，可以下面方法实现</span></div><div class="line"><span class="keyword">var</span> str = <span class="string">'[&#123;"name":"yangk"&#125;,&#123;"age":"24"&#125;]'</span>;</div><div class="line"><span class="keyword">var</span> jsonArr = <span class="built_in">eval</span>(<span class="string">"("</span>+ str +<span class="string">")"</span>);</div><div class="line"><span class="built_in">console</span>.log(jsonArr <span class="keyword">instanceof</span> <span class="built_in">Array</span>);</div></pre></td></tr></table></figure></p>
<h3 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h3><p>一个基本的AJAX<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</div><div class="line">xhr.open(<span class="string">"get"</span>,<span class="string">"data.txt"</span>,<span class="literal">true</span>);</div><div class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>)&#123;</div><div class="line">        <span class="keyword">var</span> data = xhr.responseText;</div><div class="line">        <span class="built_in">document</span>.body.innerHTML = data;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">xhr.send();</div></pre></td></tr></table></figure></p>
<p>关于JSONP<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 1、JSONP需要获取数据的服务器端做支持</span></div><div class="line"><span class="comment">// 2、原理：利用script标签的特性</span></div><div class="line"><span class="comment">// 3、把当前页面中的一个函数当作参数传递给服务器(url?callback=fn)，服务器返回'fn([&#123;"name":"aaa"&#125;])'</span></div><div class="line"><span class="comment">// 4、客户端让fn执行，fn中的参数就是我们想要的数据</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(data);</div><div class="line">&#125;</div><div class="line">&lt;script src=<span class="string">"http://matchweb.sports.qq.com/kbs/calendar?columnId=100000&amp;callback=fn"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure></p>
<p>关于JQUERY中的AJAX<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">url</span>: <span class="string">"data.txt"</span>,</div><div class="line">    <span class="attr">type</span>: <span class="string">"get"</span>,</div><div class="line">    <span class="attr">dataType</span>: <span class="string">"json"</span>,</div><div class="line">    <span class="attr">data</span>: <span class="literal">null</span>,<span class="comment">// post方式传输时放数据</span></div><div class="line">    <span class="keyword">async</span>: <span class="literal">true</span>,<span class="comment">// 异步</span></div><div class="line">    cache: <span class="literal">false</span>,<span class="comment">// 不要缓存，自动会在请求地址的url末尾加参数，默认走缓存</span></div><div class="line">    timeout: <span class="number">3000</span>,<span class="comment">// 超过3秒不成功走error</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(data);<span class="comment">// 不指定dataType的情况下是string</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>JQUERY中的JSONP：都是GET和异步请求<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">    <span class="attr">url</span>: <span class="string">"http://matchweb.sports.qq.com/kbs/calendar?columnId=100000"</span>,</div><div class="line">    <span class="attr">jsonpCallback</span>: <span class="string">"fn"</span>,<span class="comment">// 指定函数名fn，不指定就是随机的</span></div><div class="line">    jsonp: <span class="string">"cb"</span>,<span class="comment">// cb代替callback</span></div><div class="line">    dataType: <span class="string">"jsonp"</span>,</div><div class="line">    <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(data);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h3 id="表单事件"><a href="#表单事件" class="headerlink" title="表单事件"></a>表单事件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;input type=<span class="string">"number"</span> disabled id=<span class="string">"number"</span> value=<span class="string">"15"</span>&gt;</div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">id</span>=<span class="string">"range"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"65"</span> <span class="attr">step</span>=<span class="string">"1"</span> <span class="attr">value</span>=<span class="string">"15"</span>&gt;</span></span></div><div class="line">var oRange = document.getElementById("range");</div><div class="line">var oNumber = document.getElementById("number");</div><div class="line">oRange.oninput = function()&#123;</div><div class="line">    number.value = this.value;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> submit = <span class="built_in">document</span>.getElementById(<span class="string">"submit"</span>);</div><div class="line"><span class="keyword">var</span> sexMan = <span class="built_in">document</span>.getElementById(<span class="string">"sexMan"</span>);</div><div class="line"><span class="keyword">var</span> sexWoman = <span class="built_in">document</span>.getElementById(<span class="string">"sexWoMan"</span>);</div><div class="line">submit.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> sexType = <span class="number">0</span>;</div><div class="line">    !sexMan.checked ? sexType = <span class="number">1</span> : <span class="literal">null</span>;<span class="comment">// 默认sexman.checked为true，选中女时sexMan.checked为false</span></div><div class="line">    </div><div class="line">&#125;;</div><div class="line"><span class="comment">/*sexMan.onclick = sexWoman.onclick = function()&#123;</span></div><div class="line">    console.log(this.value);</div><div class="line">&#125;;*/</div><div class="line">sexMan.onchange = sexWoman.onchange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 表单事件的正确姿势</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h3 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h3><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 把信息存储到客户端浏览器中，服务器端也可以获取到</span></div><div class="line"><span class="built_in">document</span>.cookie = <span class="string">"age=7"</span>;</div><div class="line"><span class="built_in">escape</span>(str);<span class="comment">// 编码</span></div><div class="line"><span class="built_in">unescape</span>(str);<span class="comment">// 解码</span></div><div class="line"></div><div class="line"><span class="comment">// cookie常用在：记住用户名密码；用户的部分信息，例如登陆信息；购物车；少量信息且对浏览器兼容要求高的...</span></div><div class="line">localStorage常用在：某一个JS或CSS的源代码；一些不需要经常更新的数据，存储的时候可以设置一个时间，刷新页面时，判断当前时间是否超过页面设置的时间，若超过，重新获取，没超则使用本地的。</div><div class="line"></div><div class="line"><span class="comment">// 本地存储都是明文存储，需要加密</span></div></pre></td></tr></table></figure>
<h4 id="session"><a href="#session" class="headerlink" title="session"></a>session</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 把信息存储到服务器上</span></div></pre></td></tr></table></figure>
<h4 id="localStorage"><a href="#localStorage" class="headerlink" title="localStorage"></a>localStorage</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 永久存储到本地</span></div><div class="line">localStorage.setItem(<span class="string">'age'</span>,<span class="number">7</span>);<span class="comment">// 存，是字符串格式的</span></div><div class="line">localStorage.setItem(<span class="string">'person1'</span>,<span class="built_in">JSON</span>.stringify(&#123;<span class="attr">name</span>: <span class="string">"yangk"</span>&#125;));</div><div class="line">localStorage.getItem(<span class="string">'person1'</span>);<span class="comment">// 取，返回的也是字符串类型的</span></div><div class="line">localStorage.removeItem(<span class="string">'age'</span>);<span class="comment">// 删对应</span></div><div class="line">localStorage.clear();<span class="comment">// 当前资源下所有的存储记录都移除掉</span></div><div class="line">localStorage.length;<span class="comment">// 存储的条数</span></div><div class="line">localStorage.key(<span class="number">0</span>);<span class="comment">// 获取索引为0的那一条</span></div></pre></td></tr></table></figure>
<h4 id="sessionStorage"><a href="#sessionStorage" class="headerlink" title="sessionStorage"></a>sessionStorage</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 会话窗口关闭时消失</span></div></pre></td></tr></table></figure>
<h3 id="中文排序"><a href="#中文排序" class="headerlink" title="中文排序"></a>中文排序</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> arr = [</div><div class="line">    &#123;<span class="attr">name</span>: <span class="string">"菜花"</span>,<span class="attr">age</span>: <span class="number">24</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>: <span class="string">"狗蛋"</span>,<span class="attr">age</span>: <span class="number">30</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>: <span class="string">"美丽"</span>,<span class="attr">age</span>: <span class="number">21</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>: <span class="string">"郑红"</span>,<span class="attr">age</span>: <span class="number">38</span>&#125;,</div><div class="line">    &#123;<span class="attr">name</span>: <span class="string">"拴住"</span>,<span class="attr">age</span>: <span class="number">17</span>&#125;</div><div class="line">];</div><div class="line">arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> a.name.localeCompare(b.name);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="JS中的异步"><a href="#JS中的异步" class="headerlink" title="JS中的异步"></a>JS中的异步</h3><p>同步：没有完成之前，绝对不会做下一件事情<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(<span class="string">"ok"</span>);<span class="comment">// 永远都不会执行</span></div></pre></td></tr></table></figure></p>
<p>常见异步形式：定时器、事件绑定、Ajax读取数据的时候一般设置为异步、回调函数<br>例一：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</div><div class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    n ++;</div><div class="line">    <span class="built_in">console</span>.log(n);<span class="comment">// 再1</span></div><div class="line">&#125;,<span class="number">1000</span>);</div><div class="line"><span class="built_in">console</span>.log(n);<span class="comment">// 先0</span></div></pre></td></tr></table></figure></p>
<p>例二：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 浏览器对于定时器都有一个最小等待时间，如果设置时间小于等待时间则设置时间不起作用</span></div><div class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</div><div class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    n ++;</div><div class="line">    <span class="built_in">console</span>.log(n);<span class="comment">// 再1</span></div><div class="line">&#125;,<span class="number">0</span>);</div><div class="line"><span class="built_in">console</span>.log(n);<span class="comment">// 先0</span></div></pre></td></tr></table></figure></p>
<p>例三：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</div><div class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    n ++;</div><div class="line">    <span class="built_in">console</span>.log(n);<span class="comment">// 下面没结束这里永远不执行</span></div><div class="line">&#125;,<span class="number">0</span>);</div><div class="line"><span class="comment">// 定时器设置的时间不一定就是等待执行的时间，如果定时器之后还有其他的事情等待处理，不管定时器的时间有没有到，都是不会执行定时器的</span></div><div class="line"><span class="built_in">console</span>.log(n);<span class="comment">// 输出一次0，下面就卡死了</span></div><div class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">    n ++;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(n);<span class="comment">// 不执行</span></div></pre></td></tr></table></figure></p>
<p>例四：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 谁时间短执行谁，时间一样按先后顺序</span></div><div class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</div><div class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    n += <span class="number">2</span>;</div><div class="line">    <span class="built_in">console</span>.log(n);<span class="comment">// 7第四次</span></div><div class="line">&#125;,<span class="number">7</span>);</div><div class="line"></div><div class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    n += <span class="number">5</span>;</div><div class="line">    <span class="built_in">console</span>.log(n);<span class="comment">// 5第三次</span></div><div class="line">&#125;,<span class="number">5</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(n);<span class="comment">// 0第一次</span></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">10000000</span>;i++)&#123;<span class="comment">// 即便这里执行时间大于7毫秒也不会先执行上面的</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(n);<span class="comment">// 0第二次</span></div></pre></td></tr></table></figure></p>
<p>例五：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt;aLi.length;i++)&#123;</div><div class="line">    aLi[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="comment">// 异步编程：一点上面的就循环完了，爱我所爱不等待</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="题目-技巧"><a href="#题目-技巧" class="headerlink" title="题目/技巧"></a>题目/技巧</h3><h4 id="求值"><a href="#求值" class="headerlink" title="求值"></a>求值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++)&#123;</div><div class="line">    <span class="keyword">if</span>(i &lt;= <span class="number">5</span>)&#123;</div><div class="line">        i += <span class="number">1</span>;</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        i += <span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(i);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> j = <span class="number">0</span>;</div><div class="line"><span class="keyword">while</span>(j &lt; <span class="number">5</span>)&#123;</div><div class="line">    <span class="keyword">if</span>(j &lt;= <span class="number">5</span>)&#123;</div><div class="line">        j += <span class="number">1</span>;</div><div class="line">        j ++;</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        j += <span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(j);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">10</span>;i ++)&#123;<span class="comment">// 5 ++</span></div><div class="line">    <span class="keyword">if</span>(i &lt;= <span class="number">5</span>)&#123;</div><div class="line">        i += <span class="number">2</span>;</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    &#125;</div><div class="line">    i += <span class="number">3</span>;</div><div class="line">    <span class="keyword">break</span>;</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(i);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> i = <span class="number">10</span>;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(n + (++ i));</div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> f = fn();</div><div class="line">f(<span class="number">10</span>);<span class="comment">// 21</span></div><div class="line">f(<span class="number">20</span>);<span class="comment">// 32</span></div><div class="line">fn()(<span class="number">10</span>);<span class="comment">// 21</span></div><div class="line">fn()(<span class="number">20</span>);<span class="comment">// 31</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">i</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(n + i ++);<span class="comment">// 先执行i ++</span></div><div class="line">    &#125;;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> f = fn(<span class="number">13</span>);</div><div class="line">f(<span class="number">12</span>);<span class="comment">// 25</span></div><div class="line">f(<span class="number">14</span>);<span class="comment">// 28</span></div><div class="line">fn(<span class="number">15</span>)(<span class="number">12</span>);<span class="comment">// 27</span></div><div class="line">fn(<span class="number">16</span>)(<span class="number">13</span>);<span class="comment">// 29</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> num = <span class="number">20</span>;</div><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">    <span class="attr">num</span>: <span class="number">30</span>,</div><div class="line">    <span class="attr">fn</span>: (<span class="function"><span class="keyword">function</span>(<span class="params">num</span>)</span>&#123;<span class="comment">// fn是自执行函数的返回结果，即return后面的函数</span></div><div class="line">        <span class="keyword">this</span>.num *= <span class="number">3</span>;<span class="comment">// 自执行函数的this永远是window，所以window下的num = 60</span></div><div class="line">        num += <span class="number">15</span>;<span class="comment">// 35</span></div><div class="line">        <span class="keyword">var</span> num = <span class="number">45</span>;<span class="comment">// 形参已经有了就不重新声明了，直接等于45</span></div><div class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.num *= <span class="number">4</span>;<span class="comment">// this是window，结果是240</span></div><div class="line">            num += <span class="number">20</span>;<span class="comment">// 上级作用域45 + 20 = 65</span></div><div class="line">            <span class="built_in">console</span>.log(num);</div><div class="line">        &#125;;</div><div class="line">    &#125;)(num)<span class="comment">// 20</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> fn = obj.fn;<span class="comment">// return的函数</span></div><div class="line">fn();<span class="comment">// 65</span></div><div class="line"><span class="comment">// fn();// 85</span></div><div class="line">obj.fn();<span class="comment">// 85，这里执行后上面this.num *= 4结果是120</span></div><div class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.num,obj.num);<span class="comment">// 240,120</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> number = <span class="number">2</span>;</div><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">    <span class="attr">number</span>: <span class="number">4</span>,</div><div class="line">    <span class="attr">fn1</span>: (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">this</span>.number *= <span class="number">2</span>;<span class="comment">// 闭包形式的this &gt;&gt; window</span></div><div class="line">        number = number * <span class="number">2</span>;<span class="comment">// 只声明没定义undefined * 2</span></div><div class="line">        <span class="built_in">console</span>.log(number);<span class="comment">// NaN</span></div><div class="line">        <span class="keyword">var</span> number = <span class="number">3</span>;</div><div class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// return 给fn1，必包有return不销毁</span></div><div class="line">            <span class="keyword">this</span>.number *= <span class="number">2</span>;<span class="comment">// this &gt;&gt; window 8</span></div><div class="line">            number *= <span class="number">3</span>;<span class="comment">// 找没有销毁的必包中的变量 9</span></div><div class="line">            alert(number);<span class="comment">// </span></div><div class="line">        &#125;<span class="comment">// 这个匿名方法返回这个函数，fn1最终就是这个函数</span></div><div class="line">    &#125;)()<span class="comment">// 这个匿名函数运行就是一个必包</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> fn1 = obj.fn1;<span class="comment">// NaN</span></div><div class="line">alert(number);<span class="comment">// 4</span></div><div class="line">fn1();<span class="comment">// 9.........window</span></div><div class="line"></div><div class="line">obj.fn1(); <span class="comment">// 27............obj</span></div><div class="line">alert(<span class="built_in">window</span>.number);<span class="comment">// 8</span></div><div class="line">alert(obj.number);<span class="comment">// 8</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 注意1和2位置切换后的结果是不一样的</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>)</span>&#123;</div><div class="line">&#125;</div><div class="line">Person.prototype = &#123;<span class="comment">// 1</span></div><div class="line">    <span class="keyword">constructor</span>: Person,</div><div class="line">    name: "yangk",</div><div class="line">    showName: function()&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> person1 = <span class="keyword">new</span> Person();<span class="comment">// 2</span></div><div class="line">person1.showName();</div></pre></td></tr></table></figure>
<h4 id="typeof-1"><a href="#typeof-1" class="headerlink" title="typeof"></a>typeof</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="keyword">typeof</span> <span class="keyword">typeof</span> []);</div></pre></td></tr></table></figure>
<h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">num &gt; <span class="number">0</span> ? <span class="built_in">console</span>.log(<span class="string">"yes"</span>) : <span class="keyword">void</span> <span class="number">0</span>;<span class="comment">// 不符合条件又没内容返回时可以这样写就是返回undefined</span></div></pre></td></tr></table></figure>
<h4 id="for-in循环顺序问题"><a href="#for-in循环顺序问题" class="headerlink" title="for in循环顺序问题"></a>for in循环顺序问题</h4><p>for in循环的顺序问题：首先循环数字的属性名(从小到大)，再按我们写的顺序循环其他的<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> obj = &#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">"yangk"</span>,</div><div class="line">    <span class="attr">age</span>: <span class="number">25</span>,</div><div class="line">    <span class="number">1</span>: <span class="number">10086</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj)&#123;</div><div class="line">    <span class="built_in">console</span>.log(obj[key]);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="JS中的6个假值"><a href="#JS中的6个假值" class="headerlink" title="JS中的6个假值"></a>JS中的6个假值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="literal">false</span>、<span class="literal">null</span>、<span class="literal">undefined</span>、<span class="number">0</span>、<span class="string">""</span>、<span class="literal">NaN</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JavaScript学习中一些零碎笔记，持续更新…&lt;br&gt;
    
    </summary>
    
      <category term="JS" scheme="http://wwww.yesokiloveyou.com/categories/JS/"/>
    
    
      <category term="JS基础知识" scheme="http://wwww.yesokiloveyou.com/tags/JS%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>React初探</title>
    <link href="http://wwww.yesokiloveyou.com/2016/11/23/note-react/"/>
    <id>http://wwww.yesokiloveyou.com/2016/11/23/note-react/</id>
    <published>2016-11-23T13:29:01.000Z</published>
    <updated>2017-01-10T13:09:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一个React程序"><a href="#第一个React程序" class="headerlink" title="第一个React程序"></a>第一个React程序</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React 核心库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React DOM 库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Babel 编译器，将 JSX 变成 JavaScript --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> destination = <span class="built_in">document</span>.querySelector(<span class="string">"#container"</span>);</div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>,</div><div class="line">        destination</div><div class="line">    );</div><div class="line">    <span class="comment">/*ReactDOM.render(React.createElement(</span></div><div class="line">        "h1",</div><div class="line">        null,</div><div class="line">        "Hello World"</div><div class="line">    ), destination);*/</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React 核心库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React DOM 库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Babel 编译器，将 JSX 变成 JavaScript --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="xml"></span></div><div class="line">    &#123;/* 定义 */&#125;</div><div class="line">    var HelloWorld = React.createClass(&#123;</div><div class="line">        render: function() &#123;</div><div class="line">            return (</div><div class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello, &#123;this.props.greetTarget&#125;!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            &#123;/* 调用 */&#125;</div><div class="line">            <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">greetTarget</span>=<span class="string">"Batman"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">greetTarget</span>=<span class="string">"Iron Man"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">greetTarget</span>=<span class="string">"Nicolas Cage"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">greetTarget</span>=<span class="string">"Mega Man"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">greetTarget</span>=<span class="string">"Bono"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">HelloWorld</span> <span class="attr">greetTarget</span>=<span class="string">"Catwoman"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</div><div class="line">        document.querySelector("#container")</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在组件调用中也可以放子元素<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React 核心库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React DOM 库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Babel 编译器，将 JSX 变成 JavaScript --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> Buttonify = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#123;this.props.behavior&#125;</span>&gt;</span>&#123;this.props.children&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);   </div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">            <span class="tag">&lt;<span class="name">Buttonify</span> <span class="attr">behavior</span>=<span class="string">"Submit"</span>&gt;</span>SEND DATA<span class="tag">&lt;/<span class="name">Buttonify</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</div><div class="line">        <span class="built_in">document</span>.querySelector(<span class="string">"#container"</span>)</div><div class="line">    );    </div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="React中设置样式"><a href="#React中设置样式" class="headerlink" title="React中设置样式"></a>React中设置样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React 核心库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React DOM 库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Babel 编译器，将 JSX 变成 JavaScript --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> Letter = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> letterStyle = &#123;</div><div class="line">              <span class="attr">padding</span>: <span class="number">10</span>,</div><div class="line">              <span class="attr">margin</span>: <span class="number">10</span>,</div><div class="line">              <span class="attr">backgroundColor</span>: <span class="keyword">this</span>.props.bgcolor,</div><div class="line">              <span class="attr">color</span>: <span class="string">"#333"</span>,</div><div class="line">              <span class="attr">display</span>: <span class="string">"inline-block"</span>,</div><div class="line">              <span class="attr">fontFamily</span>: <span class="string">"monospace"</span>,</div><div class="line">              <span class="attr">fontSize</span>: <span class="string">"32px"</span>,</div><div class="line">              <span class="attr">textAlign</span>: <span class="string">"center"</span></div><div class="line">            &#125;;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;letterStyle&#125;</span>&gt;</span></span></div><div class="line">                    &#123;this.props.children&#125;</div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> destination = <span class="built_in">document</span>.querySelector(<span class="string">"#container"</span>);</div><div class="line"></div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">            <span class="tag">&lt;<span class="name">Letter</span> <span class="attr">bgcolor</span>=<span class="string">"red"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">Letter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Letter</span> <span class="attr">bgcolor</span>=<span class="string">"green"</span>&gt;</span>E<span class="tag">&lt;/<span class="name">Letter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Letter</span> <span class="attr">bgcolor</span>=<span class="string">"blue"</span>&gt;</span>I<span class="tag">&lt;/<span class="name">Letter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Letter</span> <span class="attr">bgcolor</span>=<span class="string">"black"</span>&gt;</span>O<span class="tag">&lt;/<span class="name">Letter</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">Letter</span> <span class="attr">bgcolor</span>=<span class="string">"pink"</span>&gt;</span>U<span class="tag">&lt;/<span class="name">Letter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</div><div class="line">        destination</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="创建复杂的组件"><a href="#创建复杂的组件" class="headerlink" title="创建复杂的组件"></a>创建复杂的组件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React 核心库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- React DOM 库 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- Babel 编译器，将 JSX 变成 JavaScript --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="xml"></span></div><div class="line">    var Card = React.createClass(&#123;</div><div class="line">        render: function() &#123;</div><div class="line">            var cardStyle = &#123;</div><div class="line">                height: 200,</div><div class="line">                width: 150,</div><div class="line">                padding: 0,</div><div class="line">                backgroundColor: "#FFF",</div><div class="line">                WebkitFilter: "drop-shadow(0px 0px 5px #666)",</div><div class="line">                filter: "drop-shadow(0px 0px 5px #666)"</div><div class="line">            &#125;;</div><div class="line"></div><div class="line">            return (</div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;cardStyle&#125;</span>&gt;</span></div><div class="line">                    &#123;/* 组件内部也可以调用组件 */&#125;</div><div class="line">                    &#123;/* 一级一级的向上找 */&#125;</div><div class="line">                    <span class="tag">&lt;<span class="name">Square</span> <span class="attr">color</span>=<span class="string">&#123;this.props.color&#125;/</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">Label</span> <span class="attr">color</span>=<span class="string">&#123;this.props.color&#125;/</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    &#123;/* 上 */&#125;</div><div class="line">    var Square = React.createClass(&#123;</div><div class="line">        render: function() &#123;</div><div class="line">            &#123;/* 一级一级的向上找 */&#125;</div><div class="line">            var squareStyle = &#123;</div><div class="line">                height: 150,</div><div class="line">                backgroundColor: this.props.color</div><div class="line">            &#125;;</div><div class="line">            return(</div><div class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;squareStyle&#125;</span>&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    &#123;/* 下 */&#125;</div><div class="line">    var Label = React.createClass(&#123;</div><div class="line">        render: function() &#123;</div><div class="line">            var labelStyle = &#123;</div><div class="line">                fontFamily: "sans-serif",</div><div class="line">                fontWeight: "bold",</div><div class="line">                padding: 13,</div><div class="line">                margin: 0</div><div class="line">            &#125;;</div><div class="line">            &#123;/* 一级一级的向上找 */&#125;</div><div class="line">            return (</div><div class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;labelStyle&#125;</span>&gt;</span>&#123;this.props.color&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            &#123;/* 夷，找到啦 */&#125;</div><div class="line">            <span class="tag">&lt;<span class="name">Card</span> <span class="attr">color</span>=<span class="string">"#FF6663"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</div><div class="line">        document.querySelector("#container")</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="传递属性"><a href="#传递属性" class="headerlink" title="传递属性"></a>传递属性</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> Display = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            &#123;<span class="comment">/* 返回真正结果 */</span>&#125;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;this.props.color&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;this.props.num&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;this.props.size&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> Label = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            &#123;<span class="comment">/* 调用 Display */</span>&#125;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                &lt;Display &#123;...this.props&#125;/&gt;</div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    var Shirt = React.createClass(&#123;</div><div class="line">        render: function() &#123;</div><div class="line">            &#123;/* 调用 Label */&#125;</div><div class="line">            return (</div><div class="line">                &lt;Label &#123;...this.props&#125;/&gt;</div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    ReactDOM.render(</div><div class="line">        &lt;div&gt;</div><div class="line">            &#123;/* 调用 Shirt */&#125;</div><div class="line">            &lt;Shirt color="steelblue" num="3.14" size="medium" /&gt;</div><div class="line">        &lt;/div&gt;,</div><div class="line">        document.querySelector("#container")</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="处理状态"><a href="#处理状态" class="headerlink" title="处理状态"></a>处理状态</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> LightningCounter = React.createClass(&#123;</div><div class="line">        <span class="attr">getInitialState</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">                <span class="attr">strikes</span>: <span class="number">0</span></div><div class="line">            &#125;;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">timerTick</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            &#123;<span class="comment">/* 调用 setState 并更新 state 对象中一些东西，render 方法也会被自动调用 */</span>&#125;</div><div class="line">            <span class="keyword">this</span>.setState(&#123;</div><div class="line">                <span class="attr">strikes</span>: <span class="keyword">this</span>.state.strikes + <span class="number">100</span></div><div class="line">            &#125;);</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">componentDidMount</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            &#123;<span class="comment">/* componentDidMount 方法在 React 组件渲染以后将被自动调用 */</span>&#125;</div><div class="line">            setInterval(<span class="keyword">this</span>.timerTick, <span class="number">1000</span>);</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;this.state.strikes&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> LightningCounterDisplay = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> divStyle = &#123;</div><div class="line">                <span class="attr">width</span>: <span class="number">250</span>,</div><div class="line">                <span class="attr">textAlign</span>: <span class="string">"center"</span>,</div><div class="line">                <span class="attr">backgroundColor</span>: <span class="string">"black"</span>,</div><div class="line">                <span class="attr">padding</span>: <span class="number">40</span>,</div><div class="line">                <span class="attr">fontFamily</span>: <span class="string">"sans-serif"</span>,</div><div class="line">                <span class="attr">color</span>: <span class="string">"#999"</span>,</div><div class="line">                <span class="attr">borderRadius</span>: <span class="number">10</span></div><div class="line">            &#125;;</div><div class="line"></div><div class="line">            <span class="keyword">return</span>(</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;divStyle&#125;</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">LightningCounter</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="xml"><span class="tag">&lt;<span class="name">LightningCounterDisplay</span>/&gt;</span></span>,</div><div class="line">        <span class="built_in">document</span>.querySelector(<span class="string">"#container"</span>)</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="从数据到UI"><a href="#从数据到UI" class="headerlink" title="从数据到UI"></a>从数据到UI</h3><p>显示一个圆<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> Circle = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> circleStyle = &#123;</div><div class="line">                <span class="attr">padding</span>: <span class="number">10</span>,</div><div class="line">                <span class="attr">margin</span>: <span class="number">20</span>,</div><div class="line">                <span class="attr">display</span>: <span class="string">"inline-block"</span>,</div><div class="line">                <span class="attr">backgroundColor</span>: <span class="keyword">this</span>.props.bgcolor,</div><div class="line">                <span class="attr">borderRadius</span>: <span class="string">"50%"</span>,</div><div class="line">                <span class="attr">width</span>: <span class="number">100</span>,</div><div class="line">                <span class="attr">height</span>: <span class="number">100</span>,</div><div class="line">            &#125;;</div><div class="line"></div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;circleStyle&#125;</span>&gt;</span></span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> destination = <span class="built_in">document</span>.querySelector(<span class="string">"#container"</span>);</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showCircle</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> colors = [<span class="string">"#393E41"</span>, <span class="string">"#E94F37"</span>, <span class="string">"#1C89BF"</span>, <span class="string">"#A1D363"</span>];</div><div class="line">        <span class="keyword">var</span> ran = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * colors.length);</div><div class="line">        <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Circle</span> <span class="attr">bgcolor</span>=<span class="string">&#123;colors[ran]&#125;/</span>&gt;</span>;</span></div><div class="line">    &#125;;</div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            &#123;showCircle()&#125;</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</div><div class="line">        destination</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>显示多个圆<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> Circle = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> circleStyle = &#123;</div><div class="line">                <span class="attr">padding</span>: <span class="number">10</span>,</div><div class="line">                <span class="attr">margin</span>: <span class="number">20</span>,</div><div class="line">                <span class="attr">display</span>: <span class="string">"inline-block"</span>,</div><div class="line">                <span class="attr">backgroundColor</span>: <span class="keyword">this</span>.props.bgcolor,</div><div class="line">                <span class="attr">borderRadius</span>: <span class="string">"50%"</span>,</div><div class="line">                <span class="attr">width</span>: <span class="number">100</span>,</div><div class="line">                <span class="attr">height</span>: <span class="number">100</span>,</div><div class="line">            &#125;;</div><div class="line"></div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;circleStyle&#125;</span>&gt;</span></span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> destination = <span class="built_in">document</span>.querySelector(<span class="string">"#container"</span>);</div><div class="line">    <span class="keyword">var</span> colors = [<span class="string">"#393E41"</span>, <span class="string">"#E94F37"</span>, <span class="string">"#1C89BF"</span>, <span class="string">"#A1D363"</span>,</div><div class="line">              <span class="string">"#85FFC7"</span>, <span class="string">"#297373"</span>, <span class="string">"#FF8552"</span>, <span class="string">"#A40E4C"</span>];</div><div class="line"></div><div class="line">    <span class="keyword">var</span> renderData = [];</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; colors.length; i++) &#123;</div><div class="line">        <span class="keyword">var</span> color = colors[i];</div><div class="line">        <span class="comment">// React 可以用这个唯一的标识符来优化任何将来的 UI 更新</span></div><div class="line">        renderData.push(<span class="xml"><span class="tag">&lt;<span class="name">Circle</span> <span class="attr">key</span>=<span class="string">&#123;i</span> + <span class="attr">color</span>&#125; <span class="attr">bgcolor</span>=<span class="string">&#123;color&#125;/</span>&gt;</span>);</span></div><div class="line">    &#125;</div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            &#123;renderData&#125;</div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</div><div class="line">        destination</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="React中的事件"><a href="#React中的事件" class="headerlink" title="React中的事件"></a>React中的事件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> destination = <span class="built_in">document</span>.querySelector(<span class="string">"#container"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> Counter = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> textStyle = &#123;</div><div class="line">                <span class="attr">fontSize</span>: <span class="number">72</span>,</div><div class="line">                <span class="attr">fontFamily</span>: <span class="string">"sans-serif"</span>,</div><div class="line">                <span class="attr">color</span>: <span class="string">"#333"</span>,</div><div class="line">                <span class="attr">fontWeight</span>: <span class="string">"bold"</span></div><div class="line">            &#125;;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;textStyle&#125;</span>&gt;</span></span></div><div class="line">                    &#123;this.props.display&#125;</div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> CounterParent = React.createClass(&#123;</div><div class="line">        <span class="attr">getInitialState</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">                <span class="attr">count</span>: <span class="number">0</span></div><div class="line">            &#125;;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">increase</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> currentCount = <span class="keyword">this</span>.state.count;</div><div class="line">            <span class="keyword">if</span>(e.shiftKey)&#123;</div><div class="line">                currentCount += <span class="number">10</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                currentCount += <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">this</span>.setState(&#123;</div><div class="line">                <span class="attr">count</span>:  currentCount</div><div class="line">            &#125;);</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> backgroundStyle = &#123;</div><div class="line">                <span class="attr">padding</span>: <span class="number">50</span>,</div><div class="line">                <span class="attr">backgroundColor</span>: <span class="string">"#FFC53A"</span>,</div><div class="line">                <span class="attr">width</span>: <span class="number">250</span>,</div><div class="line">                <span class="attr">height</span>: <span class="number">100</span>,</div><div class="line">                <span class="attr">borderRadius</span>: <span class="number">10</span>,</div><div class="line">                <span class="attr">textAlign</span>: <span class="string">"center"</span></div><div class="line">            &#125;;</div><div class="line">            <span class="keyword">var</span> buttonStyle = &#123;</div><div class="line">                <span class="attr">fontSize</span>: <span class="string">"1em"</span>,</div><div class="line">                <span class="attr">width</span>: <span class="number">30</span>,</div><div class="line">                <span class="attr">height</span>: <span class="number">30</span>,</div><div class="line">                <span class="attr">fontFamily</span>: <span class="string">"sans-serif"</span>,</div><div class="line">                <span class="attr">color</span>: <span class="string">"#333"</span>,</div><div class="line">                <span class="attr">fontWeight</span>: <span class="string">"bold"</span>,</div><div class="line">                <span class="attr">lineHeight</span>: <span class="string">"3px"</span></div><div class="line">            &#125;;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;backgroundStyle&#125;</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">Counter</span> <span class="attr">display</span>=<span class="string">&#123;this.state.count&#125;/</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.increase&#125;</span> <span class="attr">style</span>=<span class="string">&#123;buttonStyle&#125;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">CounterParent</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</div><div class="line">        destination</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>不能在组件上监听事件<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="comment">// 不能直接在组件上监听事件</span></div><div class="line">    <span class="keyword">var</span> destination = <span class="built_in">document</span>.querySelector(<span class="string">"#container"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> Counter = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> textStyle = &#123;</div><div class="line">                <span class="attr">fontSize</span>: <span class="number">72</span>,</div><div class="line">                <span class="attr">fontFamily</span>: <span class="string">"sans-serif"</span>,</div><div class="line">                <span class="attr">color</span>: <span class="string">"#333"</span>,</div><div class="line">                <span class="attr">fontWeight</span>: <span class="string">"bold"</span></div><div class="line">            &#125;;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;textStyle&#125;</span>&gt;</span></span></div><div class="line">                    &#123;this.props.display&#125;</div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> CounterParent = React.createClass(&#123;</div><div class="line">        <span class="attr">getInitialState</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">                <span class="attr">count</span>: <span class="number">0</span></div><div class="line">            &#125;;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">increase</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> currentCount = <span class="keyword">this</span>.state.count;</div><div class="line">            <span class="keyword">if</span>(e.shiftKey)&#123;</div><div class="line">                currentCount += <span class="number">10</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                currentCount += <span class="number">1</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">this</span>.setState(&#123;</div><div class="line">                <span class="attr">count</span>:  currentCount</div><div class="line">            &#125;);</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> backgroundStyle = &#123;</div><div class="line">                <span class="attr">padding</span>: <span class="number">50</span>,</div><div class="line">                <span class="attr">backgroundColor</span>: <span class="string">"#FFC53A"</span>,</div><div class="line">                <span class="attr">width</span>: <span class="number">250</span>,</div><div class="line">                <span class="attr">height</span>: <span class="number">100</span>,</div><div class="line">                <span class="attr">borderRadius</span>: <span class="number">10</span>,</div><div class="line">                <span class="attr">textAlign</span>: <span class="string">"center"</span></div><div class="line">            &#125;;</div><div class="line">            <span class="keyword">var</span> buttonStyle = &#123;</div><div class="line">                <span class="attr">fontSize</span>: <span class="string">"1em"</span>,</div><div class="line">                <span class="attr">width</span>: <span class="number">30</span>,</div><div class="line">                <span class="attr">height</span>: <span class="number">30</span>,</div><div class="line">                <span class="attr">fontFamily</span>: <span class="string">"sans-serif"</span>,</div><div class="line">                <span class="attr">color</span>: <span class="string">"#333"</span>,</div><div class="line">                <span class="attr">fontWeight</span>: <span class="string">"bold"</span>,</div><div class="line">                <span class="attr">lineHeight</span>: <span class="string">"3px"</span></div><div class="line">            &#125;;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                &lt;div style=&#123;backgroundStyle&#125;&gt;</div><div class="line">                    &lt;Counter display=&#123;this.state.count&#125;/&gt;</div><div class="line">                    &#123;/* &lt;button onClick=&#123;this.increase&#125; style=&#123;buttonStyle&#125;&gt;+&lt;/button&gt; */&#125;</div><div class="line">                    &lt;PlusButton clickHandler=&#123;this.increase&#125;/&gt;</div><div class="line">                &lt;/div&gt;</div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    var PlusButton = React.createClass(&#123;</div><div class="line">        render: function()&#123;</div><div class="line">            return (</div><div class="line">                &lt;button onClick=&#123;this.props.clickHandler&#125;&gt;+</div><div class="line">                &lt;/button&gt;</div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    ReactDOM.render(</div><div class="line">        &lt;div&gt;</div><div class="line">            &lt;CounterParent/&gt;</div><div class="line">        &lt;/div&gt;,</div><div class="line">        destination</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>对于那些 React 官方不能识别的事件，你必须用传统的 addEventListener，加上一些额外的手段，就像下面这样：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> Something = React.createClass(&#123;</div><div class="line">        <span class="attr">handleMyEvent</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">            <span class="comment">// do something</span></div><div class="line">        &#125;,</div><div class="line">        <span class="comment">// 在组件被渲染时自动调用</span></div><div class="line">        componentDidMount: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="built_in">window</span>.addEventListener(<span class="string">"someEvent"</span>, <span class="keyword">this</span>.handleMyEvent);</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">componentWillUnmount</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="built_in">window</span>.removeEventListener(<span class="string">"someEvent"</span>, <span class="keyword">this</span>.handleMyEvent);</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;); </div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="单页应用"><a href="#单页应用" class="headerlink" title="单页应用"></a>单页应用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/ReactRouter.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-id">#container</span>&#123;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#fff</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#FFCC00</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">p</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span> &#123;</div><div class="line">        <span class="attribute">font-family</span>: Helvetica, Arial, sans-serif;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">ul</span><span class="selector-class">.header</span> <span class="selector-tag">li</span> &#123;</div><div class="line">        <span class="attribute">display</span>: inline;</div><div class="line">        <span class="attribute">list-style-type</span>: none;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">ul</span><span class="selector-class">.header</span> &#123;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#111</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">ul</span><span class="selector-class">.header</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</div><div class="line">        <span class="attribute">font-weight</span>: bold;</div><div class="line">        <span class="attribute">text-decoration</span>: none;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">        <span class="attribute">display</span>: inline-block;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.content</span> &#123;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#FFF</span>;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">20px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.content</span> <span class="selector-tag">h2</span> &#123;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.content</span> <span class="selector-tag">li</span> &#123;</div><div class="line">        <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.active</span> &#123;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#0099FF</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> Home = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>HELLO<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Cras facilisis urna ornare ex volutpat, et</div><div class="line">                    convallis erat elementum. Ut aliquam, ipsum vitae</div><div class="line">                    gravida suscipit, metus dui bibendum est, eget rhoncus nibh</div><div class="line">                    metus nec massa. Maecenas hendrerit laoreet augue</div><div class="line">                    nec molestie. Cum sociis natoque penatibus et magnis</div><div class="line">                    dis parturient montes, nascetur ridiculus mus.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Duis a turpis sed lacus dapibus elementum sed eu lectus.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">var</span> Contact = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>GOT QUESTIONS?<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>The easiest thing to do is post on our <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://forum.kirupa.com"</span>&gt;</span>forums<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">var</span> Stuff = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>STUFF<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Mauris sem velit, vehicula eget sodales vitae,</div><div class="line">                    rhoncus eget sapien:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Nulla pulvinar diam<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Facilisis bibendum<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Vestibulum vulputate<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Eget erat<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>Id porttitor<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">var</span> App = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Simple SPA<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">className</span>=<span class="string">"header"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">IndexLink</span> <span class="attr">to</span>=<span class="string">"/"</span> <span class="attr">activeClassName</span>=<span class="string">"active"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">IndexLink</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">"/stuff"</span> <span class="attr">activeClassName</span>=<span class="string">"active"</span>&gt;</span>Stuff<span class="tag">&lt;/<span class="name">Link</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">"/contact"</span> <span class="attr">activeClassName</span>=<span class="string">"active"</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">Link</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"content"</span>&gt;</span></div><div class="line">                        &#123;this.props.children&#125;</div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            )</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">var</span> destination = <span class="built_in">document</span>.querySelector(<span class="string">"#container"</span>);</div><div class="line">    <span class="keyword">var</span> &#123;</div><div class="line">        Router,</div><div class="line">        Route,</div><div class="line">        IndexRoute,</div><div class="line">        IndexLink,</div><div class="line">        Link</div><div class="line">    &#125; = ReactRouter;</div><div class="line">    ReactDOM.render(</div><div class="line">        &lt;Router&gt;</div><div class="line">            &lt;Route path="/" component=&#123;App&#125;&gt;</div><div class="line">                &lt;IndexRoute component=&#123;Home&#125;/&gt;</div><div class="line">                &lt;Route path="stuff" component=&#123;Stuff&#125; /&gt;</div><div class="line">                &lt;Route path="contact" component=&#123;Contact&#125; /&gt;</div><div class="line">            &lt;/Route&gt;</div><div class="line">        &lt;/Router&gt;,</div><div class="line">        destination</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="Todo-List"><a href="#Todo-List" class="headerlink" title="Todo List"></a>Todo List</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/react-dom.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/browser.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/ReactRouter.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></div><div class="line">    <span class="selector-id">#container</span>&#123;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">50px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-tag">body</span> &#123;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">50px</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#66CCFF</span>;</div><div class="line">        <span class="attribute">font-family</span>: sans-serif;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.todoListMain</span> <span class="selector-class">.header</span> <span class="selector-tag">input</span> &#123;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</div><div class="line">        <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#FFF</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.todoListMain</span> <span class="selector-class">.header</span> <span class="selector-tag">button</span> &#123;</div><div class="line">        <span class="attribute">padding</span>: <span class="number">10px</span>;</div><div class="line">        <span class="attribute">font-size</span>: <span class="number">16px</span>;</div><div class="line">        <span class="attribute">margin</span>: <span class="number">10px</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#0066FF</span>;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#FFF</span>;</div><div class="line">        <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#0066FF</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.todoListMain</span> <span class="selector-class">.header</span> <span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">        <span class="attribute">background-color</span>: <span class="number">#003399</span>;</div><div class="line">        <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#003399</span>;</div><div class="line">        <span class="attribute">cursor</span>: pointer;</div><div class="line">    &#125;</div><div class="line">    <span class="selector-class">.todoListMain</span> <span class="selector-class">.theList</span> &#123;</div><div class="line">        <span class="attribute">list-style</span>: none;</div><div class="line">        <span class="attribute">padding-left</span>: <span class="number">0</span>;</div><div class="line">        <span class="attribute">width</span>: <span class="number">255px</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="selector-class">.todoListMain</span> <span class="selector-class">.theList</span> <span class="selector-tag">li</span> &#123;</div><div class="line">        <span class="attribute">color</span>: <span class="number">#333</span>;</div><div class="line">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(255,255,255,.5);</div><div class="line">        <span class="attribute">padding</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</div><div class="line">        <span class="attribute">border-radius</span>: <span class="number">5px</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/babel"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> TodoItems = React.createClass(&#123;</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> todoEntries = <span class="keyword">this</span>.props.entries;</div><div class="line">            <span class="function"><span class="keyword">function</span> <span class="title">createTasks</span>(<span class="params">item</span>) </span>&#123;</div><div class="line">                <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">key</span>=<span class="string">&#123;item.key&#125;</span>&gt;</span>&#123;item.text&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">var</span> listItems = todoEntries.map(createTasks);</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">className</span>=<span class="string">"theList"</span>&gt;</span></span></div><div class="line">                    &#123;listItems&#125;</div><div class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">var</span> TodoList = React.createClass(&#123;</div><div class="line">        <span class="attr">getInitialState</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> &#123;</div><div class="line">                <span class="attr">items</span>: []</div><div class="line">            &#125;;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">addItem</span>: <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> itemArray = <span class="keyword">this</span>.state.items;</div><div class="line">            itemArray.push(&#123;</div><div class="line">                <span class="attr">text</span>: <span class="keyword">this</span>._inputElement.value,</div><div class="line">                <span class="attr">key</span>: <span class="built_in">Date</span>.now()</div><div class="line">            &#125;);</div><div class="line">            <span class="keyword">this</span>.setState(&#123;</div><div class="line">                <span class="attr">items</span>: itemArray</div><div class="line">            &#125;);</div><div class="line">            <span class="keyword">this</span>._inputElement.value = <span class="string">""</span>;</div><div class="line">            e.preventDefault();</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">render</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="keyword">return</span> (</div><div class="line">                <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"todoListMain"</span>&gt;</span></span></div><div class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"header"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">form</span> <span class="attr">onSubmit</span>=<span class="string">&#123;this.addItem&#125;</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">ref</span>=<span class="string">&#123;(a)</span> =&gt;</span> this._inputElement = a&#125; placeholder="enter task"&gt;<span class="tag">&lt;/<span class="name">input</span>&gt;</span></div><div class="line">                            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">TodoItems</span> <span class="attr">entries</span>=<span class="string">&#123;this.state.items&#125;/</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">            );</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    ReactDOM.render(</div><div class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">TodoList</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>,</div><div class="line">        document.querySelector("#container")</div><div class="line">    );</div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;第一个React程序&quot;&gt;&lt;a href=&quot;#第一个React程序&quot; class=&quot;headerlink&quot; title=&quot;第一个React程序&quot;&gt;&lt;/a&gt;第一个React程序&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- React 核心库 --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;react.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- React DOM 库 --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;react-dom.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- Babel 编译器，将 JSX 变成 JavaScript --&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;browser.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/babel&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; destination = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&quot;#container&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ReactDOM.render(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello World&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        destination&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*ReactDOM.render(React.createElement(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;h1&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        null,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &quot;Hello World&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ), destination);*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="React" scheme="http://wwww.yesokiloveyou.com/categories/React/"/>
    
    
      <category term="React" scheme="http://wwww.yesokiloveyou.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Demo List</title>
    <link href="http://wwww.yesokiloveyou.com/2016/11/22/demo/"/>
    <id>http://wwww.yesokiloveyou.com/2016/11/22/demo/</id>
    <published>2016-11-22T14:00:20.000Z</published>
    <updated>2016-12-04T17:00:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/resources/demo/index.html">持续更新中…</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;/resources/demo/index.html&quot;&gt;持续更新中…&lt;/a&gt;&lt;/p&gt;

    
    </summary>
    
      <category term="JS" scheme="http://wwww.yesokiloveyou.com/categories/JS/"/>
    
    
      <category term="Demo" scheme="http://wwww.yesokiloveyou.com/tags/Demo/"/>
    
  </entry>
  
  <entry>
    <title>Git使用</title>
    <link href="http://wwww.yesokiloveyou.com/2016/11/15/git/"/>
    <id>http://wwww.yesokiloveyou.com/2016/11/15/git/</id>
    <published>2016-11-15T14:07:50.000Z</published>
    <updated>2016-11-22T13:33:30.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git config --global user.name <span class="string">"blackawhite"</span></div><div class="line">git config --global user.email <span class="string">"dangpugui@126.com"</span></div><div class="line">git config --global user.name    <span class="comment">#查看</span></div><div class="line">git config --list</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init    <span class="comment">#使用Git就要先初始化</span></div></pre></td></tr></table></figure>
<h3 id="三个区"><a href="#三个区" class="headerlink" title="三个区"></a>三个区</h3><p>工作区：就是你当前写东西的目录<br>暂存区：作为过度层、避免误操作、保护工作区和版本区、分支处理<br>版本区：<br>添加、修改、删除，红色代表工作区内容、绿色暂存区，+添加，~修改，-删除，！冲突<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git status查看状态</div></pre></td></tr></table></figure></p>
<p>添加到暂存区：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add fileName</div><div class="line">git add .</div><div class="line">git add --all   <span class="comment">#git add -A</span></div></pre></td></tr></table></figure></p>
<p>添加到版本库（版本区）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git commit demo1.html &gt;&gt; 回车 &gt;&gt; 写注释 &gt;&gt;关闭</div><div class="line">git commit -m <span class="string">"change demo1.html"</span></div><div class="line">从工作区直接到版本库</div><div class="line">git commit <span class="_">-a</span> -m <span class="string">"add drag.js"</span>第一次时不能这样使用</div></pre></td></tr></table></figure></p>
<p>从暂存区撤回到工作区：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git reset HEAD demo1.html</div></pre></td></tr></table></figure></p>
<h3 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">log</span>     <span class="comment">#回车时显示后面的，退出按q键即可</span></div><div class="line">git <span class="built_in">log</span> --pretty=oneline    <span class="comment">#精简版显示</span></div></pre></td></tr></table></figure>
<h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git diff    <span class="comment">#查看修改内容，工作区和暂存区的比较</span></div><div class="line">git diff --cached(--staged)    <span class="comment">#暂存区与版本区的对比</span></div><div class="line">git diff master(分支名字)   <span class="comment">#工作区与版本库</span></div><div class="line">git diff HEAD -- readme.txt</div></pre></td></tr></table></figure>
<h3 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git reset HEAD &lt;file.name&gt;      <span class="comment">#撤销暂存区的提交/提交，在没有commit的情况下，从新回到未add状态</span></div><div class="line">git checkout -- &lt;file.name&gt;     <span class="comment">#工作区撤销到版本区的状态，例如误删或误改了文件</span></div><div class="line">git commit -m <span class="string">"aa"</span> --amend      <span class="comment">#误提交后和上一个提交的作为一次提交，让两次不同提交变成一次</span></div></pre></td></tr></table></figure>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git rm &lt;file.name&gt;      <span class="comment">#在工作区已经删除的情况下删除暂存区</span></div><div class="line">git rm <span class="_">-f</span> &lt;file.name&gt;   <span class="comment">#在工作区一删除或未删除的情况下删除工作区和暂存区，暂存区必须存在</span></div><div class="line">fit rm --cached &lt;file.name&gt;     <span class="comment">#在工作区还在或不在时都能，删除缓存区，而工作区不受影响</span></div></pre></td></tr></table></figure>
<h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git checkout Id &lt;file.name&gt;     <span class="comment">#恢复指定文件</span></div><div class="line">git reset --hard HEAD^    <span class="comment">#恢复到上一次commit的版本</span></div><div class="line">git reset --hard Id     <span class="comment">#恢复指定版本</span></div><div class="line">git reset --hard HEAD^      <span class="comment">#往下恢复后之前的log就没有了通过git reglog</span></div><div class="line">git reset --hard HEAD~num</div></pre></td></tr></table></figure>
<h3 id="同步Github"><a href="#同步Github" class="headerlink" title="同步Github"></a>同步Github</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git remote      <span class="comment">#查看远程仓库名字</span></div><div class="line">git remote -v   <span class="comment">#对应远程仓库地址</span></div><div class="line">ssh-keygen -t rsa -C <span class="string">"youremail@example.com"</span>    <span class="comment">#创建SSH</span></div><div class="line">git remote rm origin&lt;主机名&gt;     <span class="comment">#删除远程仓库</span></div><div class="line">git remote add origin git@...   <span class="comment">#添加远程仓库</span></div><div class="line">git push origin(远端名字) master(分支名字)      <span class="comment">#推送</span></div></pre></td></tr></table></figure>
<h3 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> url</div></pre></td></tr></table></figure>
<h3 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git pull    <span class="comment">#直接合并</span></div><div class="line">git fetch     <span class="comment">#手动合并，手动解决</span></div><div class="line">git diff master origin/master   <span class="comment">#查看区别</span></div><div class="line">git merge origin/master</div></pre></td></tr></table></figure>
<h3 id="参与开源项目"><a href="#参与开源项目" class="headerlink" title="参与开源项目"></a>参与开源项目</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Fork 开了一个新的分支，克隆了一个版本</div><div class="line">　　&gt;&gt;命令行克隆自己fork过来的，然后修改并提交</div><div class="line">　　&gt;&gt;Pull request</div><div class="line">　　&gt;&gt;New pull request</div><div class="line">　　&gt;&gt;Create pull request</div><div class="line">对方：</div><div class="line">　　&gt;&gt;Merge pull request</div><div class="line">　　&gt;&gt;confirm</div><div class="line">　　回复技巧：选中对方信息，按R键</div></pre></td></tr></table></figure>
<h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><p>稳定版本库的分支 &gt;&gt; 开发  &gt;&gt;  合并到稳定的版本，master 一般默认为项目的主分支，不同的开发人员在不同的分支上进行开发互相不影响。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">git branch  <span class="comment">#查看当前分支</span></div><div class="line">git branch new1     <span class="comment">#创建分支，github上也可直接创建</span></div><div class="line">git checkout new1   <span class="comment">#切换分支</span></div><div class="line">git checkout -b new2    <span class="comment">#创建并切换</span></div><div class="line">git merge new1      <span class="comment">#合并分支，合并分支先切换到master</span></div><div class="line">git branch --merged     <span class="comment">#查看当前分支所合并的分支</span></div><div class="line">git branch --no-merged  <span class="comment">#查看与当前分支未合并的分支</span></div><div class="line">git branch <span class="_">-d</span> new1      <span class="comment">#删除合并后的没用的new1分支</span></div><div class="line">git branch -D new2      <span class="comment">#删除没有合并的分支</span></div><div class="line">git status      <span class="comment">#查看冲突的文件，人工解决合并文件的冲突后然后再提交</span></div></pre></td></tr></table></figure>
<h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git tag		<span class="comment">#查看</span></div><div class="line">git tag v1.0 	<span class="comment">#打标签，也可github上直接创建</span></div><div class="line">git push origin v1.0 	<span class="comment">#提交打的标签/版本</span></div></pre></td></tr></table></figure>
<h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">http://git.oschina.net/progit/</div><div class="line">http://www.liaoxuefeng.com/</div><div class="line">https://git-scm.com/book/zh/v1/%E8%B5%B7%E6%AD%A5</div></pre></td></tr></table></figure>
<h3 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ls  <span class="comment">#查看目录结构</span></div><div class="line">mkdir   <span class="comment">#创建</span></div><div class="line">tab     <span class="comment">#自动补全</span></div><div class="line">git config --global alias.co checkout   <span class="comment">#co等于checkout，设置别名</span></div><div class="line">git config --list   <span class="comment">#查看别名</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;设置&quot;&gt;&lt;a href=&quot;#设置&quot; class=&quot;headerlink&quot; title=&quot;设置&quot;&gt;&lt;/a&gt;设置&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;blackawhite&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;dangpugui@126.com&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --global user.name    &lt;span class=&quot;comment&quot;&gt;#查看&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --list&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="工具" scheme="http://wwww.yesokiloveyou.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Git" scheme="http://wwww.yesokiloveyou.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Node读书笔记</title>
    <link href="http://wwww.yesokiloveyou.com/2016/11/13/note-nodejs/"/>
    <id>http://wwww.yesokiloveyou.com/2016/11/13/note-nodejs/</id>
    <published>2016-11-13T10:11:26.000Z</published>
    <updated>2017-02-21T16:51:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FS-API的应用"><a href="#FS-API的应用" class="headerlink" title="FS API的应用"></a>FS API的应用</h2><p>需求：展示当前目录下列表并给出选择，当选择文件时显示内容，选择目录时，显示该目录下文件信息。<a id="more"></a></p>
<h3 id="fs-readdir"><a href="#fs-readdir" class="headerlink" title="fs.readdir()"></a>fs.readdir()</h3><p>读取目录<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(fs.readdirSync(__dirname));<span class="comment">//同步获取当前目录的文件列表</span></div></pre></td></tr></table></figure></p>
<p>readdir()第一个参数的3种写法<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fs.readdir(<span class="string">'.'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,files</span>)</span>&#123;&#125;);</div></pre></td></tr></table></figure></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fs.readdir(__dirname,<span class="function"><span class="keyword">function</span>(<span class="params">err,files</span>)</span>&#123;&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fs.readdir(process.cwd(),<span class="function"><span class="keyword">function</span>(<span class="params">err,files</span>)</span>&#123;&#125;);</div></pre></td></tr></table></figure>
<h3 id="fs-readFile"><a href="#fs-readFile" class="headerlink" title="fs.readFile()"></a>fs.readFile()</h3><p>读取文件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fs.readFile(filename,utf<span class="number">-8</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="fs-stat"><a href="#fs-stat" class="headerlink" title="fs.stat()"></a>fs.stat()</h3><p>读取文件或目录的元数据<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fs.stat(filename,<span class="function"><span class="keyword">function</span>(<span class="params">err,stat</span>)</span>&#123;&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>),</div><div class="line">    stdin = process.stdin,<span class="comment">//可读流</span></div><div class="line">    stdout = process.stdout;<span class="comment">//可写流</span></div><div class="line"></div><div class="line"><span class="comment">//process.cwd()返回运行当前脚本的工作路径</span></div><div class="line">fs.readdir(process.cwd(),<span class="function"><span class="keyword">function</span>(<span class="params">err,files</span>)</span>&#123;</div><div class="line">    <span class="comment">//输出一个空行，便于阅读</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">''</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(!files.length)&#123;</div><div class="line">        <span class="comment">//文件不存在直接提示并返回</span></div><div class="line">        <span class="keyword">return</span> <span class="built_in">console</span>.log(<span class="string">'No files to show!'</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//提示用户选择</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Select which file or direcrory you want to see\n'</span>);</div><div class="line">    <span class="comment">//后面会多次用到，保存一下</span></div><div class="line">    <span class="keyword">var</span> stats = [];</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">file</span>(<span class="params">i</span>)</span>&#123;</div><div class="line">        <span class="comment">//filename可能是目录或着文件所以下面要利用fs.stat()作出判断</span></div><div class="line">        <span class="keyword">var</span> filename = files[i];</div><div class="line">        <span class="comment">//fs.stat会给出文件或者目录的元数据</span></div><div class="line">        fs.stat(__dirname + <span class="string">'/'</span> + filename,<span class="function"><span class="keyword">function</span>(<span class="params">err,stat</span>)</span>&#123;</div><div class="line">            stats[i] = stat;</div><div class="line">            <span class="comment">//输出目录或文件的名字</span></div><div class="line">            <span class="keyword">if</span>(stats[i].isDirectory())&#123;<span class="comment">//如果是目录</span></div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'目录：'</span> + i + <span class="string">'    '</span> + filename);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;<span class="comment">//如果说文件</span></div><div class="line">                <span class="built_in">console</span>.log(<span class="string">'文件：'</span> + i + <span class="string">'    '</span> + filename); </div><div class="line">            &#125;</div><div class="line">            <span class="comment">//说明文件或目录输出完毕</span></div><div class="line">            <span class="keyword">if</span>(++i == files.length)&#123;</div><div class="line">                <span class="comment">//接下来的操作就是让用户输入选择</span></div><div class="line">                read();</div><div class="line">            &#125;</div><div class="line">            <span class="comment">//继续输出</span></div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                file(i);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">''</span>);</div><div class="line">        <span class="comment">//不换行输出选择提示信息</span></div><div class="line">        stdout.write(<span class="string">'Enter your choice:'</span>);</div><div class="line">        <span class="comment">//等待用户输入</span></div><div class="line">        stdin.resume();</div><div class="line">        <span class="comment">//使支持特殊字符</span></div><div class="line">        stdin.setEncoding(<span class="string">'utf8'</span>);</div><div class="line">        <span class="comment">//监听用户输入的信息</span></div><div class="line">        stdin.on(<span class="string">'data'</span>,option);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//用户的操作</span></div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">option</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> filename = files[<span class="built_in">Number</span>(data)]</div><div class="line">        <span class="keyword">if</span>(!filename)&#123;</div><div class="line">            <span class="comment">//若输入的内容不在列出内容之中</span></div><div class="line">            stdout.write(<span class="string">'Enter you choice again:'</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            stdin.pause();</div><div class="line">            <span class="comment">//读取目录或文件，stats数组已经保存了所有文件或目录的元数据</span></div><div class="line">            <span class="keyword">if</span>(stats[<span class="built_in">Number</span>(data)].isDirectory())&#123;<span class="comment">//若是目录</span></div><div class="line">                <span class="comment">//读取目录</span></div><div class="line">                fs.readdir(__dirname + <span class="string">'/'</span> + filename,<span class="function"><span class="keyword">function</span>(<span class="params">err,files</span>)</span>&#123;</div><div class="line">                    <span class="built_in">console</span>.log(<span class="string">''</span>);</div><div class="line">                    <span class="built_in">console</span>.log(files.length + <span class="string">'files'</span>);</div><div class="line">                    <span class="comment">//files是一个数组，里面存的说filename</span></div><div class="line">                    files.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">file</span>)</span>&#123;</div><div class="line">                        <span class="built_in">console</span>.log(<span class="string">'    _   '</span> + file);</div><div class="line">                    &#125;);</div><div class="line">                    <span class="built_in">console</span>.log(<span class="string">''</span>);</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;<span class="comment">//若是文件</span></div><div class="line">                fs.readFile(__dirname + <span class="string">'/'</span> + filename,<span class="string">'utf8'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</div><div class="line">                    <span class="built_in">console</span>.log(<span class="string">''</span>);</div><div class="line">                    <span class="comment">//输出内容</span></div><div class="line">                    <span class="built_in">console</span>.log(data);</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    file(<span class="number">0</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="一个简单的web服务器"><a href="#一个简单的web服务器" class="headerlink" title="一个简单的web服务器"></a>一个简单的web服务器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> qs = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</div><div class="line"></div><div class="line"><span class="built_in">require</span>(<span class="string">'http'</span>).createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(req.url);</div><div class="line">    <span class="keyword">if</span>(<span class="string">'/'</span> == req.url)&#123;</div><div class="line">        res.writeHead(<span class="number">200</span>,&#123;<span class="string">'Content-Type'</span>: <span class="string">'text/html'</span>&#125;);</div><div class="line"></div><div class="line">        res.end([</div><div class="line">            <span class="string">'&lt;form method="POST" action="/url"&gt;'</span>,</div><div class="line">            <span class="string">'&lt;h1&gt;My form&lt;/h1&gt;'</span>,</div><div class="line">            <span class="string">'&lt;fieldset&gt;'</span>,</div><div class="line">            <span class="string">'&lt;label&gt;Personal information&lt;/label&gt;'</span>,</div><div class="line">            <span class="string">'&lt;p&gt;What is your name?&lt;/p&gt;'</span>,</div><div class="line">            <span class="string">'&lt;input type="text" name="name"&gt;'</span>,</div><div class="line">            <span class="string">'&lt;p&gt;&lt;button&gt;Submit&lt;/button&gt;&lt;/p&gt;'</span>,</div><div class="line">            <span class="string">'&lt;/fieldset&gt;'</span>,</div><div class="line">            <span class="string">'&lt;/form&gt;'</span></div><div class="line">        ].join(<span class="string">''</span>));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">'/url'</span> == req.url &amp;&amp; <span class="string">'POST'</span> == req.method)&#123;</div><div class="line">        <span class="keyword">var</span> body =<span class="string">''</span>;</div><div class="line">        req.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>)</span>&#123;</div><div class="line">            body += chunk;</div><div class="line">        &#125;);</div><div class="line">        req.on(<span class="string">'end'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            res.writeHead(<span class="number">200</span>,&#123;<span class="string">'Content-Type'</span>: <span class="string">'text/html'</span>&#125;);</div><div class="line">            <span class="comment">//res.end('&lt;p&gt;Content-Type:'+ req.headers['content-type'] +'&lt;/p&gt;' + '&lt;p&gt;Data:&lt;/p&gt;&lt;pre&gt;' + body + '&lt;/pre&gt;');</span></div><div class="line">            res.end(<span class="string">'&lt;p&gt;Your name is &lt;b&gt;'</span>+ qs.parse(body).name +<span class="string">'&lt;/b&gt;&lt;/p&gt;'</span>);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        res.writeHead(<span class="number">404</span>);</div><div class="line">        res.end(<span class="string">'Not Found'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;).listen(<span class="number">3000</span>)</div></pre></td></tr></table></figure>
<h2 id="req-url"><a href="#req-url" class="headerlink" title="req.url"></a>req.url</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">switch</span>(req.url)&#123;</div><div class="line">        <span class="keyword">case</span> <span class="string">'/1.html'</span>:</div><div class="line">            res.write(<span class="string">'1.html'</span>);</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'/2.html'</span>:</div><div class="line">            res.write(<span class="string">'2.html'</span>);</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            res.write(<span class="string">'404'</span>);</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    res.end();</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div></pre></td></tr></table></figure>
<h2 id="fs-readFile-1"><a href="#fs-readFile-1" class="headerlink" title="fs.readFile"></a>fs.readFile</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"></div><div class="line">fs.readFile(<span class="string">'hello.txt'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">arr,data</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(arr)&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"读取失败"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(data.toString());<span class="comment">// 二进制转字符串</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="fs-writeFile"><a href="#fs-writeFile" class="headerlink" title="fs.writeFile"></a>fs.writeFile</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"></div><div class="line">fs.writeFile(<span class="string">'aaa.txt'</span>,<span class="string">'20170216'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;<span class="comment">// 这里不加./也没事</span></div><div class="line">    <span class="keyword">if</span>(err)&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'写入失败'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="fs-readFile-amp-fs-write"><a href="#fs-readFile-amp-fs-write" class="headerlink" title="fs.readFile &amp; fs.write"></a>fs.readFile &amp; fs.write</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> _url = <span class="string">'./www'</span> + req.url;</div><div class="line">    <span class="built_in">console</span>.log(_url);<span class="comment">//    &gt;&gt;    ./www/index.html</span></div><div class="line">    fs.readFile(_url,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;<span class="comment">// 这里必须要用./</span></div><div class="line">        <span class="keyword">if</span>(err)&#123;</div><div class="line">            res.write(<span class="string">'404'</span>);</div><div class="line">        &#125; </div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            res.write(data);</div><div class="line">        &#125;</div><div class="line">        res.end();</div><div class="line">    &#125;);</div><div class="line">    </div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div></pre></td></tr></table></figure>
<h2 id="split"><a href="#split" class="headerlink" title="split"></a>split</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> _json = &#123;&#125;;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(req.url.indexOf(<span class="string">"?"</span>) != <span class="number">-1</span>)&#123;</div><div class="line">        <span class="keyword">var</span> arr1 = req.url.split(<span class="string">"?"</span>);</div><div class="line"></div><div class="line">        <span class="keyword">var</span> url = arr1[<span class="number">0</span>];<span class="comment">// 接口</span></div><div class="line">        <span class="keyword">var</span> arr1Right = arr1[<span class="number">1</span>];</div><div class="line"></div><div class="line">        <span class="keyword">var</span> arr2 = arr1Right.split(<span class="string">"&amp;"</span>);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr2.length;i ++)&#123;</div><div class="line">            <span class="keyword">var</span> arr3 = arr2[i].split(<span class="string">"="</span>);</div><div class="line"></div><div class="line">            _json[arr3[<span class="number">0</span>]] = arr3[<span class="number">1</span>];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        url = req.url;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">console</span>.log(url,_json);</div><div class="line">    res.write(<span class="string">'aaa'</span>);</div><div class="line">    res.end();</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div></pre></td></tr></table></figure>
<h2 id="querystring-parse"><a href="#querystring-parse" class="headerlink" title="querystring.parse"></a>querystring.parse</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> str = <span class="string">"name=yangk&amp;age=25&amp;sex=man"</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> json = querystring.parse(str);</div><div class="line"></div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> attr <span class="keyword">in</span> json)&#123;</div><div class="line">    <span class="built_in">console</span>.log(attr + <span class="string">":"</span> + json[attr]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="url-parse-req-url-true"><a href="#url-parse-req-url-true" class="headerlink" title="url.parse(req.url,true)"></a>url.parse(req.url,true)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"><span class="keyword">const</span> urlLib = <span class="built_in">require</span>(<span class="string">'url'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> obj = urlLib.parse(req.url,<span class="literal">true</span>);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> url = obj.pathname;<span class="comment">// 接口</span></div><div class="line">    <span class="keyword">var</span> get = obj.query;</div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(url,get);</div><div class="line"></div><div class="line">    res.write(<span class="string">"aaa"</span>);</div><div class="line">    res.end();</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div></pre></td></tr></table></figure>
<h2 id="req-on-‘data’"><a href="#req-on-‘data’" class="headerlink" title="req.on(‘data’)"></a>req.on(‘data’)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// POST数据接收</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);<span class="comment">// 主要用来解析POST数据</span></div><div class="line"></div><div class="line">http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="comment">// POST &gt; req</span></div><div class="line">    <span class="keyword">var</span> str = <span class="string">''</span>;</div><div class="line">    <span class="keyword">var</span> i = <span class="number">0</span>;</div><div class="line">    req.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;<span class="comment">// 有一段数据到达的时候就发生一次</span></div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`第<span class="subst">$&#123;i++&#125;</span>次收到数据`</span>);<span class="comment">// ES6语法</span></div><div class="line">        str += data;</div><div class="line">    &#125;);</div><div class="line">    req.on(<span class="string">'end'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">// 数据全部到达的时候发生一次</span></div><div class="line">        <span class="comment">// console.log(str);</span></div><div class="line">        <span class="keyword">var</span> POST = querystring.parse(str);<span class="comment">// readFile的数据可以toString</span></div><div class="line">        <span class="built_in">console</span>.log(POST);</div><div class="line">    &#125;);</div><div class="line">&#125;).listen(<span class="number">8088</span>);</div></pre></td></tr></table></figure>
<h2 id="req-res-readFile"><a href="#req-res-readFile" class="headerlink" title="req,res,readFile"></a>req,res,readFile</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"><span class="keyword">const</span> urlLib = <span class="built_in">require</span>(<span class="string">'url'</span>);<span class="comment">// 解析req</span></div><div class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);<span class="comment">// 解析res</span></div><div class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> obj = urlLib.parse(req.url,<span class="literal">true</span>);</div><div class="line">    <span class="keyword">var</span> url = obj.pathname;</div><div class="line">    <span class="keyword">const</span> GET = obj.query;<span class="comment">// GET</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'GET:'</span>,GET);</div><div class="line"></div><div class="line">    <span class="keyword">var</span> str = <span class="string">''</span>;</div><div class="line">    req.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">        str += data;</div><div class="line">    &#125;);</div><div class="line">    req.on(<span class="string">'end'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">const</span> POST = querystring.parse(str);</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'POST:'</span>,POST);<span class="comment">// POST</span></div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="comment">// 文件请求</span></div><div class="line">    <span class="keyword">var</span> urlStr = <span class="string">'./www'</span> + url;</div><div class="line">    fs.readFile(urlStr,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(err)&#123;</div><div class="line">            res.write(<span class="string">'404'</span>)</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            res.write(data);</div><div class="line">        &#125;</div><div class="line">        res.end();<span class="comment">// 由于readFile是异步的，此end要写在里面</span></div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line">server.listen(<span class="number">8088</span>);</div></pre></td></tr></table></figure>
<p>html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8088/index.html"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">        用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pass"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="用户登录注册"><a href="#用户登录注册" class="headerlink" title="用户登录注册"></a>用户登录注册</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"pass"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"注册"</span> <span class="attr">id</span>=<span class="string">"reg"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"登录"</span> <span class="attr">id</span>=<span class="string">"login"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"ajax.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> oUser = <span class="built_in">document</span>.querySelector(<span class="string">"#user"</span>);</div><div class="line">    <span class="keyword">var</span> oPass = <span class="built_in">document</span>.querySelector(<span class="string">"#pass"</span>);</div><div class="line">    <span class="keyword">var</span> oReg = <span class="built_in">document</span>.querySelector(<span class="string">"#reg"</span>);</div><div class="line">    <span class="keyword">var</span> oLogin = <span class="built_in">document</span>.querySelector(<span class="string">"#login"</span>);</div><div class="line"></div><div class="line">    oReg.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        ajax(&#123;</div><div class="line">            <span class="attr">url</span>: <span class="string">'/user'</span>,</div><div class="line">            <span class="attr">type</span>: <span class="string">'get'</span>,</div><div class="line">            <span class="attr">data</span>: &#123;</div><div class="line">                <span class="attr">act</span>: <span class="string">'reg'</span>,</div><div class="line">                <span class="attr">user</span>: oUser.value,</div><div class="line">                <span class="attr">pass</span>: oPass.value</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">                <span class="keyword">var</span> _json=<span class="built_in">eval</span>(<span class="string">'('</span>+str+<span class="string">')'</span>);</div><div class="line">                alert(_json.msg);</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                alert(<span class="string">"通信失败！"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    oLogin.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        ajax(&#123;</div><div class="line">            <span class="attr">url</span>: <span class="string">'/user'</span>,</div><div class="line">            <span class="attr">type</span>: <span class="string">'get'</span>,</div><div class="line">            <span class="attr">data</span>: &#123;</div><div class="line">                <span class="attr">act</span>: <span class="string">'login'</span>,</div><div class="line">                <span class="attr">user</span>: oUser.value,</div><div class="line">                <span class="attr">pass</span>: oPass.value</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">                <span class="keyword">var</span> _json=<span class="built_in">eval</span>(<span class="string">'('</span>+str+<span class="string">')'</span>);</div><div class="line">                alert(_json.msg);</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                alert(<span class="string">"通信失败！"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">const</span> urlLib = <span class="built_in">require</span>(<span class="string">'url'</span>);</div><div class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> users = &#123;&#125;;<span class="comment">// 位置</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> str = <span class="string">''</span>;</div><div class="line">    req.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">        str += data;</div><div class="line">    &#125;);</div><div class="line">    req.on(<span class="string">'end'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> obj = urlLib.parse(req.url,<span class="literal">true</span>);</div><div class="line">        <span class="keyword">var</span> url = obj.pathname;</div><div class="line">        <span class="keyword">var</span> GET = obj.query;<span class="comment">// GET</span></div><div class="line">        <span class="keyword">var</span> POST = querystring.parse(str);<span class="comment">// POST</span></div><div class="line">        <span class="keyword">if</span>(url == <span class="string">"/user"</span>)&#123;<span class="comment">// 接口</span></div><div class="line"></div><div class="line">            <span class="keyword">switch</span>(GET.act)&#123;</div><div class="line">                <span class="keyword">case</span> <span class="string">'reg'</span>:</div><div class="line">                    <span class="keyword">if</span>(users[GET.user])&#123;</div><div class="line">                        res.write(<span class="string">'&#123;ok:true,msg:"用户名已存在！"&#125;'</span>);<span class="comment">// res.write返回客户端</span></div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">else</span>&#123;</div><div class="line">                        users[GET.user] = GET.pass;</div><div class="line">                        res.write(<span class="string">'&#123;ok:true,msg:"注册成功！"&#125;'</span>);</div><div class="line">                    &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">case</span> <span class="string">'login'</span>:</div><div class="line">                    <span class="keyword">if</span>(users[GET.user]==<span class="literal">null</span>)&#123;</div><div class="line">                        res.write(<span class="string">'&#123;ok:false,msg:"此用户不存在"&#125;'</span>);</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(users[GET.user] != GET.pass)&#123;</div><div class="line">                        res.write(<span class="string">'&#123;ok:false,msg:"密码错误！"&#125;'</span>);</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">else</span>&#123;</div><div class="line">                        res.write(<span class="string">'&#123;ok:true,msg:"登录成功！"&#125;'</span>);</div><div class="line">                    &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">                <span class="keyword">default</span>:</div><div class="line">                    res.write(<span class="string">'&#123;ok:false,msg:"无此接口！"&#125;'</span>);</div><div class="line">            &#125;</div><div class="line">            res.end();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;<span class="comment">// 文件</span></div><div class="line">            <span class="keyword">var</span> fileName = <span class="string">'./www'</span> + url;</div><div class="line">            fs.readFile(fileName,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</div><div class="line">                <span class="keyword">if</span>(err)&#123;</div><div class="line">                    res.write(<span class="string">'读取文件失败'</span>);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span>&#123;</div><div class="line">                    res.write(data);</div><div class="line">                &#125;</div><div class="line">                res.end();</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div></pre></td></tr></table></figure>
<h2 id="express"><a href="#express" class="headerlink" title="express"></a>express</h2><p>express保留了原生的功能，增强了一些新的功能<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line">server.use(<span class="string">'/a.html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    res.send(&#123;<span class="attr">a</span>: <span class="number">12</span>,<span class="attr">b</span>: <span class="number">5</span>&#125;);<span class="comment">// send支持json</span></div><div class="line">    res.end();</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.use(<span class="string">'/b.html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    res.send(<span class="string">'123'</span>);<span class="comment">// res.write</span></div><div class="line">    res.end();</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 监听用户的请求：</span></div><div class="line"><span class="comment">// server.get()</span></div><div class="line"><span class="comment">// server.post()</span></div><div class="line"><span class="comment">// server.use() =&gt; 通吃</span></div></pre></td></tr></table></figure></p>
<h2 id="express-static-读取静态文件"><a href="#express-static-读取静态文件" class="headerlink" title="express-static(读取静态文件)"></a>express-static(读取静态文件)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"pass"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"登录"</span> <span class="attr">id</span>=<span class="string">"login"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"ajax.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> oUser = <span class="built_in">document</span>.querySelector(<span class="string">"#user"</span>);</div><div class="line">    <span class="keyword">var</span> oPass = <span class="built_in">document</span>.querySelector(<span class="string">"#pass"</span>);</div><div class="line">    <span class="keyword">var</span> oLogin = <span class="built_in">document</span>.querySelector(<span class="string">"#login"</span>);</div><div class="line"></div><div class="line">    oLogin.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        ajax(&#123;</div><div class="line">            <span class="attr">url</span>: <span class="string">'/login'</span>,</div><div class="line">            <span class="attr">type</span>: <span class="string">'get'</span>,</div><div class="line">            <span class="attr">data</span>: &#123;</div><div class="line">                <span class="attr">user</span>: oUser.value,</div><div class="line">                <span class="attr">pass</span>: oPass.value</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">str</span>)</span>&#123;</div><div class="line">                <span class="keyword">var</span> _json=<span class="built_in">eval</span>(<span class="string">'('</span>+str+<span class="string">')'</span>);</div><div class="line">                alert(_json.msg);</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                alert(<span class="string">"通信失败！"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> expressStatic = <span class="built_in">require</span>(<span class="string">'express-static'</span>);<span class="comment">// 中间件，用来读取静态文件</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line"><span class="comment">// /login?user=xxx&amp;padd=xxx</span></div><div class="line"><span class="comment">// =&gt;&#123;ok:true/false,msg:'原因'&#125;</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> users = &#123;</div><div class="line">    <span class="string">'yangk'</span>: <span class="number">123</span>,</div><div class="line">    <span class="string">'sherry'</span>: <span class="number">321</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line">server.get(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> user = req.query[<span class="string">'user'</span>];<span class="comment">// &#123;user: 'yangk',pass: '123'&#125;</span></div><div class="line">    <span class="keyword">var</span> pass = req.query[<span class="string">'pass'</span>];</div><div class="line">    <span class="keyword">if</span>(users[user] == <span class="literal">null</span>)&#123;</div><div class="line">        res.send(&#123;<span class="attr">ok</span>: <span class="literal">false</span>,<span class="attr">msg</span>:<span class="string">'此用户不存在'</span>&#125;);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(users[user] != pass)&#123;</div><div class="line">        res.send(&#123;<span class="attr">ok</span>: <span class="literal">false</span>,<span class="attr">msg</span>:<span class="string">'密码不正确'</span>&#125;);   </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        res.send(&#123;<span class="attr">ok</span>: <span class="literal">true</span>,<span class="attr">msg</span>:<span class="string">'登录成功'</span>&#125;);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.use(expressStatic(<span class="string">'./www'</span>));<span class="comment">// 读取对应目录下的文件</span></div><div class="line"></div><div class="line"><span class="comment">// 测试接口：http://localhost:8088/login?user=yangk&amp;pass=123</span></div></pre></td></tr></table></figure>
<h2 id="body-parser-取POST数据"><a href="#body-parser-取POST数据" class="headerlink" title="body-parser(取POST数据)"></a>body-parser(取POST数据)</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8088"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">        用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"pass"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> expressStatic = <span class="built_in">require</span>(<span class="string">'express-static'</span>);<span class="comment">// 中间件</span></div><div class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);<span class="comment">// 拿到POST数据</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line">server.use(bodyParser.urlencoded(&#123;<span class="comment">// 先加工一次，下面才能用req.body</span></div><div class="line">    extended: <span class="literal">false</span>,<span class="comment">// 扩展模式,false代表普通模式</span></div><div class="line">    limit: <span class="number">2</span> * <span class="number">1024</span> * <span class="number">1024</span><span class="comment">// 限制数据的大小为2M</span></div><div class="line">&#125;));</div><div class="line"></div><div class="line">server.use(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="comment">// console.log(req.query);// 拿到GET数据</span></div><div class="line">    <span class="built_in">console</span>.log(req.body);<span class="comment">// POST,需要body-parse中间件，先解析再用</span></div><div class="line">&#125;);</div><div class="line"><span class="string">`</span></div></pre></td></tr></table></figure>
<h2 id="server-use的链式操作"><a href="#server-use的链式操作" class="headerlink" title="server.use的链式操作"></a>server.use的链式操作</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line"><span class="comment">// 链式操作，监听的是同一个请求的地址</span></div><div class="line">server.use(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res,next</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'a'</span>);</div><div class="line">    next();</div><div class="line">&#125;);</div><div class="line">server.use(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'b'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="自定义中间件"><a href="#自定义中间件" class="headerlink" title="自定义中间件"></a>自定义中间件</h2><p>预热<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);<span class="comment">// 解析POST类型的数据</span></div><div class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line"><span class="comment">/*server.use(function(req,res,next)&#123;// 不写路径是针对所有路径有反应</span></div><div class="line">    // req.a = 12;</div><div class="line">    var str = '';</div><div class="line">    req.on('data',function(data)&#123;// 接收POST型的数据</div><div class="line">        str += data;</div><div class="line">    &#125;);</div><div class="line">    req.on('end',function()&#123;</div><div class="line">        req.body = querystring.parse(str);// 解析POST类型的数据</div><div class="line">        next();// 数据接收完了再执行下一步</div><div class="line">    &#125;);</div><div class="line">&#125;);*/</div><div class="line"></div><div class="line">server.use(bodyParser.urlencoded());</div><div class="line"></div><div class="line"></div><div class="line">server.use(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;<span class="comment">// 针对这个路径有反应</span></div><div class="line">    <span class="comment">// console.log(req.a);// 底下可以访问上面的req.a</span></div><div class="line">    <span class="built_in">console</span>.log(req.body);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8088"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">        用户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"pass"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>正式代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> bodyParser2 = <span class="built_in">require</span>(<span class="string">'./libs/my-body-parser'</span>);<span class="comment">// my-body-parser输出什么这里是什么</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line"><span class="comment">// server.use(bodyParser2);</span></div><div class="line"><span class="comment">// server.use(bodyParser2());</span></div><div class="line">server.use(bodyParser2.aaa());</div><div class="line"></div><div class="line">server.use(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;<span class="comment">// 针对这个路径有反应</span></div><div class="line">    <span class="built_in">console</span>.log(req.body);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>中间件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);<span class="comment">// 解析POST类型的数据</span></div><div class="line"><span class="comment">/*module.exports = function(req,res,next)&#123;</span></div><div class="line">    var str = '';</div><div class="line">    req.on('data',function(data)&#123;</div><div class="line">        str += data;</div><div class="line">    &#125;);</div><div class="line">    req.on('end',function()&#123;</div><div class="line">        req.body = querystring.parse(str);</div><div class="line">        next();</div><div class="line">    &#125;);</div><div class="line">&#125;*/</div><div class="line"></div><div class="line"><span class="comment">/*module.exports = function()&#123;</span></div><div class="line">    return function(req,res,next)&#123;</div><div class="line">        var str = '';</div><div class="line">        req.on('data',function(data)&#123;</div><div class="line">            str += data;</div><div class="line">        &#125;);</div><div class="line">        req.on('end',function()&#123;</div><div class="line">            req.body = querystring.parse(str);</div><div class="line">            next();</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;*/</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    <span class="attr">aaa</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">req,res,next</span>)</span>&#123;</div><div class="line">            <span class="keyword">var</span> str = <span class="string">''</span>;</div><div class="line">            req.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">                str += data;</div><div class="line">            &#125;);</div><div class="line">            req.on(<span class="string">'end'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                req.body = querystring.parse(str);<span class="comment">// 解析成json</span></div><div class="line">                next();</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="cookie-session"><a href="#cookie-session" class="headerlink" title="cookie/session"></a>cookie/session</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cookie:保存在客户端，不安全；大小有限(4K)</div><div class="line">session:保存在服务器端，相对安全；大小无限</div><div class="line">session是基于cookie来实现的，简单说cookie中会有一个sessionId，服务器利用sessionId找到session文件、读取、写入</div><div class="line"></div><div class="line">cookie</div><div class="line">    读取：cookie-parser</div><div class="line">    发送：</div><div class="line">session</div><div class="line">    cookie-session</div></pre></td></tr></table></figure>
<p>写入cookie<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line"></div><div class="line"><span class="comment">// 写入/发送cookie</span></div><div class="line">server.use(<span class="string">'/aaa/a.html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    res.cookie(<span class="string">'user'</span>,<span class="string">'yangk'</span>,&#123;<span class="comment">// 写入cookie</span></div><div class="line">        path: <span class="string">'/aaa'</span>,<span class="comment">// 指定只有aaa路径下可以访问</span></div><div class="line">        maxAge: <span class="number">30</span> * <span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span><span class="comment">// 30天后过期</span></div><div class="line">    &#125;);<span class="comment">// 放在send之前</span></div><div class="line">    res.send(<span class="string">'ok'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div></pre></td></tr></table></figure></p>
<p>读取cookie<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line"></div><div class="line">server.use(cookieParser());<span class="comment">// 解析</span></div><div class="line"></div><div class="line">server.use(<span class="string">'/aaa/a.html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(req.cookies);<span class="comment">// 读取cookie</span></div><div class="line">    res.send(<span class="string">'ok'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line"><span class="comment">// cookie: 父级可以访问子级的,例如当在('/aaa/a.html')中设置的cookie，use('/')这样指定时是可以访问</span></div></pre></td></tr></table></figure></p>
<p>加密/签名cookie<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line"></div><div class="line">server.use(cookieParser(<span class="string">'wfdfdkfdsf'</span>));<span class="comment">// 传参能解析签过名的cookie</span></div><div class="line"></div><div class="line"><span class="comment">// cookie</span></div><div class="line">server.use(<span class="string">'/aaa/a.html'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    req.secret = <span class="string">'wfdfdkfdsf'</span>;<span class="comment">// 加密,密钥,签名,上面有了这里可以不写会自动加</span></div><div class="line"></div><div class="line">    res.cookie(<span class="string">'user'</span>,<span class="string">'blue'</span>,&#123;<span class="comment">// 写入cookie</span></div><div class="line">        signed: <span class="literal">true</span>,<span class="comment">// 签名</span></div><div class="line">        path: <span class="string">'/aaa'</span>,<span class="comment">// 只有aaa路径下可以访问</span></div><div class="line">        maxAge: <span class="number">30</span> * <span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span><span class="comment">// 30天后过期</span></div><div class="line">    &#125;);<span class="comment">// 放在send之前</span></div><div class="line"></div><div class="line">    <span class="comment">// 加密的/签名过的cookie</span></div><div class="line">    <span class="built_in">console</span>.log(req.signedCookies);</div><div class="line">    <span class="comment">// 无加密的/没签名的cookie</span></div><div class="line">    <span class="comment">// console.log(req.cookies);</span></div><div class="line">    res.send(<span class="string">'ok'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line"><span class="comment">// decodeURIComponent('加密的值')，还是能看见内容，只能知道是否被篡改</span></div><div class="line"><span class="comment">// cookie-encrypter加密cookie</span></div></pre></td></tr></table></figure></p>
<p>删除cookie<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line"></div><div class="line">server.use(cookieParser());</div><div class="line"></div><div class="line">server.use(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    res.clearCookie(<span class="string">'user'</span>);</div><div class="line"></div><div class="line">    res.send(<span class="string">'ok'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div></pre></td></tr></table></figure></p>
<p>session<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>);</div><div class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">'cookie-session'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line"></div><div class="line">server.use(cookieParser());<span class="comment">// 先解析</span></div><div class="line">server.use(cookieSession(&#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">'sess'</span>,<span class="comment">// 修改session的名字</span></div><div class="line">    keys: [<span class="string">'aaa'</span>,<span class="string">'bbb'</span>,<span class="string">'ccc'</span>],</div><div class="line">    <span class="attr">maxAge</span>: <span class="number">2</span> * <span class="number">3600</span> * <span class="number">1000</span><span class="comment">// session的有效期2小时</span></div><div class="line">&#125;));</div><div class="line"></div><div class="line">server.use(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(req.session[<span class="string">'count'</span>] == <span class="literal">null</span>)&#123;</div><div class="line">        req.session[<span class="string">'count'</span>] = <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        req.session[<span class="string">'count'</span>] ++;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">console</span>.log(req.session[<span class="string">'count'</span>]);</div><div class="line"></div><div class="line">    res.send(<span class="string">'ok'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line"><span class="comment">// 删除session:delete req.session</span></div></pre></td></tr></table></figure></p>
<h2 id="jade"><a href="#jade" class="headerlink" title="jade"></a>jade</h2><p>最基本渲染<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> jade = <span class="built_in">require</span>(<span class="string">'jade'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> str = jade.render(<span class="string">'html'</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(str);</div></pre></td></tr></table></figure></p>
<p>jade<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> jade = <span class="built_in">require</span>(<span class="string">'jade'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> str = jade.renderFile(<span class="string">'./views/1.jade'</span>,&#123;<span class="comment">// 同步的,调试阶段要加</span></div><div class="line">    pretty: <span class="literal">true</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(str);</div></pre></td></tr></table></figure></p>
<p>1.jade<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">html</div><div class="line">    head</div><div class="line">        style</div><div class="line">        script</div><div class="line">    body</div><div class="line">        div</div><div class="line">        ul</div><div class="line">            li</div><div class="line">        div</div></pre></td></tr></table></figure></p>
<p>ejs<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">'ejs'</span>);</div><div class="line"></div><div class="line">ejs.renderFile(<span class="string">'./views/1.ejs'</span>,&#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">'yangk'</span></div><div class="line">&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(err)&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'编译失败'</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(data);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>1.ejs<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">%=</span> <span class="attr">name</span> %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>写入对应文件<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> jade = <span class="built_in">require</span>(<span class="string">'jade'</span>);</div><div class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> str = jade.renderFile(<span class="string">'./views/1.jade'</span>,&#123;</div><div class="line">    <span class="attr">pretty</span>: <span class="literal">true</span>,</div><div class="line">    <span class="attr">name</span>: <span class="string">"aaa"</span>,</div><div class="line">    <span class="attr">a</span>: <span class="number">6</span>,</div><div class="line">    <span class="attr">b</span>: <span class="number">7</span>,</div><div class="line">    <span class="attr">arr</span>: [<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>],</div><div class="line">    <span class="attr">content</span>: <span class="string">"&lt;h2&gt;hello world&lt;/h2&gt;"</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line">fs.writeFile(<span class="string">'./build/1.html'</span>,str,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(err)&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'写入失败'</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'写入成功'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(str);</div></pre></td></tr></table></figure></p>
<p>属性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">div#div1</div><div class="line">script(src=&quot;a.js&quot;)</div><div class="line">link(href=&quot;a.css&quot;,rel=&quot;stylesheet&quot;)</div><div class="line">input(type=&quot;text&quot;,id=&quot;input1&quot;,value=&quot;222&quot;)</div></pre></td></tr></table></figure></p>
<p>内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">a(href=&quot;http://www.baidu.com&quot;) 百度</div><div class="line"></div><div class="line">单行内容原样输出</div><div class="line">a</div><div class="line">    |abc</div><div class="line"></div><div class="line">里面下一级所有内容原样输出</div><div class="line">script.</div><div class="line">    window.onload = function()&#123;</div><div class="line">        alert(1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">下面这种形式也是直接怼进去</div><div class="line">script</div><div class="line">    include a.js</div></pre></td></tr></table></figure></p>
<p>div里有内容和标签，标签里面又有内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">div aaa</div><div class="line">    span bbb</div></pre></td></tr></table></figure></p>
<p>style/class<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ul(class=&quot;a b c&quot;)</div><div class="line"></div><div class="line">ul(class=[&apos;a&apos;,&apos;b&apos;,&apos;c&apos;])</div><div class="line"></div><div class="line">div(style=&quot;width:100px;height:100px;background:red;&quot;)</div><div class="line"></div><div class="line">div(style=&#123;width: &apos;200px&apos;,height: &apos;200px&apos;,background: &apos;red&apos;&#125;)</div></pre></td></tr></table></figure></p>
<p>普通标签也想用json的形式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">div&amp;attributes(&#123;title: &apos;aaa&apos;,id: &quot;div1&quot;&#125;)</div></pre></td></tr></table></figure></p>
<p>变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">div 我的名字：#&#123;name&#125;</div><div class="line"></div><div class="line">div sum:#&#123;a+b&#125; // 运算</div><div class="line"></div><div class="line">div(style=json) // 直接变量，不需要花括号</div><div class="line">div(class=arr)</div><div class="line"></div><div class="line">div(class=arr class=&quot;active&quot;) // 自动融入自己的</div></pre></td></tr></table></figure></p>
<p>代码的标识<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-var a = 12;</div><div class="line">-var b = 5;</div><div class="line">div 结果是：#&#123;a+b&#125;</div></pre></td></tr></table></figure></p>
<p>=<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">span #&#123;a&#125;</div><div class="line">span #&#123;b&#125;</div><div class="line"></div><div class="line">span=a</div><div class="line">span=b</div></pre></td></tr></table></figure></p>
<p>遍历数组中的内容都对应到每一个标签中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-for(var i = 0;i &lt; arr.length;i ++)</div><div class="line">    div=arr[i]</div></pre></td></tr></table></figure></p>
<p>转义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">div=content // 转义content</div><div class="line">div!=content // 不转义</div></pre></td></tr></table></figure></p>
<p>if<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">-var a=12;</div><div class="line">-if(a%2==0)</div><div class="line">    div(style=&#123;background:&apos;red&apos;&#125;)</div><div class="line">-else</div><div class="line">    div(style=&#123;background:&apos;green&apos;&#125;)</div><div class="line"></div><div class="line">可以省略后面的横杠</div><div class="line">-var a=12;</div><div class="line">if(a%2==0)</div><div class="line">    div(style=&#123;background:&apos;red&apos;&#125;)</div><div class="line">else</div><div class="line">    div(style=&#123;background:&apos;green&apos;&#125;)</div></pre></td></tr></table></figure></p>
<p>switch<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-var a=2;</div><div class="line">case a</div><div class="line">    when 0</div><div class="line">        div aaa</div><div class="line">    when 1</div><div class="line">        div bbb</div><div class="line">    default</div><div class="line">        |啥都不是</div></pre></td></tr></table></figure></p>
<p>小例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">doctype</div><div class="line">html</div><div class="line">    head</div><div class="line">        meta(charset=&quot;utf-8&quot;)</div><div class="line">        title jade测试页面</div><div class="line">        style.</div><div class="line">            div&#123;width:100px;height:100px;background:red;float:left;margin-top:10px;&#125;</div><div class="line">            div.last&#123;clear:left;&#125;</div><div class="line">    body</div><div class="line">        -var a=0;</div><div class="line">        while a&lt;12</div><div class="line">            if a%4==0 &amp;&amp; a!=0</div><div class="line">                div.last #&#123;a++&#125;</div><div class="line">            else</div><div class="line">                div #&#123;a++&#125;</div></pre></td></tr></table></figure></p>
<h2 id="ejs"><a href="#ejs" class="headerlink" title="ejs"></a>ejs</h2><p>基本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;%= name %&gt;</div><div class="line">&lt;%= json.arr[0].user %&gt;</div></pre></td></tr></table></figure></p>
<p>简单循环<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;Document&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">    &lt;% for(var i = 0;i &lt; json.arr.length;i ++)&#123; %&gt;</div><div class="line">    &lt;div&gt;用户名:&lt;%= json.arr[i].user %&gt;密码:&lt;%= json.arr[i].pass %&gt;&lt;/div&gt;</div><div class="line">    &lt;% &#125; %&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<p>避免转义输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;%</div><div class="line">    var str = &quot;&lt;div&gt;&lt;/div&gt;&quot;;</div><div class="line">%&gt;</div><div class="line">&lt;%- str %&gt;</div></pre></td></tr></table></figure></p>
<p>include<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;% include a.txt %&gt;</div><div class="line"></div><div class="line">&lt;% for(var i = 0;i &lt; 5;i ++)&#123; %&gt;</div><div class="line">&lt;% include a.txt %&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure></p>
<p>判断<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">// include后面不认变量，需要写死的，需要外面判断来展示不同的情况</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;title&gt;Document&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">    &lt;% if(type==&apos;admin&apos;)&#123; %&gt;</div><div class="line">        &lt;% include ../style/admin.css %&gt;</div><div class="line">    &lt;%&#125; else&#123; %&gt;</div><div class="line">        &lt;% include ../style/user.css %&gt;</div><div class="line">    &lt;% &#125; %&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);<span class="comment">// 上传文件时只能处理enctype="application/x-www-form-urlencoded"，表单默认</span></div><div class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">'multer'</span>);</div><div class="line"><span class="keyword">const</span> pathLib = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"></div><div class="line"><span class="comment">// base 文件名+扩展名</span></div><div class="line"><span class="comment">// ext 扩展名</span></div><div class="line"><span class="comment">// dir 路径</span></div><div class="line"><span class="comment">// name 文件名</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> objMulter = multer(&#123;</div><div class="line">    <span class="attr">dest</span>: <span class="string">'./www/upload/'</span><span class="comment">// 存</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line"></div><div class="line"><span class="comment">// server.use(objMulter.single('f1'));// 指定</span></div><div class="line">server.use(objMulter.any());<span class="comment">// any</span></div><div class="line"></div><div class="line">server.use(bodyParser.urlencoded(&#123;</div><div class="line">    <span class="attr">extended</span>: <span class="literal">false</span></div><div class="line">&#125;));</div><div class="line"></div><div class="line">server.post(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</div><div class="line">    <span class="comment">// console.log(req.body);</span></div><div class="line">    <span class="comment">// console.log(req.files[0].originalname);</span></div><div class="line"></div><div class="line">    <span class="keyword">var</span> newName = req.files[<span class="number">0</span>].path + pathLib.parse(req.files[<span class="number">0</span>].originalname).ext;</div><div class="line">    fs.rename(req.files[<span class="number">0</span>].path,newName,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(err)&#123;</div><div class="line">            res.end(<span class="string">"上传失败"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            res.end(<span class="string">"上传成功"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line"><span class="comment">// 'www/upload/d3e3ae68670bfe6197a51352e65ef87b'</span></div><div class="line"><span class="comment">// 'www/upload/d3e3ae68670bfe6197a51352e65ef87b.png'</span></div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://localhost:8088/"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"f1"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"上传"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="一套流程"><a href="#一套流程" class="headerlink" title="一套流程"></a>一套流程</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"><span class="keyword">const</span> <span class="keyword">static</span> = <span class="built_in">require</span>(<span class="string">'express-static'</span>);</div><div class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">'cookie-parser'</span>);</div><div class="line"><span class="keyword">const</span> cookieSession = <span class="built_in">require</span>(<span class="string">'cookie-session'</span>);</div><div class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>);</div><div class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">'ejs'</span>);</div><div class="line"><span class="keyword">const</span> jade = <span class="built_in">require</span>(<span class="string">'jade'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> server = express();</div><div class="line"></div><div class="line">server.listen(<span class="number">8088</span>);</div><div class="line"></div><div class="line"><span class="comment">// 解析cookie</span></div><div class="line"></div><div class="line">server.use(cookieParser(<span class="string">'fdfdsfkjffd'</span>));</div><div class="line"><span class="comment">// 使用session</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> arr = [];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; <span class="number">10000</span>;i ++)&#123;</div><div class="line">    arr.push(<span class="string">'keys_'</span> + <span class="built_in">Math</span>.random());</div><div class="line">&#125;</div><div class="line">server.use(cookieSession(&#123;</div><div class="line">    <span class="attr">name</span>: <span class="string">'sess_id'</span>,</div><div class="line">    <span class="attr">keys</span>: arr,</div><div class="line">    <span class="attr">maxAge</span>: <span class="number">20</span> * <span class="number">3600</span> * <span class="number">1000</span><span class="comment">// 20分钟</span></div><div class="line">&#125;));</div><div class="line"><span class="comment">// post数据</span></div><div class="line"></div><div class="line">server.use(bodyParser.urlencoded(&#123;</div><div class="line">    <span class="attr">extended</span>: <span class="literal">false</span></div><div class="line">&#125;));</div><div class="line"></div><div class="line"><span class="comment">// 用户请求</span></div><div class="line"></div><div class="line">server.use(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res,next</span>)</span>&#123;</div><div class="line"></div><div class="line">    <span class="built_in">console</span>.log(req.query,req.body,req.cookies,req.session);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// static数据</span></div><div class="line"></div><div class="line">server.use(<span class="keyword">static</span>(<span class="string">'./www'</span>));</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;FS-API的应用&quot;&gt;&lt;a href=&quot;#FS-API的应用&quot; class=&quot;headerlink&quot; title=&quot;FS API的应用&quot;&gt;&lt;/a&gt;FS API的应用&lt;/h2&gt;&lt;p&gt;需求：展示当前目录下列表并给出选择，当选择文件时显示内容，选择目录时，显示该目录下文件信息。
    
    </summary>
    
      <category term="Node" scheme="http://wwww.yesokiloveyou.com/categories/Node/"/>
    
    
      <category term="Node笔记" scheme="http://wwww.yesokiloveyou.com/tags/Node%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo备份</title>
    <link href="http://wwww.yesokiloveyou.com/2016/11/12/backups/"/>
    <id>http://wwww.yesokiloveyou.com/2016/11/12/backups/</id>
    <published>2016-11-12T13:53:15.000Z</published>
    <updated>2016-11-24T18:36:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo源文件一定一定要备份，同时实现多台电脑同步写作的目的，下面是我的方法：</p>
<p>#新建分支，删除分支命令：git branch -d source<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch <span class="built_in">source</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>#切换到source分支<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout <span class="built_in">source</span></div></pre></td></tr></table></figure></p>
<p>#add<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git add .</div></pre></td></tr></table></figure></p>
<p>#注意提交操作是在source分支下进行的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit -m <span class="string">'.'</span></div></pre></td></tr></table></figure></p>
<p>#正常push即可，要指定分支的名字，需要拉取操作时一样要指定名字，就像git pull origin source<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push -u origin <span class="built_in">source</span></div></pre></td></tr></table></figure></p>
<p>#若要切换回主分支时，发现新建的文章或source分支开发的内容会不见了，<strong>需要merge一下就出来了</strong>，一直merge保持分支同步是好的，但有时也有点麻烦，例如当你删除一篇文章并提交后，回到主分支发现却还在，此时还需要再次merge删除主分支的，所以建议一直在source目录下进行一切工作就可以了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge <span class="built_in">source</span></div></pre></td></tr></table></figure></p>
<p>以上是备份source目录同时不影响本地部署的方法，然后切换另外一台电脑时只需：<br>1、 全局安装hexo-cli<br>2、 连接Git远程仓库<br>3、 拉取source资源：git pull origin source<br>4、 安装依赖包：cnpm install<br><strong>此时两台电脑上的内容就完全一样了，备份的方法同上。</strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo源文件一定一定要备份，同时实现多台电脑同步写作的目的，下面是我的方法：&lt;/p&gt;
&lt;p&gt;#新建分支，删除分支命令：git branch -d source&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git branch &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="备份" scheme="http://wwww.yesokiloveyou.com/tags/%E5%A4%87%E4%BB%BD/"/>
    
  </entry>
  
  <entry>
    <title>适配移动端</title>
    <link href="http://wwww.yesokiloveyou.com/2016/11/12/rem/"/>
    <id>http://wwww.yesokiloveyou.com/2016/11/12/rem/</id>
    <published>2016-11-11T18:36:44.000Z</published>
    <updated>2016-11-22T13:33:30.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常见方式"><a href="#常见方式" class="headerlink" title="常见方式"></a>常见方式</h3><p>固定宽度(320)做法，移动端刚兴起时这么做过一段时间，重构倒是爽了，可是大页面两边有留白，小页面图标文字又会缩的很小，用户体验极其不好。<a id="more"></a></p>
<p>流式布局，其实就是用%，这样宽度倒还好写，高度就麻烦了，所以这种布局一般都是宽度自适应高度写死或者高度也用%，注意高度%是相对于父级宽度来算的，高度写死会显的不协调，高度%比会相对复杂，基本上桌面一直开个计算器是必须的，另外对设计也有很大的限制，复杂点的设计也不易实现。</p>
<p>响应式布局，说白了就是利用CSS3中的Media Query（媒介查询），不同设备尺寸对应不同的样式，也就是说你要准备多套样式，开始喊的很火，谁用谁知道，简直累死人不要命，个人认为其适用场景更适合局部页面的调整和适配。</p>
<p>设置viewport进行缩放：以320宽度为基准，进行缩放，最大缩放为320*1.3 = 416，基本缩放到416都就可以兼容iphone6 plus的屏幕了，例如想下面这样：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=320,maximum-scale=1.3,user-scalable=no"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>利用vh、vw适配：兼容性太差。</p>
<h3 id="rem是什么"><a href="#rem是什么" class="headerlink" title="rem是什么"></a>rem是什么</h3><p>rem是一个相对根元素html字体大小的单位，所以rem表示的大小是由html的fontSize大小决定的。</p>
<p>假如我把html的fontSize设置为10px，此时的1rem就等于10px，假如我把html的fontSize设置为100px，此时的1rem就等于100px，这也正是我们能用rem做移动端适配的根本原因，就是通过不同屏幕下改变根元素fontSize的大小，从而让以rem为单位的各种元素自动随着改变。</p>
<h3 id="适配标准"><a href="#适配标准" class="headerlink" title="适配标准"></a>适配标准</h3><p>通过下面这句话获得<a href="http://www.cnblogs.com/2050/p/3877280.html" target="_blank" rel="external">理想视口</a>（ideal viewport）：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>既然要适配，就要选一个理想视口做基准，然后才能在此基础上等比缩放（这里等比缩放最好不包括文字，后面讲原因），我们一般选择iphone6的375，为什么选它呢？</p>
<p>因为市场上的Android机五花八门（理想视口宽一般在320-480之间），且没有任何一款的占有率能和iphone相比，选取iphone中的iphone6能更好的向下适配iphone5和向上适配iphone6 plus等，关于各机型的理想视口（ideal viewport）详见<a href="http://viewportsizes.com/" target="_blank" rel="external">VIEWPORT SIZES</a></p>
<h3 id="设计图"><a href="#设计图" class="headerlink" title="设计图"></a>设计图</h3><p>上面说了我们要以iphone6为基准，那么设计图我们做成多大呢？</p>
<p>设计图做成750px宽，因为iphone6的物理像素是750（上面我们说的375是它的设备独立像素，又是理想视口），我们要想做到高清就要1个设计像素对应一个物理像素才成，他们之间的关系见下表：</p>
<table>
<thead>
<tr>
<th></th>
<th>iPhone6 plus</th>
<th>iPhone6</th>
<th>iPhone5</th>
</tr>
</thead>
<tbody>
<tr>
<td>物理像素(physical pixel)</td>
<td>看公式</td>
<td>看公式</td>
<td>看公式</td>
</tr>
<tr>
<td>设备独立像素(density-independent pixel)</td>
<td>414x736</td>
<td>375×667</td>
<td>320x568</td>
</tr>
<tr>
<td>设备像素比(device pixel ratio)</td>
<td>3</td>
<td>2</td>
<td>2</td>
</tr>
</tbody>
</table>
<p>设备像素比（dpr），我们可以通过JavaScript获取的办法是：window.devicePixelRatio，用CSS获取的办法是-webkit-device-pixel-ratio，我们可以用-webkit-min-device-pixel-ratio和-webkit-max-device-pixel-ratio进行媒体查询，以达到适配不同dpr的需求。</p>
<h3 id="用CSS适配"><a href="#用CSS适配" class="headerlink" title="用CSS适配"></a>用CSS适配</h3><p>原理：用媒体查询理想视口（上面我们把width=device-width了，所以查询width即可），不同理想视口设置不同的根元素fontSize。</p>
<p>一张750的设计稿，假如其根元素为100px（为什么是100px而不是其他的呢？），此时我想表示一个750px*100px的div，我只需要写成：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span>&#123;<span class="attribute">width</span>:<span class="number">7.5rem</span>; <span class="attribute">height</span>:<span class="number">1rem</span>;&#125;</div></pre></td></tr></table></figure>
<p>那么问题来了，我在iphone6下把根元素字体设为多大才能让这个div等比显示呢？要想等比显示那么他们之间有这样一个关系：</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">100px / 750 = iphone6 根元素fontSize / iphone6理想视宽（375）</div></pre></td></tr></table></figure>
<p>根据上面公式算出iphone6 根元素fontSize = 50px，也就是在iphone6下我们只需要改变根元素fontSize为50px就可以做到等比缩放啦~~</p>
<p>那么问题又来了，手机那么多，各种机型的理想宽度也数不胜数（其实大多都在320到480之间，上面有说），那么其对应根元素fontSize我该怎么写呢？</p>
<p>作为一个CSSer，我们最先想到的可能是媒体<strong>断点</strong>查询，例如像下面这样：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">321px</span>) and (max-width:<span class="number">375px</span>)&#123;</div><div class="line">　　<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">42px</span>&#125;</div><div class="line">&#125;</div><div class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">376px</span>) and (max-width:<span class="number">414px</span>)&#123;</div><div class="line">　　<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">50px</span>&#125;</div><div class="line">&#125;</div><div class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">415px</span>) and (max-width:<span class="number">639px</span>)&#123;</div><div class="line">　　<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">55px</span>&#125;</div><div class="line">&#125;</div><div class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">640px</span>) and (max-width:<span class="number">719px</span>)&#123;</div><div class="line">　　<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">85px</span>&#125;</div><div class="line">&#125;</div><div class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">720px</span>) and (max-width:<span class="number">749px</span>)&#123;</div><div class="line">　　<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">95</span>x&#125;</div><div class="line">&#125;</div><div class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">750px</span>) and (max-width:<span class="number">800px</span>)&#123;</div><div class="line">　　<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>:<span class="number">100px</span>&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面的缺点一目了然，就是不够精细嘛，例如415-639理想视宽的手机显示的东西却是一样大，对于像素级要求的我们这怎么能成呢？</p>
<p>于是乎我用sass把从320到750全部算一遍不就可以啦，就像下面这样：</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">media</span> (max-width: 320px)&#123;</div><div class="line">　　<span class="selector-tag">html</span>&#123; <span class="attribute">font-size</span>: <span class="number">266.66667%</span>; &#125;</div><div class="line">&#125;</div><div class="line">@<span class="keyword">for</span> <span class="variable">$i</span> from 320 through 750 &#123;@<span class="keyword">media</span> (width:#&#123;<span class="variable">$i</span>&#125;px)&#123;</div><div class="line">　　<span class="selector-tag">html</span>&#123;<span class="attribute">font-size</span>: <span class="variable">$i</span>/<span class="number">1.2</span> * <span class="number">1%</span>&#125;&#125;</div><div class="line">&#125;</div><div class="line">@media (min-width: <span class="number">750px</span>)&#123;</div><div class="line">　　html&#123; font-size: <span class="number">625%</span>; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="/resources/files/sass-result.css">Sass生成结果（景象过于壮观慎入）</a>，大功告成，这样我们不用JavaScript也能实现和其一样的精细效果了。使用时只需在头部引用这样一个CSS文件即可，假如750上你量出的div大小为width:85px;height:100px;，写的时候只需除以100即可，即width:.85rem;height:1rem;你要嫌除的麻烦sublime中可以装这么一个转换<a href="https://github.com/flashlizi/CSSrem" target="_blank" rel="external">插件</a>。</p>
<p>这时肯定会有人吐槽性能问题洛，当然这也必定不是好的方式，压缩后的media100px.css大概10几kb的样子，我看了下咱们移动网站的一个普通商品图大概是它的2倍，拿两个东西进行比较是有点不太妥当，具体增加这么些样式会影响多大性能暂未验证。</p>
<p>之所以在750下把根元素设为100而不是其他，是因为方便计算嘛，1rem等于100px，.2rem就等与20px这样多好算啊，有人会问你丫设为10不一样好算啊，话说一般浏览器显示的最小字号是12px，所以就100啦，当然数学好的你用其他值也是可以的。</p>
<p>上面用Sass生成的css根元素字体大小我是用%号表示的，就是100px，我写的是625%，有人可能会问你这干嘛多此一举呢，625%不就是100px嘛，有人给出了下面几个理由，我抄下来共大家参考：</p>
<ul>
<li>一般设备的默认字体大一定是16px，特别是高分辨率的设备，设置成百分比可以按照设备的基准字体大小给编写的网页设置好最适合用户浏览的字体大小</li>
<li>这样写是兼容未来趋势的综合考虑，px这个单位的含义已经越来越混乱，几乎无法评估以后的设备是否会像现在这样对网页上的px做兼容处理，但用百分比代表默认字体尺寸基本不会混乱</li>
</ul>
<h3 id="用JavaScript适配"><a href="#用JavaScript适配" class="headerlink" title="用JavaScript适配"></a>用JavaScript适配</h3><p>上面直接引用media100px.css的确不是最好的方案，你知道我要说什么啦，那就是用JavaScript适配，其实我们把上面的Sass循环改成用JS写就好了，就像下面这样：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">!(<span class="function"><span class="keyword">function</span>(<span class="params">doc, win</span>) </span>&#123;</div><div class="line">　　<span class="keyword">var</span> docEle = doc.documentElement,</div><div class="line">　　evt = <span class="string">"onorientationchange"</span> <span class="keyword">in</span> <span class="built_in">window</span> ? <span class="string">"orientationchange"</span> : <span class="string">"resize"</span>,<span class="comment">//区分Mobile和PC以加载不同的事件</span></div><div class="line">　　fn = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">　　　　<span class="keyword">var</span> width = docEle.clientWidth;</div><div class="line">　　　　<span class="keyword">if</span>( width &lt; <span class="number">320</span> ) &#123;</div><div class="line">　　　　　　docEle.style.fontSize = <span class="number">42.6667</span> + <span class="string">"px"</span>;</div><div class="line">　　　　&#125;</div><div class="line">　　　　<span class="keyword">else</span> <span class="keyword">if</span>( width &gt; <span class="number">750</span> ) &#123;</div><div class="line">　　　　　　docEle.style.fontSize = <span class="number">100</span> + <span class="string">"px"</span>;</div><div class="line">　　　　&#125;</div><div class="line">　　　　<span class="keyword">else</span> &#123;</div><div class="line">　　　　　　<span class="comment">//以750设计稿宽度为基准设置fontSize:100px;这样保证iPhone6以下是高清</span></div><div class="line">　　　　　　docEle.style.fontSize = <span class="number">100</span> * (width / <span class="number">750</span>) + <span class="string">"px"</span>;</div><div class="line">　　　　&#125;</div><div class="line">　　&#125;;</div><div class="line">　　win.addEventListener(evt, fn, <span class="literal">false</span>);</div><div class="line">　　<span class="comment">//load事件是在页面所有元素都加载完后触发；</span></div><div class="line">　　<span class="comment">//DOMContentLoaded，它是指dom tree加载完就触发,页面引用的样式表和图像文件可能还没有加载完成</span></div><div class="line">　　doc.addEventListener(<span class="string">"DOMContentLoaded"</span>, fn, <span class="literal">false</span>);</div><div class="line">&#125;(<span class="built_in">document</span>, <span class="built_in">window</span>));</div></pre></td></tr></table></figure>
<p>在使用的时候你可以单独引用这样一段JS （看上面我又不用%而用px啦，测试（chrome模拟手机测试的）后发现%和px最终形成网页效果并无差别），不使用不引用即可；或者把这段JS放在公共JS文件里，而对于不想使用rem的同学只需覆盖JS设置的样式即可，例如像下面这样：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">html&#123;font-size:20px!important;&#125;//这里移动端默认字体大小根据情况自己设置</div></pre></td></tr></table></figure>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>文字<strong>最好</strong>不要用rem表示，因为：</p>
<ul>
<li>设计师一般希望是文字在移动设备上的显示大小是一样的，也就是我们所说的等比适配（注意是等比适配不包括，不是适配）是不应包括文字的</li>
<li>我们用rem后文字会很小（虽然这正是等比缩放的结果），当然这也和设计有关（理论上字体需要等比适配的话750px设计图上是不应该有小于24px字体出现的，既然有也说明字体不应该等比适配），例如我在设计图上量取的文字大小是24px，那么其iphone6下的显示大小就是.24rem*50=12px，而设计图上哪些24以下的字体此时也会显示12px（假如最小字体是12的话），这也会有另外一个问题，就是设计图上明明是不同字体大小表示的文案，在手机上显示的大小却是一样的，起不到设计师想要表达的区分或者强调的作用</li>
<li>网上有说会变模糊之类的，我暂时未发现（暴漏了我依然表示字体用rem表示的…）</li>
</ul>
<p>1px和2px不要写成.01rem和.02rem，因为：</p>
<ul>
<li>以750适配的方案为例，当理想视口为320时，其对应font-size: 266.66667%; 然后乘以默认字体大小16px，最后为42.6666672px，也就是43px，若写为.01rem或.02rem表示分别对应.42px或.96px，在直接取整的浏览器下是显示不出来的。所以对于1像素边框的就不要写.01rem啦</li>
</ul>
<ul>
<li>当我们写1px时，实际在dpr为2的手机下显示的是2个物理像素，看起来会粗一点，解决方案可以参照淘宝的<a href="https://github.com/amfe/lib-flexible" target="_blank" rel="external">flexible</a>，其原理是根据dpr的不同动态设置initial-scale的值，也可以用CSS中transform的属性值scale缩放来实现。</li>
</ul>
<p><strong>注：以上JavaScript适配方案是一种思路或者中心思想，在实际使用中会有其他一些问题需要注意，具体可以参考淘宝的</strong><a href="https://github.com/amfe/lib-flexible" target="_blank" rel="external">flexible解决方法</a><strong>，也是目前我们在使用的。</strong></p>
<h3 id="相关文章参考"><a href="#相关文章参考" class="headerlink" title="相关文章参考"></a>相关文章参考</h3><p><a href="http://www.cnblogs.com/2050/p/3877280.html" target="_blank" rel="external">移动前端开发之viewport的深入理解</a></p>
<p><a href="http://div.io/topic/1092" target="_blank" rel="external">移动端高清、多屏适配方案</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常见方式&quot;&gt;&lt;a href=&quot;#常见方式&quot; class=&quot;headerlink&quot; title=&quot;常见方式&quot;&gt;&lt;/a&gt;常见方式&lt;/h3&gt;&lt;p&gt;固定宽度(320)做法，移动端刚兴起时这么做过一段时间，重构倒是爽了，可是大页面两边有留白，小页面图标文字又会缩的很小，用户体验极其不好。
    
    </summary>
    
      <category term="HTML/CSS" scheme="http://wwww.yesokiloveyou.com/categories/HTML-CSS/"/>
    
    
      <category term="rem" scheme="http://wwww.yesokiloveyou.com/tags/rem/"/>
    
  </entry>
  
</feed>
